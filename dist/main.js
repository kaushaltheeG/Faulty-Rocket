/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/typewriting-console */ \"./src/scripts/typewriting-console.js\");\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n\n\nconst RANDOM_QUOTE_API_URL = \"https://api.quotable.io/random?minLength=100&maxLength=450\";\nconst quoteDisplay = document.getElementById(\"quoteDisplay\");\nconst quoteInput = document.getElementById(\"quoteInput\");\nconst timer = document.getElementById(\"timer\");\nconst canvasEl = document.getElementById(\"rocket-canvas\");\nconst ctx = canvasEl.getContext(\"2d\");\n// document.body.appendChild(quoteInput);\ncanvasEl.width = 500;\ncanvasEl.height = 500;\n// let game = new Game(ctx, 50000);\n// game.animate();\n// game.draw();\n\nasync function getRandomQuote() {\n  try {\n    const res = await fetch(RANDOM_QUOTE_API_URL);\n    if (res.ok) {\n      let data = await res.json();\n      return data.content;\n    } else {\n      let data = await res.join();\n      throw data.meta.msg;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n// window.getRandomQuote = getRandomQuote;\n\nlet charCount;\nlet charHash = {},\n  errorArr = [];\nlet pastRunKey = 1;\nlet errorCount, startTime, pastTime;\nasync function renderNewQuote() {\n  let pastRunInstance;\n  if (pastTime) {\n    pastRunInstance = pastRunData(charHash[pastRunKey - 1], pastTime, errorCount);\n    console.log(`past run data: charCount ${pastRunInstance.characterCount} time: ${pastRunInstance.time} errors: ${pastRunInstance.errors}`);\n    let game = new _scripts_game__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx, pastRunInstance.adjTime);\n    // game.typeWC = pastRunInstance.adjTime;\n    game.animate();\n  }\n  errorCount = 0;\n  errorArr = [];\n  const quote = await getRandomQuote();\n  quoteDisplay.innerHTML = \"\";\n  quoteInput.value = null;\n  charCount = 0;\n  quote.split('').forEach(char => {\n    charCount++;\n    let span = document.createElement(\"span\");\n    span.className = 'rendered-quote';\n    span.innerHTML = char;\n    quoteDisplay.appendChild(span);\n  });\n  charHash[pastRunKey] = charCount;\n  pastRunKey++;\n  startTimer();\n}\n\n//to check if your input matches the rendered quote\nquoteInput.addEventListener('input', e => {\n  const quoteSpanArr = quoteDisplay.querySelectorAll(\".rendered-quote\");\n  const inputValArr = quoteInput.value.split('');\n  let finished = true,\n    caughtErrors;\n  quoteSpanArr.forEach((charSpan, i) => {\n    const inputChar = inputValArr[i];\n    if (inputChar == null) {\n      charSpan.classList.remove('correct');\n      charSpan.classList.remove('incorrect');\n      finished = false;\n    } else if (inputChar === charSpan.innerHTML) {\n      charSpan.classList.add('correct');\n      charSpan.classList.remove('incorrect');\n      finished = true;\n    } else {\n      charSpan.classList.remove('correct');\n      charSpan.classList.add('incorrect');\n      finished = false;\n      caughtErrors = _catchErors(quoteSpanArr);\n      if (errorCount < caughtErrors) errorCount = caughtErrors;\n    }\n  });\n  console.log('error arr: ' + errorArr);\n  if (finished) renderNewQuote();\n});\nfunction _catchErors(quoteSpan) {\n  quoteSpan.forEach((span, i) => {\n    if (span.className === 'rendered-quote incorrect' && !errorArr.includes(i)) errorArr.push(i);\n  });\n  return errorArr.length;\n}\n\n//timer \nfunction startTimer() {\n  // console.log(charHash, pastTime, errorCount)\n\n  timer.innerHTML = `00:00`;\n  startTime = new Date();\n  setInterval(() => {\n    let currentTime = getTime();\n    timer.innerHTML = renderTimeAsClock(currentTime);\n    pastTime = timer.innerHTML;\n  }, 1000);\n  // let pastRunInstance = pastRunData(charCount, pastTime, errorCount)\n  // console.log(pastRunInstance)\n}\n\nfunction getTime() {\n  return Math.floor((new Date() - startTime) / 1000);\n}\nfunction renderTimeAsClock(time) {\n  if (time < 60) {\n    if (time < 10) return `00:0${time}`;\n    return `00:${time}`;\n  } else {\n    let min = Math.floor(time / 60);\n    let seconds = time % 60;\n    if (min < 10 && seconds < 10) {\n      return `0${min}:0${seconds}`;\n    } else if (min < 10 && seconds >= 10) {\n      return `0${min}:${seconds}`;\n    } else if (min >= 10 && seconds < 10) {\n      return `${min}:0${seconds}`;\n    } else {\n      return `${min}:${seconds}`;\n    }\n  }\n}\nfunction pastRunData(character, time, errors) {\n  const pastRun = new _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__[\"default\"](character, time, errors);\n  let wpm = pastRun.calculateWPM();\n  console.log(pastRun);\n  pastRun._pastCharCount(pastRun.characterCount);\n  pastRun._pastTimeCal(pastRun.time);\n  pastRun._pastErrorCount(pastRun.errors);\n  pastRun._pastWPM(wpm);\n  ctx.fillText(wpm, 100, 100);\n  return pastRun;\n}\nrenderNewQuote();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _typewriting_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typewriting-console */ \"./src/scripts/typewriting-console.js\");\n\nclass Game {\n  constructor(ctx, typeWC) {\n    this.ctx = ctx;\n    this.x = 0;\n    this.y = 0;\n    this.i = new Image();\n    this.typeWC = typeWC;\n    this.i.src = \"../../assests/stars-test.png\";\n  }\n  animate() {\n    console.log(this.i);\n    this.ctx.save();\n    this.ctx.clearRect(0, 0, 10, 10);\n    this.draw();\n    clearInterval(this.renderBackground());\n    this.renderBackground();\n    this.backgroundMove();\n    this.ctx.restore();\n  }\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(250, 400, 50, 0, 2 * Math.PI);\n    this.ctx.fill();\n  }\n  renderBackground() {\n    let that = this;\n    this.i.onload = function () {\n      that.ctx.drawImage(that.i, 0, that.y, 500, 500);\n      console.log(that.y);\n      if (that.y >= 499) {\n        that.y = 0;\n      }\n    };\n  }\n  backgroundMove() {\n    setInterval(() => {\n      this.y++;\n      // this.liftOff++;\n      this.ctx.drawImage(this.i, 0, this.y, 500, 500);\n      if (this.y >= 499) {\n        this.y = 0;\n      }\n    }, this.typeWC.adjTime);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBQ3hDLE1BQU1DLElBQUksQ0FBQztFQUN0QkMsV0FBVyxDQUFDQyxHQUFHLEVBQUVDLE1BQU0sRUFBRTtJQUNyQixJQUFJLENBQUNELEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0UsQ0FBQyxHQUFHLENBQUM7SUFDVixJQUFJLENBQUNDLENBQUMsR0FBRyxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxDQUFDLEdBQUcsSUFBSUMsS0FBSyxFQUFFO0lBQ3BCLElBQUksQ0FBQ0osTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0csQ0FBQyxDQUFDRSxHQUFHLEdBQUcsOEJBQThCO0VBRS9DO0VBRUFDLE9BQU8sR0FBRztJQUNOQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNMLENBQUMsQ0FBQztJQUNuQixJQUFJLENBQUNKLEdBQUcsQ0FBQ1UsSUFBSSxFQUFFO0lBQ2YsSUFBSSxDQUFDVixHQUFHLENBQUNXLFNBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7SUFDL0IsSUFBSSxDQUFDQyxJQUFJLEVBQUU7SUFDWEMsYUFBYSxDQUFDLElBQUksQ0FBQ0MsZ0JBQWdCLEVBQUUsQ0FBQztJQUN0QyxJQUFJLENBQUNBLGdCQUFnQixFQUFFO0lBQ3ZCLElBQUksQ0FBQ0MsY0FBYyxFQUFFO0lBQ3JCLElBQUksQ0FBQ2YsR0FBRyxDQUFDZ0IsT0FBTyxFQUFFO0VBQ3RCO0VBRUFKLElBQUksR0FBRztJQUNILElBQUksQ0FBQ1osR0FBRyxDQUFDaUIsU0FBUyxFQUFFO0lBQ3BCLElBQUksQ0FBQ2pCLEdBQUcsQ0FBQ2tCLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHQyxJQUFJLENBQUNDLEVBQUUsQ0FBQztJQUMxQyxJQUFJLENBQUNwQixHQUFHLENBQUNxQixJQUFJLEVBQUU7RUFDbkI7RUFFQVAsZ0JBQWdCLEdBQUc7SUFDZixJQUFJUSxJQUFJLEdBQUcsSUFBSTtJQUNmLElBQUksQ0FBQ2xCLENBQUMsQ0FBQ21CLE1BQU0sR0FBRyxZQUFZO01BQ3hCRCxJQUFJLENBQUN0QixHQUFHLENBQUN3QixTQUFTLENBQUNGLElBQUksQ0FBQ2xCLENBQUMsRUFBRSxDQUFDLEVBQUVrQixJQUFJLENBQUNuQixDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztNQUMvQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNhLElBQUksQ0FBQ25CLENBQUMsQ0FBQztNQUNuQixJQUFJbUIsSUFBSSxDQUFDbkIsQ0FBQyxJQUFJLEdBQUcsRUFBRTtRQUNmbUIsSUFBSSxDQUFDbkIsQ0FBQyxHQUFHLENBQUM7TUFDZDtJQUNKLENBQUM7RUFDTDtFQUVBWSxjQUFjLEdBQUc7SUFFYlUsV0FBVyxDQUFDLE1BQUs7TUFDYixJQUFJLENBQUN0QixDQUFDLEVBQUU7TUFDUjtNQUNBLElBQUksQ0FBQ0gsR0FBRyxDQUFDd0IsU0FBUyxDQUFDLElBQUksQ0FBQ3BCLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDRCxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztNQUMvQyxJQUFJLElBQUksQ0FBQ0EsQ0FBQyxJQUFJLEdBQUcsRUFBRTtRQUNmLElBQUksQ0FBQ0EsQ0FBQyxHQUFHLENBQUM7TUFDZDtJQUVKLENBQUMsRUFBRSxJQUFJLENBQUNGLE1BQU0sQ0FBQ3lCLE9BQU8sQ0FBQztFQUUzQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRmF1bHR5LVJvY2tldC8uL3NyYy9zY3JpcHRzL2dhbWUuanM/Y2RjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHlwZVdyaXRpbmdDb25zb2xlIGZyb20gXCIuL3R5cGV3cml0aW5nLWNvbnNvbGVcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUge1xuICAgIGNvbnN0cnVjdG9yKGN0eCwgdHlwZVdDKSB7XG4gICAgICAgIHRoaXMuY3R4ID0gY3R4XG4gICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgIHRoaXMueSA9IDA7XG4gICAgICAgIHRoaXMuaSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLnR5cGVXQyA9IHR5cGVXQztcbiAgICAgICAgdGhpcy5pLnNyYyA9IFwiLi4vLi4vYXNzZXN0cy9zdGFycy10ZXN0LnBuZ1wiO1xuICAgICAgXG4gICAgfVxuXG4gICAgYW5pbWF0ZSgpIHtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5pKTtcbiAgICAgICAgdGhpcy5jdHguc2F2ZSgpO1xuICAgICAgICB0aGlzLmN0eC5jbGVhclJlY3QoMCwwLCAxMCwgMTApO1xuICAgICAgICB0aGlzLmRyYXcoKVxuICAgICAgICBjbGVhckludGVydmFsKHRoaXMucmVuZGVyQmFja2dyb3VuZCgpKVxuICAgICAgICB0aGlzLnJlbmRlckJhY2tncm91bmQoKVxuICAgICAgICB0aGlzLmJhY2tncm91bmRNb3ZlKCk7XG4gICAgICAgIHRoaXMuY3R4LnJlc3RvcmUoKTtcbiAgICB9XG5cbiAgICBkcmF3KCkge1xuICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgdGhpcy5jdHguYXJjKDI1MCwgNDAwLCA1MCwgMCwgMiAqIE1hdGguUEkpO1xuICAgICAgICB0aGlzLmN0eC5maWxsKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyQmFja2dyb3VuZCgpIHtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgICAgICB0aGlzLmkub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhhdC5jdHguZHJhd0ltYWdlKHRoYXQuaSwgMCwgdGhhdC55LCA1MDAsIDUwMCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGF0LnkpO1xuICAgICAgICAgICAgaWYgKHRoYXQueSA+PSA0OTkpIHtcbiAgICAgICAgICAgICAgICB0aGF0LnkgPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gXG4gICAgfVxuICAgIFxuICAgIGJhY2tncm91bmRNb3ZlKCkge1xuICAgICAgICBcbiAgICAgICAgc2V0SW50ZXJ2YWwoKCk9PiB7XG4gICAgICAgICAgICB0aGlzLnkrK1xuICAgICAgICAgICAgLy8gdGhpcy5saWZ0T2ZmKys7XG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UodGhpcy5pLCAwLCB0aGlzLnksIDUwMCwgNTAwKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnkgPj0gNDk5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy55ID0gMFxuICAgICAgICAgICAgfSBcblxuICAgICAgICB9LCB0aGlzLnR5cGVXQy5hZGpUaW1lKVxuXG4gICAgfVxufVxuXG4iXSwibmFtZXMiOlsiVHlwZVdyaXRpbmdDb25zb2xlIiwiR2FtZSIsImNvbnN0cnVjdG9yIiwiY3R4IiwidHlwZVdDIiwieCIsInkiLCJpIiwiSW1hZ2UiLCJzcmMiLCJhbmltYXRlIiwiY29uc29sZSIsImxvZyIsInNhdmUiLCJjbGVhclJlY3QiLCJkcmF3IiwiY2xlYXJJbnRlcnZhbCIsInJlbmRlckJhY2tncm91bmQiLCJiYWNrZ3JvdW5kTW92ZSIsInJlc3RvcmUiLCJiZWdpblBhdGgiLCJhcmMiLCJNYXRoIiwiUEkiLCJmaWxsIiwidGhhdCIsIm9ubG9hZCIsImRyYXdJbWFnZSIsInNldEludGVydmFsIiwiYWRqVGltZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/typewriting-console.js":
/*!********************************************!*\
  !*** ./src/scripts/typewriting-console.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TypeWritingConsole; }\n/* harmony export */ });\nclass TypeWritingConsole {\n  constructor(characterCount, time, errors) {\n    console.log('hi from twc');\n    this.characterCount = characterCount;\n    this.time = time;\n    this.errors = errors;\n    this.minutes = parseInt(this.time.slice(0, 2));\n    this.seconds = parseInt(this.time.slice(3));\n    this.adjTime = function adjustTime() {\n      let adjSec = this.seconds / 60;\n      return this.minutes + adjSec;\n    };\n    console.log(this.adjTime);\n  }\n  adjustTime() {\n    let adjSec = this.seconds / 60;\n    return this.minutes + adjSec;\n  }\n  calculateWPM() {\n    /*\n    A word is any 5+ char count \n    Gross WPM = (totalChars/5) / time(min)\n    Net WPM = Gros WPM - (errors / time(min))\n            = [(totalChars/5) - errors] / time(min)\n    */\n    let words = this.characterCount / 5;\n    let netWPM = Math.floor(Math.abs(words - this.errors) / this.adjustTime());\n    return netWPM;\n  }\n  _pastTimeCal(time) {\n    if (time) {\n      const pastTimeEle = document.getElementById('past-time');\n      pastTimeEle.innerHTML = \"\";\n      const span = document.createElement(\"span\");\n      span.innerHTML = `Past Run Time: ${time}`;\n      pastTimeEle.appendChild(span);\n    }\n  }\n  _pastCharCount(count) {\n    const pastCharCount = document.getElementById('past-charCount');\n    pastCharCount.innerHTML = \"\";\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Past char count: ${count}`;\n    pastCharCount.appendChild(span);\n  }\n  _pastErrorCount(errorCount) {\n    const pastErrorCountEle = document.getElementById('error-count');\n    pastErrorCountEle.innerHTML = \"\";\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Past error count: ${errorCount}`;\n    pastErrorCountEle.appendChild(span);\n  }\n  _pastWPM(wpm) {\n    const pastWPM = document.getElementById('past-wpm');\n    pastWPM.innerHTML = \"\";\n    const span = document.createElement('span');\n    span.innerHTML = `Past run's WPM: ${wpm}`;\n    pastWPM.appendChild(span);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TixXQUFXLENBQUNGLElBQUksQ0FBQztFQUN2QztFQUVDUyxRQUFRLENBQUNDLEdBQUcsRUFBRTtJQUNYLE1BQU1DLE9BQU8sR0FBR2QsUUFBUSxDQUFDQyxjQUFjLENBQUMsVUFBVSxDQUFDO0lBQ25EYSxPQUFPLENBQUNaLFNBQVMsR0FBRyxFQUFFO0lBQ3RCLE1BQU1DLElBQUksR0FBR0gsUUFBUSxDQUFDSSxhQUFhLENBQUMsTUFBTSxDQUFDO0lBQzNDRCxJQUFJLENBQUNELFNBQVMsR0FBSSxtQkFBa0JXLEdBQUksRUFBQztJQUN6Q0MsT0FBTyxDQUFDVCxXQUFXLENBQUNGLElBQUksQ0FBQztFQUM3QjtBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRmF1bHR5LVJvY2tldC8uL3NyYy9zY3JpcHRzL3R5cGV3cml0aW5nLWNvbnNvbGUuanM/YTVlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHlwZVdyaXRpbmdDb25zb2xlIHtcblxuICAgIGNvbnN0cnVjdG9yKGNoYXJhY3RlckNvdW50LCB0aW1lLCBlcnJvcnMpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2hpIGZyb20gdHdjJylcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb3VudCA9IGNoYXJhY3RlckNvdW50O1xuICAgICAgICB0aGlzLnRpbWUgPSB0aW1lOyAgIFxuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9yczsgXG4gICAgICAgIHRoaXMubWludXRlcyA9ICBwYXJzZUludCh0aGlzLnRpbWUuc2xpY2UoMCwyKSk7XG4gICAgICAgIHRoaXMuc2Vjb25kcyA9IHBhcnNlSW50KHRoaXMudGltZS5zbGljZSgzKSk7XG4gICAgICAgIHRoaXMuYWRqVGltZSA9IGZ1bmN0aW9uIGFkanVzdFRpbWUoKSB7XG4gICAgICAgICAgICBsZXQgYWRqU2VjID0gdGhpcy5zZWNvbmRzIC8gNjA7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5taW51dGVzICsgYWRqU2VjO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWRqVGltZSk7XG4gICAgfVxuXG4gICAgYWRqdXN0VGltZSgpIHtcbiAgICAgICAgbGV0IGFkalNlYyA9IHRoaXMuc2Vjb25kcyAvIDYwO1xuICAgICAgICByZXR1cm4gdGhpcy5taW51dGVzICsgYWRqU2VjO1xuICAgIH1cbiAgICBcbiAgICBjYWxjdWxhdGVXUE0oKSB7XG4gICAgICAgIC8qXG4gICAgICAgIEEgd29yZCBpcyBhbnkgNSsgY2hhciBjb3VudCBcbiAgICAgICAgR3Jvc3MgV1BNID0gKHRvdGFsQ2hhcnMvNSkgLyB0aW1lKG1pbilcbiAgICAgICAgTmV0IFdQTSA9IEdyb3MgV1BNIC0gKGVycm9ycyAvIHRpbWUobWluKSlcbiAgICAgICAgICAgICAgICA9IFsodG90YWxDaGFycy81KSAtIGVycm9yc10gLyB0aW1lKG1pbilcbiAgICAgICAgKi9cbiAgICAgICAgbGV0IHdvcmRzID0gKHRoaXMuY2hhcmFjdGVyQ291bnQgLyA1KVxuICAgICAgICBsZXQgbmV0V1BNID0gTWF0aC5mbG9vcihNYXRoLmFicyh3b3JkcyAtIHRoaXMuZXJyb3JzKSAvIHRoaXMuYWRqdXN0VGltZSgpKVxuICAgICAgICByZXR1cm4gbmV0V1BNO1xuICAgIH1cbiAgICAgX3Bhc3RUaW1lQ2FsKHRpbWUpIHtcbiAgICAgICAgaWYgKHRpbWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhc3RUaW1lRWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bhc3QtdGltZScpXG4gICAgICAgICAgICBwYXN0VGltZUVsZS5pbm5lckhUTUwgPSBcIlwiXG4gICAgICAgICAgICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBQYXN0IFJ1biBUaW1lOiAke3RpbWV9YDtcbiAgICAgICAgICAgIHBhc3RUaW1lRWxlLmFwcGVuZENoaWxkKHNwYW4pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgIF9wYXN0Q2hhckNvdW50KGNvdW50KSB7XG4gICAgICAgIGNvbnN0IHBhc3RDaGFyQ291bnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFzdC1jaGFyQ291bnQnKVxuICAgICAgICBwYXN0Q2hhckNvdW50LmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgc3Bhbi5pbm5lckhUTUwgPSBgUGFzdCBjaGFyIGNvdW50OiAke2NvdW50fWA7XG4gICAgICAgIHBhc3RDaGFyQ291bnQuYXBwZW5kQ2hpbGQoc3Bhbik7XG4gICAgfVxuXG4gICAgIF9wYXN0RXJyb3JDb3VudChlcnJvckNvdW50KSB7XG4gICAgICAgIGNvbnN0IHBhc3RFcnJvckNvdW50RWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Vycm9yLWNvdW50JylcbiAgICAgICAgcGFzdEVycm9yQ291bnRFbGUuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBQYXN0IGVycm9yIGNvdW50OiAke2Vycm9yQ291bnR9YDtcbiAgICAgICAgcGFzdEVycm9yQ291bnRFbGUuYXBwZW5kQ2hpbGQoc3Bhbik7XG4gICAgfVxuXG4gICAgIF9wYXN0V1BNKHdwbSkge1xuICAgICAgICBjb25zdCBwYXN0V1BNID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bhc3Qtd3BtJyk7XG4gICAgICAgIHBhc3RXUE0uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgc3Bhbi5pbm5lckhUTUwgPSBgUGFzdCBydW4ncyBXUE06ICR7d3BtfWA7XG4gICAgICAgIHBhc3RXUE0uYXBwZW5kQ2hpbGQoc3Bhbik7XG4gICAgfVxuXG4gICAgXG59Il0sIm5hbWVzIjpbIlR5cGVXcml0aW5nQ29uc29sZSIsImNvbnN0cnVjdG9yIiwiY2hhcmFjdGVyQ291bnQiLCJ0aW1lIiwiZXJyb3JzIiwiY29uc29sZSIsImxvZyIsIm1pbnV0ZXMiLCJwYXJzZUludCIsInNsaWNlIiwic2Vjb25kcyIsImFkalRpbWUiLCJhZGp1c3RUaW1lIiwiYWRqU2VjIiwiY2FsY3VsYXRlV1BNIiwid29yZHMiLCJuZXRXUE0iLCJNYXRoIiwiZmxvb3IiLCJhYnMiLCJfcGFzdFRpbWVDYWwiLCJwYXN0VGltZUVsZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJzcGFuIiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwiX3Bhc3RDaGFyQ291bnQiLCJjb3VudCIsInBhc3RDaGFyQ291bnQiLCJfcGFzdEVycm9yQ291bnQiLCJlcnJvckNvdW50IiwicGFzdEVycm9yQ291bnRFbGUiLCJfcGFzdFdQTSIsIndwbSIsInBhc3RXUE0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/typewriting-console.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;