/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/typewriting-console */ \"./src/scripts/typewriting-console.js\");\n\nconst RANDOM_QUOTE_API_URL = \"https://api.quotable.io/random?minLength=100&maxLength=450\";\nconst quoteDisplay = document.getElementById(\"quoteDisplay\");\nconst quoteInput = document.getElementById(\"quoteInput\");\nconst timer = document.getElementById(\"timer\");\nconst pastTimeEle = document.getElementById('past-time');\nconst pastCharCount = document.getElementById('past-charCount');\nconst pastErrorCountEle = document.getElementById('error-count');\nasync function getRandomQuote() {\n  try {\n    const res = await fetch(RANDOM_QUOTE_API_URL);\n    if (res.ok) {\n      let data = await res.json();\n      return data.content;\n    } else {\n      let data = await res.join();\n      throw data.meta.msg;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n// window.getRandomQuote = getRandomQuote;\n\nlet charCount;\nlet charHash = {},\n  errorArr = [];\nlet pastRunKey = 1;\nlet errorCount, startTime, pastTime;\nasync function renderNewQuote() {\n  let pastRunInstance;\n  if (pastTime) {\n    pastRunInstance = pastRunData(charHash[pastRunKey - 1], pastTime, errorCount);\n    console.log(`past run data: charCount ${pastRunInstance.characterCount} time: ${pastRunInstance.time} errors: ${pastRunInstance.errors}`);\n  }\n  errorCount = 0;\n  errorArr = [];\n  const quote = await getRandomQuote();\n  quoteDisplay.innerHTML = \"\";\n  quoteInput.value = null;\n  charCount = 0;\n  quote.split('').forEach(char => {\n    charCount++;\n    let span = document.createElement(\"span\");\n    span.className = 'rendered-quote';\n    span.innerHTML = char;\n    quoteDisplay.appendChild(span);\n  });\n  charHash[pastRunKey] = charCount;\n  pastRunKey++;\n  startTimer();\n}\n\n//to check if your input matches the rendered quote\n\nquoteInput.addEventListener('input', e => {\n  const quoteSpanArr = quoteDisplay.querySelectorAll(\".rendered-quote\");\n  const inputValArr = quoteInput.value.split('');\n  let finished = true,\n    caughtErrors;\n  quoteSpanArr.forEach((charSpan, i) => {\n    const inputChar = inputValArr[i];\n    if (inputChar == null) {\n      charSpan.classList.remove('correct');\n      charSpan.classList.remove('incorrect');\n      finished = false;\n    } else if (inputChar === charSpan.innerHTML) {\n      charSpan.classList.add('correct');\n      charSpan.classList.remove('incorrect');\n      finished = true;\n    } else {\n      charSpan.classList.remove('correct');\n      charSpan.classList.add('incorrect');\n      finished = false;\n      caughtErrors = _catchErors(quoteSpanArr);\n      if (errorCount < caughtErrors) errorCount = caughtErrors;\n    }\n  });\n  console.log(errorArr);\n  console.log(errorCount);\n  if (finished) renderNewQuote();\n});\nfunction _catchErors(quoteSpan) {\n  quoteSpan.forEach((span, i) => {\n    if (span.className === 'rendered-quote incorrect' && !errorArr.includes(i)) errorArr.push(i);\n  });\n  return errorArr.length;\n}\n\n//timer \nfunction startTimer() {\n  console.log(charHash, pastTime, errorCount);\n  timer.innerHTML = `00:00`;\n  startTime = new Date();\n  setInterval(() => {\n    let currentTime = getTime();\n    timer.innerHTML = renderTimeAsClock(currentTime);\n    pastTime = timer.innerHTML;\n  }, 1000);\n  // let pastRunInstance = pastRunData(charCount, pastTime, errorCount)\n  // console.log(pastRunInstance)\n}\n\nfunction getTime() {\n  return Math.floor((new Date() - startTime) / 1000);\n}\nfunction renderTimeAsClock(time) {\n  if (time < 60) {\n    if (time < 10) return `00:0${time}`;\n    return `00:${time}`;\n  } else {\n    let min = Math.floor(time / 60);\n    let seconds = time % 60;\n    if (min < 10 && seconds < 10) {\n      return `0${min}:0${seconds}`;\n    } else if (min < 10 && seconds >= 10) {\n      return `0${min}:${seconds}`;\n    } else if (min >= 10 && seconds < 10) {\n      return `${min}:0${seconds}`;\n    } else {\n      return `${min}:${seconds}`;\n    }\n  }\n}\n\n/* Calculating the Net wpm: \n    time: pastTime,\n    errors: , \n    quote character count: \n\n    \n\n*/\nfunction pastRunData(character, time, errors) {\n  const pastRun = new _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__[\"default\"](character, time, errors);\n  console.log(pastRun);\n  _pastCharCount(pastRun.characterCount);\n  _pastTimeCal(pastRun.time);\n  _pastErrorCount(pastRun.errors);\n  return pastRun;\n}\nfunction _pastTimeCal(time) {\n  if (time) {\n    pastTimeEle.innerHTML = \"\";\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Past Run Time: ${time}`;\n    pastTimeEle.appendChild(span);\n  }\n}\nfunction _pastCharCount(count) {\n  pastCharCount.innerHTML = \"\";\n  const span = document.createElement(\"span\");\n  span.innerHTML = `Past char count: ${count}`;\n  pastCharCount.appendChild(span);\n}\nfunction _pastErrorCount(errorCount) {\n  pastErrorCountEle.innerHTML = \"\";\n  const span = document.createElement(\"span\");\n  span.innerHTML = `Past error count: ${errorCount}`;\n  pastErrorCountEle.appendChild(span);\n}\nrenderNewQuote();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/typewriting-console.js":
/*!********************************************!*\
  !*** ./src/scripts/typewriting-console.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TypeWritingConsole; }\n/* harmony export */ });\nclass TypeWritingConsole {\n  constructor(characterCount, time, errors) {\n    console.log('hi from twc');\n    this.characterCount = characterCount;\n    this.time = time;\n    this.errors = errors;\n  }\n  /*  Gross WPM = (totalChars/5) / time(min)\n      Net WPM = Gros WPM - (errors / time(min))\n              = [(totalChars/5) - errors] / time(min)\n          */\n  // calculateWPM() {\n  //     let grossWPM = (this.characterCount / 5)\n  // }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90eXBld3JpdGluZy1jb25zb2xlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFZSxNQUFNQSxrQkFBa0IsQ0FBQztFQUNwQ0MsV0FBVyxDQUFDQyxjQUFjLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFO0lBQ3RDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhLENBQUM7SUFDMUIsSUFBSSxDQUFDSixjQUFjLEdBQUdBLGNBQWM7SUFDcEMsSUFBSSxDQUFDQyxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBLE1BQU07RUFDeEI7RUFDQTtBQUNKO0FBQ0E7QUFDQTtFQUNJO0VBQ0E7RUFDQTtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRmF1bHR5LVJvY2tldC8uL3NyYy9zY3JpcHRzL3R5cGV3cml0aW5nLWNvbnNvbGUuanM/YTVlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHlwZVdyaXRpbmdDb25zb2xlIHtcbiAgICBjb25zdHJ1Y3RvcihjaGFyYWN0ZXJDb3VudCwgdGltZSwgZXJyb3JzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdoaSBmcm9tIHR3YycpXG4gICAgICAgIHRoaXMuY2hhcmFjdGVyQ291bnQgPSBjaGFyYWN0ZXJDb3VudDtcbiAgICAgICAgdGhpcy50aW1lID0gdGltZTsgXG4gICAgICAgIHRoaXMuZXJyb3JzID0gZXJyb3JzOyBcbiAgICB9XG4gICAgLyogIEdyb3NzIFdQTSA9ICh0b3RhbENoYXJzLzUpIC8gdGltZShtaW4pXG4gICAgICAgIE5ldCBXUE0gPSBHcm9zIFdQTSAtIChlcnJvcnMgLyB0aW1lKG1pbikpXG4gICAgICAgICAgICAgICAgPSBbKHRvdGFsQ2hhcnMvNSkgLSBlcnJvcnNdIC8gdGltZShtaW4pXG4gICAgICAgICAgICAqL1xuICAgIC8vIGNhbGN1bGF0ZVdQTSgpIHtcbiAgICAvLyAgICAgbGV0IGdyb3NzV1BNID0gKHRoaXMuY2hhcmFjdGVyQ291bnQgLyA1KVxuICAgIC8vIH1cbn0iXSwibmFtZXMiOlsiVHlwZVdyaXRpbmdDb25zb2xlIiwiY29uc3RydWN0b3IiLCJjaGFyYWN0ZXJDb3VudCIsInRpbWUiLCJlcnJvcnMiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/typewriting-console.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;