/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/typewriting-console */ \"./src/scripts/typewriting-console.js\");\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_start__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/start */ \"./src/scripts/start.js\");\n\n\n\nconst keyboard = document.querySelector(\".keyboard\");\nconst quoteDisplay = document.getElementById(\"quoteDisplay\");\nconst quoteInputDiv = document.getElementById(\"quoteInput\");\nconst quoteInput = document.getElementById(\"quote-input\");\nconst allLetterEles = document.querySelectorAll('.letter');\nconst inputDisplayDiv = document.querySelector(\"#input-display\");\nconst canvasEl = document.getElementById(\"rocket-canvas\");\nconst ctx = canvasEl.getContext(\"2d\");\ncanvasEl.width = 500;\ncanvasEl.height = 750;\nlet game;\nlet newGame = document.createElement('button');\nnewGame.innerHTML = 'New Game';\nquoteInputDiv.appendChild(newGame);\nnew _scripts_start__WEBPACK_IMPORTED_MODULE_2__[\"default\"](ctx, canvasEl);\nnewGame.addEventListener('click', e => {\n  if (game) game.quote.timer.endTimer();\n  game = new _scripts_game__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ctx, 5, canvasEl);\n});\nlet errorArr = [],\n  errorCount = 0;\nquoteInput.addEventListener('input', e => {\n  const quoteSpanArr = quoteDisplay.querySelectorAll(\".rendered-quote\");\n  const inputValArr = quoteInput.value.split('');\n  let finished = true,\n    caughtErrors = 0;\n  quoteSpanArr.forEach((charSpan, i) => {\n    const inputChar = inputValArr[i];\n    if (inputChar == null) {\n      charSpan.classList.remove('correct');\n      charSpan.classList.remove('incorrect');\n      finished = false;\n    } else if (inputChar === charSpan.innerHTML) {\n      charSpan.classList.add('correct');\n      charSpan.classList.remove('incorrect');\n      finished = true;\n    } else {\n      charSpan.classList.remove('correct');\n      charSpan.classList.add('incorrect');\n      finished = false;\n      caughtErrors = _catchErors(quoteSpanArr);\n      if (errorCount < caughtErrors) errorCount = caughtErrors;\n    }\n  });\n  if (finished) {\n    const twc = new _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__[\"default\"](game.quote.charCount, game.quote.timer.pastTime, errorCount, ctx, game.level);\n    twc.rocket.animate(() => {\n      if (twc.rocket.passedLevel) {\n        game.newLevel();\n      } else {\n        game.failedLevel();\n      }\n    });\n  }\n  //game.gameOver();\n});\n\nfunction _catchErors(quoteSpan) {\n  quoteSpan.forEach((span, i) => {\n    if (span.className === 'rendered-quote incorrect' && !errorArr.includes(i)) errorArr.push(i);\n  });\n  return errorArr.length;\n}\n\n//keyboard feature \n// const keyboard = document.querySelector(\".keyboard\");\nkeyboard.addEventListener('keydown', e => {\n  if (!e.metaKey) {\n    const keyEle = e.key !== \" \" ? document.getElementById(`${e.key}`) : document.getElementById(`${e.code}`);\n    keyEle.classList.add('pressedKey');\n    if (e.shiftKey) _captializeAll();\n  }\n});\nkeyboard.addEventListener('keyup', e => {\n  // console.log(e);\n  if (!e.metaKey) {\n    const keyEle = e.key !== \" \" ? document.getElementById(`${e.key}`) : document.getElementById(`${e.code}`);\n    keyEle.classList.remove('pressedKey');\n    if (!e.shiftKey) _lowerAll();\n  }\n});\nfunction _captializeAll() {\n  allLetterEles.forEach((span, i) => {\n    span.innerHTML = span.innerHTML.toUpperCase();\n  });\n}\nfunction _lowerAll() {\n  allLetterEles.forEach((span, i) => {\n    span.innerHTML = span.innerHTML.toLowerCase();\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _typewriting_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typewriting-console */ \"./src/scripts/typewriting-console.js\");\n/* harmony import */ var _quote__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quote */ \"./src/scripts/quote.js\");\n/* harmony import */ var _level__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./level */ \"./src/scripts/level.js\");\n\n\n\nclass Game {\n  constructor(ctx, level, canvas) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.level = new _level__WEBPACK_IMPORTED_MODULE_2__[\"default\"](level, this.ctx);\n    this.x = 0;\n    this.y = 0;\n    this.quote = new _quote__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.strikes = 0;\n    this.animate();\n  }\n  gameOver() {\n    if (this.strikes >= 3) {\n      alert('Game Over');\n    } else if (this.strikes < 3 && this.level.state === 5) {\n      alert('Winner!!!!');\n    }\n  }\n  failedLevel() {\n    this.strikes++;\n    this.quote.timer.endTimer();\n    this.quote = new _quote__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.animate();\n    // this.level.renderLevel(this.level.state)\n  }\n\n  newLevel() {\n    this.level.state++;\n    this.quote.timer.endTimer();\n    this.strikes = 0;\n    this.quote = new _quote__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.animate();\n    // this.level.renderLevel(this.level.state)\n  }\n\n  animate() {\n    this.level.renderLevel(this.level.state, this.strikes);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUQ7QUFDM0I7QUFDQTtBQUViLE1BQU1HLElBQUksQ0FBQztFQUN0QkMsV0FBVyxDQUFDQyxHQUFHLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFO0lBQzVCLElBQUksQ0FBQ0EsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0YsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSUosOENBQUssQ0FBQ0ksS0FBSyxFQUFFLElBQUksQ0FBQ0QsR0FBRyxDQUFDO0lBQ3ZDLElBQUksQ0FBQ0csQ0FBQyxHQUFHLENBQUM7SUFDVixJQUFJLENBQUNDLENBQUMsR0FBRyxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSVQsOENBQUssRUFBRTtJQUN4QixJQUFJLENBQUNVLE9BQU8sR0FBRyxDQUFDO0lBQ2hCLElBQUksQ0FBQ0MsT0FBTyxFQUFFO0VBQ2xCO0VBRUFDLFFBQVEsR0FBRztJQUNQLElBQUksSUFBSSxDQUFDRixPQUFPLElBQUksQ0FBQyxFQUFFO01BQ25CRyxLQUFLLENBQUMsV0FBVyxDQUFDO0lBQ3RCLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ0gsT0FBTyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUNMLEtBQUssQ0FBQ1MsS0FBSyxLQUFLLENBQUMsRUFBRTtNQUNuREQsS0FBSyxDQUFDLFlBQVksQ0FBQztJQUN2QjtFQUNKO0VBR0FFLFdBQVcsR0FBRztJQUNWLElBQUksQ0FBQ0wsT0FBTyxFQUFFO0lBRWQsSUFBSSxDQUFDRCxLQUFLLENBQUNPLEtBQUssQ0FBQ0MsUUFBUSxFQUFFO0lBQzNCLElBQUksQ0FBQ1IsS0FBSyxHQUFHLElBQUlULDhDQUFLLEVBQUU7SUFDeEIsSUFBSSxDQUFDVyxPQUFPLEVBQUU7SUFDZDtFQUNKOztFQUVBTyxRQUFRLEdBQUc7SUFDUCxJQUFJLENBQUNiLEtBQUssQ0FBQ1MsS0FBSyxFQUFFO0lBQ2xCLElBQUksQ0FBQ0wsS0FBSyxDQUFDTyxLQUFLLENBQUNDLFFBQVEsRUFBRTtJQUMzQixJQUFJLENBQUNQLE9BQU8sR0FBRyxDQUFDO0lBQ2hCLElBQUksQ0FBQ0QsS0FBSyxHQUFHLElBQUlULDhDQUFLO0lBQ3RCLElBQUksQ0FBQ1csT0FBTyxFQUFFO0lBQ2Q7RUFDSjs7RUFFQUEsT0FBTyxHQUFHO0lBQ04sSUFBSSxDQUFDTixLQUFLLENBQUNjLFdBQVcsQ0FBQyxJQUFJLENBQUNkLEtBQUssQ0FBQ1MsS0FBSyxFQUFFLElBQUksQ0FBQ0osT0FBTyxDQUFDO0VBQzFEO0FBSUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL3NjcmlwdHMvZ2FtZS5qcz9jZGMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUeXBlV3JpdGluZ0NvbnNvbGUgZnJvbSBcIi4vdHlwZXdyaXRpbmctY29uc29sZVwiO1xuaW1wb3J0IFF1b3RlIGZyb20gXCIuL3F1b3RlXCI7XG5pbXBvcnQgTGV2ZWwgZnJvbSBcIi4vbGV2ZWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZSB7XG4gICAgY29uc3RydWN0b3IoY3R4LCBsZXZlbCwgY2FudmFzKSB7XG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzXG4gICAgICAgIHRoaXMuY3R4ID0gY3R4XG4gICAgICAgIHRoaXMubGV2ZWwgPSBuZXcgTGV2ZWwobGV2ZWwsIHRoaXMuY3R4KTsgXG4gICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgIHRoaXMueSA9IDA7XG4gICAgICAgIHRoaXMucXVvdGUgPSBuZXcgUXVvdGUoKTtcbiAgICAgICAgdGhpcy5zdHJpa2VzID0gMDtcbiAgICAgICAgdGhpcy5hbmltYXRlKClcbiAgICB9XG5cbiAgICBnYW1lT3ZlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RyaWtlcyA+PSAzKSB7XG4gICAgICAgICAgICBhbGVydCgnR2FtZSBPdmVyJyk7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zdHJpa2VzIDwgMyAmJiB0aGlzLmxldmVsLnN0YXRlID09PSA1KSB7XG4gICAgICAgICAgICBhbGVydCgnV2lubmVyISEhIScpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBcbiAgICBmYWlsZWRMZXZlbCgpIHtcbiAgICAgICAgdGhpcy5zdHJpa2VzKys7IFxuICAgICAgICBcbiAgICAgICAgdGhpcy5xdW90ZS50aW1lci5lbmRUaW1lcigpO1xuICAgICAgICB0aGlzLnF1b3RlID0gbmV3IFF1b3RlKCk7XG4gICAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgICAgICAvLyB0aGlzLmxldmVsLnJlbmRlckxldmVsKHRoaXMubGV2ZWwuc3RhdGUpXG4gICAgfVxuXG4gICAgbmV3TGV2ZWwoKSB7XG4gICAgICAgIHRoaXMubGV2ZWwuc3RhdGUrKztcbiAgICAgICAgdGhpcy5xdW90ZS50aW1lci5lbmRUaW1lcigpO1xuICAgICAgICB0aGlzLnN0cmlrZXMgPSAwOyBcbiAgICAgICAgdGhpcy5xdW90ZSA9IG5ldyBRdW90ZTtcbiAgICAgICAgdGhpcy5hbmltYXRlKCk7XG4gICAgICAgIC8vIHRoaXMubGV2ZWwucmVuZGVyTGV2ZWwodGhpcy5sZXZlbC5zdGF0ZSlcbiAgICB9XG5cbiAgICBhbmltYXRlKCkge1xuICAgICAgICB0aGlzLmxldmVsLnJlbmRlckxldmVsKHRoaXMubGV2ZWwuc3RhdGUsIHRoaXMuc3RyaWtlcylcbiAgICB9XG5cblxuXG59XG5cbiJdLCJuYW1lcyI6WyJUeXBlV3JpdGluZ0NvbnNvbGUiLCJRdW90ZSIsIkxldmVsIiwiR2FtZSIsImNvbnN0cnVjdG9yIiwiY3R4IiwibGV2ZWwiLCJjYW52YXMiLCJ4IiwieSIsInF1b3RlIiwic3RyaWtlcyIsImFuaW1hdGUiLCJnYW1lT3ZlciIsImFsZXJ0Iiwic3RhdGUiLCJmYWlsZWRMZXZlbCIsInRpbWVyIiwiZW5kVGltZXIiLCJuZXdMZXZlbCIsInJlbmRlckxldmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/level.js":
/*!******************************!*\
  !*** ./src/scripts/level.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Level; }\n/* harmony export */ });\n/* harmony import */ var _levels_troposphere__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./levels/troposphere */ \"./src/scripts/levels/troposphere.js\");\n/* harmony import */ var _levels_stratosphere__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./levels/stratosphere */ \"./src/scripts/levels/stratosphere.js\");\n/* harmony import */ var _levels_mesosphere__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./levels/mesosphere */ \"./src/scripts/levels/mesosphere.js\");\n/* harmony import */ var _levels_thermosphere__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./levels/thermosphere */ \"./src/scripts/levels/thermosphere.js\");\n/* harmony import */ var _levels_exosphere__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./levels/exosphere */ \"./src/scripts/levels/exosphere.js\");\n/* harmony import */ var _levels_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./levels/base */ \"./src/scripts/levels/base.js\");\n\n\n\n\n\n\nclass Level {\n  constructor(state, ctx) {\n    this.state = state;\n    this.ctx = ctx;\n    this.passingWpm;\n    this.renderLevel(this.state);\n    // this.platform.src = './assests/launch-final.png'\n  }\n\n  renderLevel(state, strikes) {\n    // console.log('in level')\n    // ground:0, troposphere:1, stratosphere:2, mesosphere:3, thermosphere:4 and exosphere:5 goal(will be rendered to show user has won)\n    this.canvas = document.getElementById(\"rocket-canvas\");\n    this.canvas.className = \"\";\n    this.rocket = new Image();\n    this.rocket.src = './assests/rocket_spriteSheet_final.png';\n    this.platform = new Image();\n    this.platform.src = './assests/launch-final.png';\n    switch (state) {\n      case 0:\n        //base\n        // this.canvas.className = 'level-zero'\n        this.base = new _levels_base__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.ctx, this.canvas, this.rocket, this.platform, strikes);\n        this.passingWpm = 20;\n        break;\n      case 1:\n        //troposphere\n        // canvas.className = 'level-one'\n        this.tropo = new _levels_troposphere__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, this.canvas, this.rocket, this.platform, strikes);\n        this.passingWpm = 35;\n        break;\n      case 2:\n        //stratosphere\n        // canvas.className = 'level-two'\n        this.strato = new _levels_stratosphere__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.ctx, this.canvas, this.rocket, this.platform, strikes);\n        this.passingWpm = 50;\n        break;\n      case 3:\n        //Mesosphere\n        // canvas.className = 'level-three'\n        this.meso = new _levels_mesosphere__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.ctx, this.canvas, this.rocket, this.platform, strikes);\n        this.passingWpm = 75;\n        break;\n      case 4:\n        //Thermosphere\n        // canvas.className = 'level-four'\n        this.thermo = new _levels_thermosphere__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.ctx, this.canvas, this.rocket, this.platform, strikes);\n        this.passingWpm = 100;\n        break;\n      case 5:\n        //Exosphere\n        // canvas.className = 'level-five'\n        this.exo = new _levels_exosphere__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.ctx, this.canvas, this.rocket);\n        break;\n    }\n  }\n\n  //test \n  animate() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.tropoBackground, 0, 0);\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  troposphere() {\n    this.tropoBackground = new Image();\n    this.tropoBackground.src = './assests/troposphere/tropoBackground.png';\n    // console.log(this.tropoBackground)\n    this.animate();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBTTtFQUdsQjs7RUFJQTtFQUNBVSxPQUFPLEdBQUc7SUFDTixJQUFJLENBQUNsQixHQUFHLENBQUNtQixTQUFTLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxJQUFJLENBQUNmLE1BQU0sQ0FBQ2dCLEtBQUssRUFBRSxJQUFJLENBQUNoQixNQUFNLENBQUNpQixNQUFNLENBQUM7SUFDOUQsSUFBSSxDQUFDckIsR0FBRyxDQUFDc0IsU0FBUyxDQUFDLElBQUksQ0FBQ0MsZUFBZSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUNDLHFCQUFxQixDQUFDLElBQUksQ0FBQ04sT0FBTyxDQUFDTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDbEQ7RUFHQUMsV0FBVyxHQUFHO0lBQ1YsSUFBSSxDQUFDSCxlQUFlLEdBQUcsSUFBSWQsS0FBSyxFQUFFO0lBQ2xDLElBQUksQ0FBQ2MsZUFBZSxDQUFDYixHQUFHLEdBQUcsMkNBQTJDO0lBQ3RFO0lBQ0EsSUFBSSxDQUFDUSxPQUFPLEVBQUU7RUFDbEI7QUFLSiIsInNvdXJjZXMiOlsid2VicGFjazovL0ZhdWx0eS1Sb2NrZXQvLi9zcmMvc2NyaXB0cy9sZXZlbC5qcz8wMWFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUcm9wb3NwaGVyZSBmcm9tIFwiLi9sZXZlbHMvdHJvcG9zcGhlcmVcIjtcbmltcG9ydCBTdHJhdG9zcGhlcmUgZnJvbSBcIi4vbGV2ZWxzL3N0cmF0b3NwaGVyZVwiO1xuaW1wb3J0IE1lc29zcGhlcmUgZnJvbSBcIi4vbGV2ZWxzL21lc29zcGhlcmVcIjtcbmltcG9ydCBUaGVybW9zcGhlcmUgZnJvbSBcIi4vbGV2ZWxzL3RoZXJtb3NwaGVyZVwiO1xuaW1wb3J0IEV4b3NwaGVyZSBmcm9tIFwiLi9sZXZlbHMvZXhvc3BoZXJlXCI7XG5pbXBvcnQgQmFzZSBmcm9tIFwiLi9sZXZlbHMvYmFzZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMZXZlbCB7XG4gICAgY29uc3RydWN0b3Ioc3RhdGUsIGN0eCkge1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICAgIHRoaXMuY3R4ID0gY3R4O1xuICAgICAgICB0aGlzLnBhc3NpbmdXcG07IFxuICAgICAgICB0aGlzLnJlbmRlckxldmVsKHRoaXMuc3RhdGUpO1xuICAgICAgICAvLyB0aGlzLnBsYXRmb3JtLnNyYyA9ICcuL2Fzc2VzdHMvbGF1bmNoLWZpbmFsLnBuZydcbiAgICB9XG5cbiAgICByZW5kZXJMZXZlbChzdGF0ZSwgc3RyaWtlcykge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnaW4gbGV2ZWwnKVxuICAgICAgICAvLyBncm91bmQ6MCwgdHJvcG9zcGhlcmU6MSwgc3RyYXRvc3BoZXJlOjIsIG1lc29zcGhlcmU6MywgdGhlcm1vc3BoZXJlOjQgYW5kIGV4b3NwaGVyZTo1IGdvYWwod2lsbCBiZSByZW5kZXJlZCB0byBzaG93IHVzZXIgaGFzIHdvbilcbiAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvY2tldC1jYW52YXNcIilcbiAgICAgICAgdGhpcy5jYW52YXMuY2xhc3NOYW1lID0gXCJcIlxuICAgICAgICB0aGlzLnJvY2tldCA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLnJvY2tldC5zcmMgPSAnLi9hc3Nlc3RzL3JvY2tldF9zcHJpdGVTaGVldF9maW5hbC5wbmcnO1xuICAgICAgICB0aGlzLnBsYXRmb3JtID0gbmV3IEltYWdlKCk7XG4gICAgICAgIHRoaXMucGxhdGZvcm0uc3JjID0gJy4vYXNzZXN0cy9sYXVuY2gtZmluYWwucG5nJ1xuICAgICAgICBzd2l0Y2goc3RhdGUpIHtcbiAgICAgICAgICAgIGNhc2UgMDogLy9iYXNlXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5jYW52YXMuY2xhc3NOYW1lID0gJ2xldmVsLXplcm8nXG4gICAgICAgICAgICAgICAgdGhpcy5iYXNlID0gbmV3IEJhc2UodGhpcy5jdHgsIHRoaXMuY2FudmFzLCB0aGlzLnJvY2tldCwgdGhpcy5wbGF0Zm9ybSwgc3RyaWtlcylcbiAgICAgICAgICAgICAgICB0aGlzLnBhc3NpbmdXcG0gPSAyMDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMTogLy90cm9wb3NwaGVyZVxuICAgICAgICAgICAgICAgIC8vIGNhbnZhcy5jbGFzc05hbWUgPSAnbGV2ZWwtb25lJ1xuICAgICAgICAgICAgICAgIHRoaXMudHJvcG8gPSBuZXcgVHJvcG9zcGhlcmUodGhpcy5jdHgsIHRoaXMuY2FudmFzLCB0aGlzLnJvY2tldCwgdGhpcy5wbGF0Zm9ybSwgc3RyaWtlcyk7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXNzaW5nV3BtID0gMzU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDI6IC8vc3RyYXRvc3BoZXJlXG4gICAgICAgICAgICAgICAgLy8gY2FudmFzLmNsYXNzTmFtZSA9ICdsZXZlbC10d28nXG4gICAgICAgICAgICAgICAgdGhpcy5zdHJhdG8gPSBuZXcgU3RyYXRvc3BoZXJlKHRoaXMuY3R4LCB0aGlzLmNhbnZhcywgdGhpcy5yb2NrZXQsIHRoaXMucGxhdGZvcm0sIHN0cmlrZXMpO1xuICAgICAgICAgICAgICAgIHRoaXMucGFzc2luZ1dwbSA9IDUwOyBcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzogLy9NZXNvc3BoZXJlXG4gICAgICAgICAgICAgICAgLy8gY2FudmFzLmNsYXNzTmFtZSA9ICdsZXZlbC10aHJlZSdcbiAgICAgICAgICAgICAgICB0aGlzLm1lc28gPSBuZXcgTWVzb3NwaGVyZSh0aGlzLmN0eCwgdGhpcy5jYW52YXMsIHRoaXMucm9ja2V0LCB0aGlzLnBsYXRmb3JtLCBzdHJpa2VzKVxuICAgICAgICAgICAgICAgIHRoaXMucGFzc2luZ1dwbSA9IDc1OyBcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgNDogLy9UaGVybW9zcGhlcmVcbiAgICAgICAgICAgICAgICAvLyBjYW52YXMuY2xhc3NOYW1lID0gJ2xldmVsLWZvdXInXG4gICAgICAgICAgICAgICAgdGhpcy50aGVybW8gPSBuZXcgVGhlcm1vc3BoZXJlKHRoaXMuY3R4LCB0aGlzLmNhbnZhcywgdGhpcy5yb2NrZXQsIHRoaXMucGxhdGZvcm0sIHN0cmlrZXMpO1xuICAgICAgICAgICAgICAgIHRoaXMucGFzc2luZ1dwbSA9IDEwMDsgXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDU6IC8vRXhvc3BoZXJlXG4gICAgICAgICAgICAgICAgLy8gY2FudmFzLmNsYXNzTmFtZSA9ICdsZXZlbC1maXZlJ1xuICAgICAgICAgICAgICAgIHRoaXMuZXhvID0gbmV3IEV4b3NwaGVyZSh0aGlzLmN0eCwgdGhpcy5jYW52YXMsIHRoaXMucm9ja2V0KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cblxuXG4gICAgLy90ZXN0IFxuICAgIGFuaW1hdGUoKSB7XG4gICAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpXG4gICAgICAgIHRoaXMuY3R4LmRyYXdJbWFnZSh0aGlzLnRyb3BvQmFja2dyb3VuZCwgMCwgMCk7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIFxuICAgIFxuICAgIHRyb3Bvc3BoZXJlKCkge1xuICAgICAgICB0aGlzLnRyb3BvQmFja2dyb3VuZCA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLnRyb3BvQmFja2dyb3VuZC5zcmMgPSAnLi9hc3Nlc3RzL3Ryb3Bvc3BoZXJlL3Ryb3BvQmFja2dyb3VuZC5wbmcnXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudHJvcG9CYWNrZ3JvdW5kKVxuICAgICAgICB0aGlzLmFuaW1hdGUoKTtcbiAgICB9XG5cblxuXG5cbn0iXSwibmFtZXMiOlsiVHJvcG9zcGhlcmUiLCJTdHJhdG9zcGhlcmUiLCJNZXNvc3BoZXJlIiwiVGhlcm1vc3BoZXJlIiwiRXhvc3BoZXJlIiwiQmFzZSIsIkxldmVsIiwiY29uc3RydWN0b3IiLCJzdGF0ZSIsImN0eCIsInBhc3NpbmdXcG0iLCJyZW5kZXJMZXZlbCIsInN0cmlrZXMiLCJjYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2xhc3NOYW1lIiwicm9ja2V0IiwiSW1hZ2UiLCJzcmMiLCJwbGF0Zm9ybSIsImJhc2UiLCJ0cm9wbyIsInN0cmF0byIsIm1lc28iLCJ0aGVybW8iLCJleG8iLCJhbmltYXRlIiwiY2xlYXJSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJkcmF3SW1hZ2UiLCJ0cm9wb0JhY2tncm91bmQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJiaW5kIiwidHJvcG9zcGhlcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/level.js\n");

/***/ }),

/***/ "./src/scripts/levels/base.js":
/*!************************************!*\
  !*** ./src/scripts/levels/base.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Base; }\n/* harmony export */ });\n/* harmony import */ var _movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nconst ROCKET_INIT = {\n  SX: 0,\n  SY: 0,\n  SWIDTH: 135,\n  SHEIGHT: 145,\n  DX: 215,\n  DY: 575,\n  DWIDTH: 100,\n  DHEIGHT: 150\n};\nconst PLATFORM = {\n  DX: 50,\n  DY: 400,\n  DWIDTH: 400,\n  DHEIGHT: 400\n};\nclass Base {\n  constructor(ctx, canvas, rocket, platform, strikes) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.rocket = rocket;\n    this.platform = platform;\n    this.strikes = strikes;\n    this.background = this.loadBackground();\n    this.layerZero = new Image();\n    this.loadLife();\n    this.animate(true);\n  }\n  animate(idle) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    // this.ctx.drawImage(this.layerZero, 0, 0, this.canvas.width, this.canvas.height);\n    this.background.forEach((layer, i) => {\n      if (i === 1 || i === 2) {\n        layer.draw(this.ctx);\n        layer.moveHozRight();\n      } else {\n        this.ctx.drawImage(layer, 0, 0, this.canvas.width, this.canvas.height);\n      }\n    });\n    this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT);\n    if (idle) {\n      this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY, ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT, ROCKET_INIT.DX, ROCKET_INIT.DY, ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n    }\n    if (this.strikes >= 3) {\n      this.ctx.font = \"50px Rockwell\";\n      this.ctx.fillStyle = 'red';\n      this.ctx.fillText('GAME OVER', 100, 325, this.canvas.width);\n    }\n    this.amountOfLives();\n    if (idle) requestAnimationFrame(this.animate.bind(this));\n  }\n  loadBackground() {\n    const randPos = () => {\n      return Math.floor(Math.random() * 500);\n    };\n    let background = [];\n    for (let i = 1; i < 8; i++) {\n      background.push(i === 2 || i === 3 ? new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: [randPos(), 300],\n        width: 400,\n        height: 225,\n        color: 'black',\n        canvas: this.canvas,\n        src: `./assests/base/${i}.png`\n      }) : new Image());\n      if (i !== 2 || i !== 3) {\n        background[i - 1].src = `./assests/base/${i}.png`;\n      }\n    }\n    return background;\n  }\n\n  // moreClouds() {\n  //     this.background.push(new MovingObjects({\n  //             pos: [randPos(), 300],\n  //             width: 400,\n  //             height: 225,\n  //             color: 'black',\n  //             canvas: this.canvas,\n  //             src: `./assests/base/${i}.png`\n  //         })\n  //     }\n  // }\n\n  loadLife() {\n    this.life = new Image();\n    this.life.src = './assests/life.png';\n  }\n  amountOfLives() {\n    if (this.strikes === 0) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50);\n    } else if (this.strikes === 1) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n    } else if (this.strikes === 2) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/levels/base.js\n");

/***/ }),

/***/ "./src/scripts/levels/exosphere.js":
/*!*****************************************!*\
  !*** ./src/scripts/levels/exosphere.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Exosphere; }\n/* harmony export */ });\n/* harmony import */ var _movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nconst spriteWidth = 135;\nconst spriteHeight = 145;\nconst ROCKET = {\n  SX: 145,\n  SY: 0,\n  SWIDTH: 135,\n  SHEIGHT: 145,\n  DX: 215,\n  DY: 575,\n  DWIDTH: 100,\n  DHEIGHT: 150,\n  CENTER_POS: [200, 300]\n};\nclass Exosphere {\n  constructor(ctx, canvas, rocket) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.background = new Image();\n    this.stars = new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      pos: [0, 0],\n      width: this.canvas.width,\n      height: this.canvas.height,\n      color: 'black',\n      canvas: this.canvas,\n      src: './assests/exosphere/layers/parallax-space-stars.png'\n    });\n    this.rocket = new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      pos: [200, 700],\n      width: ROCKET.DWIDTH,\n      height: ROCKET.DHEIGHT,\n      color: 'red',\n      canvas: this.canvas,\n      src: rocket.src\n    });\n    this.up = true;\n    this.pathIdx = 0;\n    this.ringPlanets = this.generateRingPlanets();\n    this.twinPlanet = this.generateTwinPlanets();\n    this.bigPlanet = new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      pos: [200, 300],\n      width: 300,\n      height: 300,\n      color: 'black',\n      canvas: this.canvas,\n      src: './assests/exosphere/layers/parallax-space-big-planet.png'\n    });\n    this.assignSrcs();\n    this.animate();\n  }\n  animate() {\n    //have the the plants(each with a different speed) enter and exit frame \n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    //background\n    this.ctx.drawImage(this.background, 0, 0, 500, 750);\n    //layer 1\n    this.stars.draw(this.ctx);\n    this.bigPlanet.draw(this.ctx);\n    this.bigPlanet.moveUp();\n    this.moveStars();\n\n    //planets\n    this.ringPlanets.forEach(ring => {\n      ring.draw(this.ctx);\n      ring.moveDiagonalDown();\n    });\n    this.twinPlanet.forEach(twin => {\n      twin.draw(this.ctx);\n      twin.moveDiagonalUp();\n    });\n\n    //rocket\n    this.ctx.drawImage(this.rocket.i, ROCKET.SX, ROCKET.SY, spriteWidth, spriteHeight, this.rocket.pos[0], this.rocket.pos[1], 100, 150);\n    //enter and get to center \n    if (ROCKET.CENTER_POS[0] >= this.rocket.pos[0] && ROCKET.CENTER_POS[1] >= this.rocket.pos[1]) {\n      this.up = false;\n    }\n    // console.log(this.up)\n    this.switchRocketAnimation(this.up);\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  switchRocketAnimation(up) {\n    //if (ROCKET.CENTER_POS[0] === this.rocket.pos[0] && ROCKET.CENTER_POS[1] === this.rocket.pos[1])\n    if (up) {\n      //square animation  \n      this.rocket.moveIntoScreen();\n    } else {\n      // let font = new FontFace('Diplomata SC', )\n      this.ctx.font = 'oblique 30px Verdana';\n      this.ctx.fillText('WINNER!', 185, 275);\n      this.ctx.font = 'oblique 15px Verdana';\n      //create a temp canavs which will be use to restart the game loop \n      this.ctx.fillText('Click To Play Again', 0, 730);\n    }\n  }\n  assignSrcs() {\n    this.background.src = './assests/exosphere/layers/parallax-space-background.png';\n  }\n  generateRingPlanets() {\n    let arr = [];\n    for (let i = 0; i < 5; i++) {\n      arr.push(new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: this.randomPos(),\n        width: this.randomSize(100, 100)[0],\n        height: this.randomSize(100, 100)[0],\n        color: 'black',\n        canvas: this.canvas,\n        src: './assests/exosphere/layers/parallax-space-ring-planet.png'\n      }));\n    }\n    return arr;\n  }\n  generateTwinPlanets() {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      let size = this.randomSize(200, 200);\n      arr.push(new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: this.randomPos(),\n        width: size[0],\n        height: size[1],\n        color: 'black',\n        canvas: this.canvas,\n        src: './assests/exosphere/layers/parallax-space-far-planets.png'\n      }));\n    }\n    return arr;\n  }\n  moveStars() {\n    // console.log(this.background.pos);\n    if (this.stars.pos[0] > this.stars.width) this.stars.pos[0] = 0;else this.stars.pos[0] += 0.05;\n  }\n  randomPos() {\n    let x = Math.floor(Math.random() * 500);\n    let y = Math.floor(Math.random() * 750);\n    return [x, y];\n  }\n  randomSize(w, h) {\n    let newW = Math.floor(Math.random() * w);\n    let newH = Math.floor(Math.random() * h);\n    return [newW, newH];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7SUFDdkMsSUFBSUMsQ0FBQyxHQUFHSCxJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7SUFDdkMsT0FBTyxDQUFDSCxDQUFDLEVBQUVJLENBQUMsQ0FBQztFQUNqQjtFQUVBTixVQUFVLENBQUNPLENBQUMsRUFBQ0MsQ0FBQyxFQUFFO0lBQ1osSUFBSUMsSUFBSSxHQUFHTixJQUFJLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLEVBQUUsR0FBR0UsQ0FBQyxDQUFDO0lBQ3hDLElBQUlHLElBQUksR0FBR1AsSUFBSSxDQUFDQyxLQUFLLENBQUNELElBQUksQ0FBQ0UsTUFBTSxFQUFFLEdBQUdHLENBQUMsQ0FBQztJQUN4QyxPQUFPLENBQUNDLElBQUksRUFBRUMsSUFBSSxDQUFDO0VBQ3ZCO0FBS0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL3NjcmlwdHMvbGV2ZWxzL2V4b3NwaGVyZS5qcz9kZWYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb3ZpbmdPYmplY3RzIGZyb20gXCIuL21vdmluZ09iamVjdHNcIjtcblxuY29uc3Qgc3ByaXRlV2lkdGggPSAxMzU7XG5jb25zdCBzcHJpdGVIZWlnaHQgPSAxNDU7XG5cbmNvbnN0IFJPQ0tFVCA9IHtcbiAgICBTWDogMTQ1LFxuICAgIFNZOiAwLFxuICAgIFNXSURUSDogMTM1LFxuICAgIFNIRUlHSFQ6IDE0NSxcbiAgICBEWDogMjE1LFxuICAgIERZOiA1NzUsXG4gICAgRFdJRFRIOiAxMDAsXG4gICAgREhFSUdIVDogMTUwLFxuICAgIENFTlRFUl9QT1M6IFsyMDAsIDMwMF1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeG9zcGhlcmUge1xuICAgIGNvbnN0cnVjdG9yKGN0eCwgY2FudmFzLCByb2NrZXQpIHtcbiAgICAgICAgdGhpcy5jdHggPSBjdHg7XG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgdGhpcy5zdGFycyA9IG5ldyBNb3ZpbmdPYmplY3RzKHtcbiAgICAgICAgICAgIHBvczogWzAsIDBdLFxuICAgICAgICAgICAgd2lkdGg6IHRoaXMuY2FudmFzLndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLmNhbnZhcy5oZWlnaHQsXG4gICAgICAgICAgICBjb2xvcjogJ2JsYWNrJyxcbiAgICAgICAgICAgIGNhbnZhczogdGhpcy5jYW52YXMsXG4gICAgICAgICAgICBzcmM6ICcuL2Fzc2VzdHMvZXhvc3BoZXJlL2xheWVycy9wYXJhbGxheC1zcGFjZS1zdGFycy5wbmcnXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMucm9ja2V0ID0gbmV3IE1vdmluZ09iamVjdHMoe1xuICAgICAgICAgICAgcG9zOiBbMjAwLDcwMF0gLFxuICAgICAgICAgICAgd2lkdGg6IFJPQ0tFVC5EV0lEVEgsIFxuICAgICAgICAgICAgaGVpZ2h0OiBST0NLRVQuREhFSUdIVCxcbiAgICAgICAgICAgIGNvbG9yOiAncmVkJyxcbiAgICAgICAgICAgIGNhbnZhczogdGhpcy5jYW52YXMsXG4gICAgICAgICAgICBzcmM6IHJvY2tldC5zcmNcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy51cCA9IHRydWU7XG4gICAgICAgIHRoaXMucGF0aElkeCA9IDA7XG4gICAgICAgIHRoaXMucmluZ1BsYW5ldHMgPSB0aGlzLmdlbmVyYXRlUmluZ1BsYW5ldHMoKTtcbiAgICAgICAgdGhpcy50d2luUGxhbmV0ID0gdGhpcy5nZW5lcmF0ZVR3aW5QbGFuZXRzKCk7XG4gICAgICAgIHRoaXMuYmlnUGxhbmV0ID0gbmV3IE1vdmluZ09iamVjdHMoe1xuICAgICAgICAgICAgcG9zOiBbMjAwLCAzMDBdLFxuICAgICAgICAgICAgd2lkdGg6IDMwMCxcbiAgICAgICAgICAgIGhlaWdodDogMzAwLFxuICAgICAgICAgICAgY29sb3I6ICdibGFjaycsXG4gICAgICAgICAgICBjYW52YXM6IHRoaXMuY2FudmFzLFxuICAgICAgICAgICAgc3JjOiAnLi9hc3Nlc3RzL2V4b3NwaGVyZS9sYXllcnMvcGFyYWxsYXgtc3BhY2UtYmlnLXBsYW5ldC5wbmcnXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmFzc2lnblNyY3MoKTtcbiAgICAgIFxuICAgICAgICB0aGlzLmFuaW1hdGUoKTtcbiAgICB9XG5cbiAgICBhbmltYXRlKCkge1xuICAgICAgICAvL2hhdmUgdGhlIHRoZSBwbGFudHMoZWFjaCB3aXRoIGEgZGlmZmVyZW50IHNwZWVkKSBlbnRlciBhbmQgZXhpdCBmcmFtZSBcbiAgICAgICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpXG4gICAgICAgIC8vYmFja2dyb3VuZFxuICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UodGhpcy5iYWNrZ3JvdW5kLCAwLCAwLCA1MDAsIDc1MCk7XG4gICAgICAgIC8vbGF5ZXIgMVxuICAgICAgICB0aGlzLnN0YXJzLmRyYXcodGhpcy5jdHgpO1xuICAgICAgICB0aGlzLmJpZ1BsYW5ldC5kcmF3KHRoaXMuY3R4KTtcbiAgICAgICAgdGhpcy5iaWdQbGFuZXQubW92ZVVwKCk7XG4gICAgICAgIHRoaXMubW92ZVN0YXJzKCk7XG5cbiAgICAgICAgLy9wbGFuZXRzXG4gICAgICAgIHRoaXMucmluZ1BsYW5ldHMuZm9yRWFjaChyaW5nID0+IHtcbiAgICAgICAgICAgIHJpbmcuZHJhdyh0aGlzLmN0eCk7XG4gICAgICAgICAgICByaW5nLm1vdmVEaWFnb25hbERvd24oKTtcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy50d2luUGxhbmV0LmZvckVhY2godHdpbiA9PiB7XG4gICAgICAgICAgICB0d2luLmRyYXcodGhpcy5jdHgpO1xuICAgICAgICAgICAgdHdpbi5tb3ZlRGlhZ29uYWxVcCgpXG4gICAgICAgIH0pXG5cbiAgICAgICAgLy9yb2NrZXRcbiAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKHRoaXMucm9ja2V0LmksIFJPQ0tFVC5TWCwgUk9DS0VULlNZLFxuICAgICAgICAgICAgc3ByaXRlV2lkdGgsIHNwcml0ZUhlaWdodCxcbiAgICAgICAgICAgIHRoaXMucm9ja2V0LnBvc1swXSwgdGhpcy5yb2NrZXQucG9zWzFdLCAxMDAsIDE1MClcbiAgICAgICAgLy9lbnRlciBhbmQgZ2V0IHRvIGNlbnRlciBcbiAgICAgICAgaWYgKFJPQ0tFVC5DRU5URVJfUE9TWzBdID49ICB0aGlzLnJvY2tldC5wb3NbMF0gJiYgUk9DS0VULkNFTlRFUl9QT1NbMV0gPj0gdGhpcy5yb2NrZXQucG9zWzFdKSB7XG4gICAgICAgICAgICB0aGlzLnVwID0gZmFsc2U7IFxuICAgICAgICB9XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudXApXG4gICAgICAgIHRoaXMuc3dpdGNoUm9ja2V0QW5pbWF0aW9uKHRoaXMudXApXG5cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cblxuICAgIHN3aXRjaFJvY2tldEFuaW1hdGlvbih1cCkge1xuICAgICAgICAvL2lmIChST0NLRVQuQ0VOVEVSX1BPU1swXSA9PT0gdGhpcy5yb2NrZXQucG9zWzBdICYmIFJPQ0tFVC5DRU5URVJfUE9TWzFdID09PSB0aGlzLnJvY2tldC5wb3NbMV0pXG4gICAgICAgIGlmICh1cCkge1xuICAgICAgICAgICAgLy9zcXVhcmUgYW5pbWF0aW9uICBcbiAgICAgICAgICAgIHRoaXMucm9ja2V0Lm1vdmVJbnRvU2NyZWVuKCk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGxldCBmb250ID0gbmV3IEZvbnRGYWNlKCdEaXBsb21hdGEgU0MnLCApXG4gICAgICAgICAgICB0aGlzLmN0eC5mb250ID0gJ29ibGlxdWUgMzBweCBWZXJkYW5hJztcbiAgICAgICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KCdXSU5ORVIhJywgMTg1LCAyNzUpO1xuICAgICAgICAgICAgdGhpcy5jdHguZm9udCA9ICdvYmxpcXVlIDE1cHggVmVyZGFuYSc7XG4gICAgICAgICAgICAvL2NyZWF0ZSBhIHRlbXAgY2FuYXZzIHdoaWNoIHdpbGwgYmUgdXNlIHRvIHJlc3RhcnQgdGhlIGdhbWUgbG9vcCBcbiAgICAgICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KCdDbGljayBUbyBQbGF5IEFnYWluJywgMCwgNzMwKVxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cblxuICAgIGFzc2lnblNyY3MoKSB7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC5zcmMgPSAnLi9hc3Nlc3RzL2V4b3NwaGVyZS9sYXllcnMvcGFyYWxsYXgtc3BhY2UtYmFja2dyb3VuZC5wbmcnXG4gICAgfVxuXG4gICAgZ2VuZXJhdGVSaW5nUGxhbmV0cygpIHtcbiAgICAgICAgbGV0IGFyciA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpIDwgNTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgYXJyLnB1c2gobmV3IE1vdmluZ09iamVjdHMoe1xuICAgICAgICAgICAgICAgICAgICBwb3M6IHRoaXMucmFuZG9tUG9zKCksXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0aGlzLnJhbmRvbVNpemUoMTAwLCAxMDApWzBdLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHRoaXMucmFuZG9tU2l6ZSgxMDAsIDEwMClbMF0sXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnYmxhY2snLFxuICAgICAgICAgICAgICAgICAgICBjYW52YXM6IHRoaXMuY2FudmFzLFxuICAgICAgICAgICAgICAgICAgICBzcmM6ICcuL2Fzc2VzdHMvZXhvc3BoZXJlL2xheWVycy9wYXJhbGxheC1zcGFjZS1yaW5nLXBsYW5ldC5wbmcnXG4gICAgICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXJyOyBcbiAgICB9XG5cbiAgICBnZW5lcmF0ZVR3aW5QbGFuZXRzKCkge1xuICAgICAgICBsZXQgYXJyID0gW107XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgICAgICAgbGV0IHNpemUgPSB0aGlzLnJhbmRvbVNpemUoMjAwLCAyMDApO1xuICAgICAgICAgICAgYXJyLnB1c2gobmV3IE1vdmluZ09iamVjdHMoe1xuICAgICAgICAgICAgICAgIHBvczogdGhpcy5yYW5kb21Qb3MoKSxcbiAgICAgICAgICAgICAgICB3aWR0aDogc2l6ZVswXSxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHNpemVbMV0sXG4gICAgICAgICAgICAgICAgY29sb3I6ICdibGFjaycsXG4gICAgICAgICAgICAgICAgY2FudmFzOiB0aGlzLmNhbnZhcyxcbiAgICAgICAgICAgICAgICBzcmM6ICcuL2Fzc2VzdHMvZXhvc3BoZXJlL2xheWVycy9wYXJhbGxheC1zcGFjZS1mYXItcGxhbmV0cy5wbmcnXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXJyOyBcbiAgICB9XG5cbiAgICBtb3ZlU3RhcnMoKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuYmFja2dyb3VuZC5wb3MpO1xuICAgICAgICBpZiAodGhpcy5zdGFycy5wb3NbMF0gPiB0aGlzLnN0YXJzLndpZHRoKSB0aGlzLnN0YXJzLnBvc1swXSA9IDA7XG4gICAgICAgIGVsc2UgdGhpcy5zdGFycy5wb3NbMF0gKz0gMC4wNTtcbiAgICB9XG5cbiAgICByYW5kb21Qb3MoKSB7XG4gICAgICAgIGxldCB4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTAwKVxuICAgICAgICBsZXQgeSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDc1MCk7XG4gICAgICAgIHJldHVybiBbeCwgeV1cbiAgICB9XG5cbiAgICByYW5kb21TaXplKHcsaCkge1xuICAgICAgICBsZXQgbmV3VyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHcpXG4gICAgICAgIGxldCBuZXdIID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogaCk7XG4gICAgICAgIHJldHVybiBbbmV3VywgbmV3SF1cbiAgICB9XG5cblxuXG5cbn0iXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0cyIsInNwcml0ZVdpZHRoIiwic3ByaXRlSGVpZ2h0IiwiUk9DS0VUIiwiU1giLCJTWSIsIlNXSURUSCIsIlNIRUlHSFQiLCJEWCIsIkRZIiwiRFdJRFRIIiwiREhFSUdIVCIsIkNFTlRFUl9QT1MiLCJFeG9zcGhlcmUiLCJjb25zdHJ1Y3RvciIsImN0eCIsImNhbnZhcyIsInJvY2tldCIsImJhY2tncm91bmQiLCJJbWFnZSIsInN0YXJzIiwicG9zIiwid2lkdGgiLCJoZWlnaHQiLCJjb2xvciIsInNyYyIsInVwIiwicGF0aElkeCIsInJpbmdQbGFuZXRzIiwiZ2VuZXJhdGVSaW5nUGxhbmV0cyIsInR3aW5QbGFuZXQiLCJnZW5lcmF0ZVR3aW5QbGFuZXRzIiwiYmlnUGxhbmV0IiwiYXNzaWduU3JjcyIsImFuaW1hdGUiLCJjbGVhclJlY3QiLCJkcmF3SW1hZ2UiLCJkcmF3IiwibW92ZVVwIiwibW92ZVN0YXJzIiwiZm9yRWFjaCIsInJpbmciLCJtb3ZlRGlhZ29uYWxEb3duIiwidHdpbiIsIm1vdmVEaWFnb25hbFVwIiwiaSIsInN3aXRjaFJvY2tldEFuaW1hdGlvbiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImJpbmQiLCJtb3ZlSW50b1NjcmVlbiIsImZvbnQiLCJmaWxsVGV4dCIsImFyciIsInB1c2giLCJyYW5kb21Qb3MiLCJyYW5kb21TaXplIiwic2l6ZSIsIngiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ5IiwidyIsImgiLCJuZXdXIiwibmV3SCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/levels/exosphere.js\n");

/***/ }),

/***/ "./src/scripts/levels/mesosphere.js":
/*!******************************************!*\
  !*** ./src/scripts/levels/mesosphere.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Mesosphere; }\n/* harmony export */ });\n/* harmony import */ var _movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nconst ROCKET_INIT = {\n  SX: 0,\n  SY: 0,\n  SWIDTH: 135,\n  SHEIGHT: 145,\n  DX: 215,\n  DY: 575,\n  DWIDTH: 100,\n  DHEIGHT: 150\n};\nconst PLATFORM = {\n  DX: 50,\n  DY: 400,\n  DWIDTH: 400,\n  DHEIGHT: 400\n};\nconst METEORITE = {\n  SX: 562,\n  SY: 600,\n  SWIDTH: 1500,\n  SHEIGHT: 1200,\n  DX: 300,\n  DY: 0,\n  DWIDTH: 300,\n  DHEIGHT: 300\n};\nclass Mesosphere {\n  constructor(ctx, canvas, rocket, platform, strikes) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.rocket = rocket;\n    this.platform = platform;\n    this.strikes = strikes;\n    this.background = new Image();\n    this.assignSrcs();\n    this.loadLife();\n    this.animate(true);\n  }\n  animate(idle) {\n    //have the meteorites entering the exiting the frame \n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.background, 0, 0, this.canvas.width, this.canvas.height);\n    this.meteorites.forEach(meteorite => {\n      meteorite.draw(this.ctx);\n      meteorite.moveDown();\n    });\n    this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT);\n    if (idle) this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY, ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT, ROCKET_INIT.DX, ROCKET_INIT.DY, ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n    if (this.strikes >= 3) {\n      this.ctx.font = \"50px Rockwell\";\n      this.ctx.fillStyle = 'red';\n      this.ctx.fillText('GAME OVER', 100, 325, this.canvas.width);\n    }\n    this.amountOfLives();\n    if (idle) requestAnimationFrame(this.animate.bind(this));\n  }\n  assignSrcs() {\n    this.background.src = './assests/mesosphere/mesos_background.png';\n    this.meteorites = this.generateMeteorite();\n  }\n  generateMeteorite() {\n    let meteorites = [];\n    for (let i = 1; i < 10; i++) {\n      let src = Math.floor(Math.random() * 5);\n      meteorites.push(new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: this.randomPos(),\n        width: 300,\n        height: 300,\n        color: 'black',\n        canvas: this.canvas,\n        src: `./assests/mesosphere/meteorite_${src}.png`\n      }));\n    }\n    return meteorites;\n  }\n  randomPos() {\n    let x = Math.floor(Math.random() * 500);\n    return [x, 0];\n  }\n  loadLife() {\n    this.life = new Image();\n    this.life.src = './assests/life.png';\n  }\n  amountOfLives() {\n    if (this.strikes === 0) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50);\n    } else if (this.strikes === 1) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n    } else if (this.strikes === 2) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/levels/mesosphere.js\n");

/***/ }),

/***/ "./src/scripts/levels/movingObjects.js":
/*!*********************************************!*\
  !*** ./src/scripts/levels/movingObjects.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MovingObjects; }\n/* harmony export */ });\nclass MovingObjects {\n  constructor(options) {\n    this.pos = options.pos;\n    this.width = options.width;\n    this.height = options.height;\n    this.color = options.color;\n    this.canvas = options.canvas;\n    this.i = new Image();\n    this.i.src = options.src;\n  }\n\n  // animate(ctx) {\n  //     ctx.move();\n\n  // }\n\n  draw(ctx) {\n    ctx.drawImage(this.i, this.pos[0], this.pos[1], this.width, this.height);\n    // ctx.fillStyle = this.color;\n    // ctx.fillRect(this.pos[0], this.pos[1], this.width, this.height)\n  }\n\n  moveHoz() {\n    this.pos[0]--;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = 500;\n      this.pos[1] = Math.floor(Math.random() * 300);\n    }\n  }\n  moveHozRight() {\n    // console.log(this.pos)\n    this.pos[0] += 1;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = -400;\n      this.pos[1] = 300;\n    }\n  }\n  movePurelyDowm() {\n    this.pos[1] += 1;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = 0;\n      this.pos[1] = -700;\n    }\n  }\n  moveDown() {\n    this.pos[0]--;\n    this.pos[1]++;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = 500;\n      this.pos[1] = Math.floor(Math.random() * 300);\n    }\n  }\n  moveUpAndDown(up) {\n    if (up) {\n      this.pos[1] += 5;\n    } else {\n      this.pos[1] -= 5;\n    }\n  }\n  moveSquare(x, y, pathIdx) {\n    //revisit\n    let center_pos = [200, 300]; //enter screen at this pos at end \n    const path = [[x, y], [x, 0], [x, 0], [-x, y], [-x, y], [x, 0], [y, 0], [-(2 * x), -(2 * y)], [2 * x, 0], [-x, 0]];\n    console.log(this.pos[0], path[pathIdx]);\n    this.pos[0] += path[pathIdx];\n    this.pos[1] += path[pathIdx];\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = 200;\n      this.pos[1] = 300;\n    }\n  }\n  moveIntoScreen() {\n    // this.pos[0] ;\n    this.pos[1] -= 3;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = 200;\n      this.pos[1] = 700;\n    }\n  }\n  moveUp() {\n    // this.pos[0] ;\n    this.pos[1] += 0.1;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = -100;\n      this.pos[1] = -100;\n    }\n  }\n  moveDiagonalDown() {\n    this.pos[0] += 0.25;\n    this.pos[1] += 0.25;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = -100;\n      this.pos[1] = Math.floor(Math.random() * 300);\n    }\n  }\n  moveDiagonalUp() {\n    this.pos[0] -= 0.5;\n    this.pos[1] -= 0.5;\n    if (!this.inbounds(this.pos[0], this.pos[1])) {\n      this.pos[0] = 600;\n      this.pos[1] = Math.floor(Math.random() * 300);\n    }\n  }\n  inbounds(x, y) {\n    if (x > this.canvas.width || x + this.width < 0 || y + this.height < 0 || y > this.canvas.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/levels/movingObjects.js\n");

/***/ }),

/***/ "./src/scripts/levels/stratosphere.js":
/*!********************************************!*\
  !*** ./src/scripts/levels/stratosphere.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Stratosphere; }\n/* harmony export */ });\n/* harmony import */ var _movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nconst ROCKET_INIT = {\n  SX: 0,\n  SY: 0,\n  SWIDTH: 135,\n  SHEIGHT: 145,\n  DX: 215,\n  DY: 575,\n  DWIDTH: 100,\n  DHEIGHT: 150\n};\nconst PLATFORM = {\n  DX: 50,\n  DY: 400,\n  DWIDTH: 400,\n  DHEIGHT: 400\n};\nclass Stratosphere {\n  constructor(ctx, canvas, rocket, platform, strikes) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.rocket = rocket;\n    this.platform = platform;\n    this.strikes = strikes;\n    this.background = new Image();\n    this.cloud1 = new Image();\n    this.cloud2 = new Image();\n    this.cloud3 = new Image();\n    this.weatherBallon = new Image();\n    this.assignSrcs();\n    this.loadLife();\n    this.animate(true);\n  }\n  animate(idle) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.background, 0, 0);\n    this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT);\n    if (idle) this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY, ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT, ROCKET_INIT.DX, ROCKET_INIT.DY, ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n    this.clouds.forEach(cloud => {\n      cloud.draw(this.ctx);\n      cloud.moveHoz();\n    });\n    this.balloons.forEach(balloon => {\n      balloon.draw(this.ctx);\n      balloon.moveHoz();\n    });\n    if (this.strikes >= 3) {\n      this.ctx.font = \"50px Rockwell\";\n      this.ctx.fillStyle = 'red';\n      this.ctx.fillText('GAME OVER', 100, 325, this.canvas.width);\n    }\n    this.amountOfLives();\n    // this.ctx.drawImage(this.weatherBallon, 0,0, 200, 300, 300, 150, 50, 200);\n    if (idle) requestAnimationFrame(this.animate.bind(this));\n  }\n  assignSrcs() {\n    this.background.src = './assests/stratosphere/stratoBackground_complete.png';\n    this.clouds = this.generateClouds();\n    this.balloons = this.generateBallons();\n  }\n  generateClouds() {\n    let clouds = [];\n    for (let i = 1; i < 4; i++) {\n      clouds.push(new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: this.randomPos(300),\n        width: 100,\n        height: 50,\n        color: 'black',\n        canvas: this.canvas,\n        src: `./assests/stratosphere/cloud${i}.png`\n      }));\n    }\n    return clouds;\n  }\n  generateBallons() {\n    let balloons = [];\n    for (let i = 0; i < 4; i++) {\n      balloons.push(new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: this.randomPos(150),\n        width: 50,\n        height: 200,\n        color: 'black',\n        canvas: this.canvas,\n        src: `./assests/stratosphere/weather-balloon.png`\n      }));\n    }\n    return balloons;\n  }\n  randomPos(height) {\n    let x = Math.floor(Math.random() * 500);\n    let y = Math.floor(Math.random() * height);\n    return [x, y];\n  }\n  loadLife() {\n    this.life = new Image();\n    this.life.src = './assests/life.png';\n  }\n  amountOfLives() {\n    if (this.strikes === 0) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50);\n    } else if (this.strikes === 1) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n    } else if (this.strikes === 2) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/levels/stratosphere.js\n");

/***/ }),

/***/ "./src/scripts/levels/thermosphere.js":
/*!********************************************!*\
  !*** ./src/scripts/levels/thermosphere.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Thermosphere; }\n/* harmony export */ });\n/* harmony import */ var _movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nconst ROCKET_INIT = {\n  SX: 0,\n  SY: 0,\n  SWIDTH: 135,\n  SHEIGHT: 145,\n  DX: 215,\n  DY: 575,\n  DWIDTH: 100,\n  DHEIGHT: 150\n};\nconst PLATFORM = {\n  DX: 50,\n  DY: 400,\n  DWIDTH: 400,\n  DHEIGHT: 400\n};\nclass Thermosphere {\n  constructor(ctx, canvas, rocket, platform, strikes) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.rocket = rocket;\n    this.strikes = strikes;\n    this.platform = platform;\n    this.backgroundSpeed = 1;\n    this.assignSrcs();\n    this.loadLife();\n    this.animate(true);\n  }\n  animate(idle) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.background.draw(this.ctx);\n    // this.moveBackground();\n    this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT);\n    if (idle) {\n      this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY, ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT, ROCKET_INIT.DX, ROCKET_INIT.DY, ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n    }\n    if (this.strikes >= 3) {\n      this.ctx.font = \"50px Rockwell\";\n      this.ctx.fillStyle = 'red';\n      this.ctx.fillText('GAME OVER', 100, 325, this.canvas.width);\n    }\n    this.amountOfLives();\n    // this.ctx.drawImage(this.background, 0, 0, 500, 750);\n    if (idle) requestAnimationFrame(this.animate.bind(this));\n  }\n  assignSrcs() {\n    this.background = new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      pos: [0, 0],\n      width: this.canvas.width,\n      height: this.canvas.height,\n      color: 'black',\n      canvas: this.canvas,\n      src: `./assests/thermosphere/thermo-background.jpg`\n    });\n  }\n  moveBackground() {\n    console.log(this.background.pos);\n    if (this.background.pos[0] > this.background.width) this.background.pos[0] = 0;else this.background.pos[0] += this.backgroundSpeed;\n  }\n  loadLife() {\n    this.life = new Image();\n    this.life.src = './assests/life.png';\n  }\n  amountOfLives() {\n    if (this.strikes === 0) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50);\n    } else if (this.strikes === 1) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n    } else if (this.strikes === 2) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9sZXZlbHMvdGhlcm1vc3BoZXJlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDO0FBRTVDLE1BQU1DLFdBQVcsR0FBRztFQUNoQkMsRUFBRSxFQUFFLENBQUM7RUFDTEMsRUFBRSxFQUFFLENBQUM7RUFDTEMsTUFBTSxFQUFFLEdBQUc7RUFDWEMsT0FBTyxFQUFFLEdBQUc7RUFDWkMsRUFBRSxFQUFFLEdBQUc7RUFDUEMsRUFBRSxFQUFFLEdBQUc7RUFDUEMsTUFBTSxFQUFFLEdBQUc7RUFDWEMsT0FBTyxFQUFFO0FBQ2IsQ0FBQztBQUVELE1BQU1DLFFBQVEsR0FBRztFQUNiSixFQUFFLEVBQUUsRUFBRTtFQUNOQyxFQUFFLEVBQUUsR0FBRztFQUNQQyxNQUFNLEVBQUUsR0FBRztFQUNYQyxPQUFPLEVBQUU7QUFDYixDQUFDO0FBR2MsTUFBTUUsWUFBWSxDQUFDO0VBQzlCQyxXQUFXLENBQUNDLEdBQUcsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFO0lBQ2hELElBQUksQ0FBQ0osR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxNQUFNLEdBQUdBLE1BQU07SUFDcEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBLE1BQU07SUFDcEIsSUFBSSxDQUFDRSxPQUFPLEdBQUdBLE9BQU87SUFDdEIsSUFBSSxDQUFDRCxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSSxDQUFDRSxlQUFlLEdBQUcsQ0FBQztJQUN4QixJQUFJLENBQUNDLFVBQVUsRUFBRTtJQUNqQixJQUFJLENBQUNDLFFBQVEsRUFBRTtJQUNmLElBQUksQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQztFQUN0QjtFQUVBQSxPQUFPLENBQUNDLElBQUksRUFBRTtJQUNWLElBQUksQ0FBQ1QsR0FBRyxDQUFDVSxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUNULE1BQU0sQ0FBQ1UsS0FBSyxFQUFFLElBQUksQ0FB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RUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO01BQzlELElBQUksQ0FBQzVCLEdBQUcsQ0FBQ2UsU0FBUyxDQUFDLElBQUksQ0FBQ2EsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7SUFDbkUsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDeEIsT0FBTyxLQUFLLENBQUMsRUFBRTtNQUMzQixJQUFJLENBQUNKLEdBQUcsQ0FBQ2UsU0FBUyxDQUFDLElBQUksQ0FBQ2EsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7TUFDN0QsSUFBSSxDQUFDNUIsR0FBRyxDQUFDZSxTQUFTLENBQUMsSUFBSSxDQUFDYSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNsRSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUN4QixPQUFPLEtBQUssQ0FBQyxFQUFFO01BQzNCLElBQUksQ0FBQ0osR0FBRyxDQUFDZSxTQUFTLENBQUMsSUFBSSxDQUFDYSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNqRTtFQUNKO0FBT0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL3NjcmlwdHMvbGV2ZWxzL3RoZXJtb3NwaGVyZS5qcz8xN2RmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb3ZpbmdPYmplY3RzIGZyb20gXCIuL21vdmluZ09iamVjdHNcIjtcblxuY29uc3QgUk9DS0VUX0lOSVQgPSB7XG4gICAgU1g6IDAsXG4gICAgU1k6IDAsXG4gICAgU1dJRFRIOiAxMzUsXG4gICAgU0hFSUdIVDogMTQ1LFxuICAgIERYOiAyMTUsXG4gICAgRFk6IDU3NSxcbiAgICBEV0lEVEg6IDEwMCxcbiAgICBESEVJR0hUOiAxNTBcbn1cblxuY29uc3QgUExBVEZPUk0gPSB7XG4gICAgRFg6IDUwLFxuICAgIERZOiA0MDAsXG4gICAgRFdJRFRIOiA0MDAsXG4gICAgREhFSUdIVDogNDAwXG59XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGhlcm1vc3BoZXJlIHtcbiAgICBjb25zdHJ1Y3RvcihjdHgsIGNhbnZhcywgcm9ja2V0LCBwbGF0Zm9ybSwgc3RyaWtlcykge1xuICAgICAgICB0aGlzLmN0eCA9IGN0eDtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XG4gICAgICAgIHRoaXMucm9ja2V0ID0gcm9ja2V0O1xuICAgICAgICB0aGlzLnN0cmlrZXMgPSBzdHJpa2VzO1xuICAgICAgICB0aGlzLnBsYXRmb3JtID0gcGxhdGZvcm07XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZFNwZWVkID0gMTsgXG4gICAgICAgIHRoaXMuYXNzaWduU3JjcygpO1xuICAgICAgICB0aGlzLmxvYWRMaWZlKCk7XG4gICAgICAgIHRoaXMuYW5pbWF0ZSh0cnVlKTtcbiAgICB9XG5cbiAgICBhbmltYXRlKGlkbGUpIHsgXG4gICAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KVxuICAgICAgICB0aGlzLmJhY2tncm91bmQuZHJhdyh0aGlzLmN0eCk7XG4gICAgICAgIC8vIHRoaXMubW92ZUJhY2tncm91bmQoKTtcbiAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKHRoaXMucGxhdGZvcm0sIFBMQVRGT1JNLkRYLCBQTEFURk9STS5EWSwgUExBVEZPUk0uRFdJRFRILCBQTEFURk9STS5ESEVJR0hUKVxuICAgICAgICBpZiAoaWRsZSkge1xuICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKHRoaXMucm9ja2V0LCBST0NLRVRfSU5JVC5TWCwgUk9DS0VUX0lOSVQuU1ksXG4gICAgICAgICAgICBST0NLRVRfSU5JVC5TV0lEVEgsIFJPQ0tFVF9JTklULlNIRUlHSFQsXG4gICAgICAgICAgICBST0NLRVRfSU5JVC5EWCwgUk9DS0VUX0lOSVQuRFksXG4gICAgICAgICAgICBST0NLRVRfSU5JVC5EV0lEVEgsIFJPQ0tFVF9JTklULkRIRUlHSFQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnN0cmlrZXMgPj0gMykge1xuICAgICAgICAgICAgdGhpcy5jdHguZm9udCA9IFwiNTBweCBSb2Nrd2VsbFwiO1xuICAgICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJ3JlZCdcbiAgICAgICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KCdHQU1FIE9WRVInLCAxMDAsIDMyNSwgdGhpcy5jYW52YXMud2lkdGgpXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hbW91bnRPZkxpdmVzKCk7XG4gICAgICAgIC8vIHRoaXMuY3R4LmRyYXdJbWFnZSh0aGlzLmJhY2tncm91bmQsIDAsIDAsIDUwMCwgNzUwKTtcbiAgICAgICAgaWYgKGlkbGUpIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgYXNzaWduU3JjcygpIHtcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gbmV3IE1vdmluZ09iamVjdHMoe1xuICAgICAgICAgICAgcG9zOiBbMCwwXSxcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogdGhpcy5jYW52YXMuaGVpZ2h0LFxuICAgICAgICAgICAgY29sb3I6ICdibGFjaycsXG4gICAgICAgICAgICBjYW52YXM6IHRoaXMuY2FudmFzLFxuICAgICAgICAgICAgc3JjOiBgLi9hc3Nlc3RzL3RoZXJtb3NwaGVyZS90aGVybW8tYmFja2dyb3VuZC5qcGdgXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgbW92ZUJhY2tncm91bmQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmFja2dyb3VuZC5wb3MpO1xuICAgICAgICBpZiAodGhpcy5iYWNrZ3JvdW5kLnBvc1swXSA+IHRoaXMuYmFja2dyb3VuZC53aWR0aCkgdGhpcy5iYWNrZ3JvdW5kLnBvc1swXSA9IDA7XG4gICAgICAgIGVsc2UgdGhpcy5iYWNrZ3JvdW5kLnBvc1swXSArPSB0aGlzLmJhY2tncm91bmRTcGVlZDtcbiAgICB9XG4gICAgbG9hZExpZmUoKSB7XG4gICAgICAgIHRoaXMubGlmZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLmxpZmUuc3JjID0gJy4vYXNzZXN0cy9saWZlLnBuZydcbiAgICB9XG5cbiAgICBhbW91bnRPZkxpdmVzKCkge1xuICAgICAgICBpZiAodGhpcy5zdHJpa2VzID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UodGhpcy5saWZlLCAwLCAwLCAzMzUsIDMzNSwgMCwgNzAwLCA1MCwgNTApXG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UodGhpcy5saWZlLCAwLCAwLCAzMzUsIDMzNSwgNTAsIDcwMCwgNTAsIDUwKVxuICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKHRoaXMubGlmZSwgMCwgMCwgMzM1LCAzMzUsIDEwMCwgNzAwLCA1MCwgNTApXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zdHJpa2VzID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UodGhpcy5saWZlLCAwLCAwLCAzMzUsIDMzNSwgMCwgNzAwLCA1MCwgNTApXG4gICAgICAgICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UodGhpcy5saWZlLCAwLCAwLCAzMzUsIDMzNSwgNTAsIDcwMCwgNTAsIDUwKVxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc3RyaWtlcyA9PT0gMikge1xuICAgICAgICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKHRoaXMubGlmZSwgMCwgMCwgMzM1LCAzMzUsIDAsIDcwMCwgNTAsIDUwKVxuICAgICAgICB9XG4gICAgfVxuXG5cblxuXG5cblxufSJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3RzIiwiUk9DS0VUX0lOSVQiLCJTWCIsIlNZIiwiU1dJRFRIIiwiU0hFSUdIVCIsIkRYIiwiRFkiLCJEV0lEVEgiLCJESEVJR0hUIiwiUExBVEZPUk0iLCJUaGVybW9zcGhlcmUiLCJjb25zdHJ1Y3RvciIsImN0eCIsImNhbnZhcyIsInJvY2tldCIsInBsYXRmb3JtIiwic3RyaWtlcyIsImJhY2tncm91bmRTcGVlZCIsImFzc2lnblNyY3MiLCJsb2FkTGlmZSIsImFuaW1hdGUiLCJpZGxlIiwiY2xlYXJSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kIiwiZHJhdyIsImRyYXdJbWFnZSIsImZvbnQiLCJmaWxsU3R5bGUiLCJmaWxsVGV4dCIsImFtb3VudE9mTGl2ZXMiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJiaW5kIiwicG9zIiwiY29sb3IiLCJzcmMiLCJtb3ZlQmFja2dyb3VuZCIsImNvbnNvbGUiLCJsb2ciLCJsaWZlIiwiSW1hZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/levels/thermosphere.js\n");

/***/ }),

/***/ "./src/scripts/levels/troposphere.js":
/*!*******************************************!*\
  !*** ./src/scripts/levels/troposphere.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Troposphere; }\n/* harmony export */ });\n/* harmony import */ var _movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nconst ROCKET_INIT = {\n  SX: 0,\n  SY: 0,\n  SWIDTH: 135,\n  SHEIGHT: 145,\n  DX: 215,\n  DY: 575,\n  DWIDTH: 100,\n  DHEIGHT: 150\n};\nconst PLATFORM = {\n  DX: 50,\n  DY: 400,\n  DWIDTH: 400,\n  DHEIGHT: 400\n};\nclass Troposphere {\n  constructor(ctx, canvas, rocket, platform, strikes) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.strikes = strikes;\n    this.background = new Image();\n    this.rocket = rocket;\n    this.platform = platform;\n    this.assignSrcs();\n    this.loadLife();\n    this.animate(true);\n  }\n  animate(idle) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.background, 0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT);\n    if (idle) {\n      this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY, ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT, ROCKET_INIT.DX, ROCKET_INIT.DY, ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n    }\n    this.clouds.forEach(cloud => {\n      cloud.draw(this.ctx);\n      cloud.moveHoz();\n    });\n    if (this.strikes >= 3) {\n      this.ctx.font = \"50px Rockwell\";\n      this.ctx.fillStyle = 'red';\n      this.ctx.fillText('GAME OVER', 100, 325, this.canvas.width);\n    }\n    this.amountOfLives();\n    if (idle) requestAnimationFrame(this.animate.bind(this, true));\n  }\n  assignSrcs() {\n    this.background.src = './assests/troposphere/tropoBackground.png';\n    this.platform.src = './assests/launch-final.png';\n    this.clouds = this.generateClouds();\n  }\n  generateClouds() {\n    let clouds = [];\n    for (let i = 1; i < 9; i++) {\n      clouds.push(new _movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: this.randomPos(),\n        width: 100,\n        height: 50,\n        color: 'black',\n        canvas: this.canvas,\n        src: `./assests/troposphere/cloud${i}.png`\n      }));\n    }\n    return clouds;\n  }\n  randomPos() {\n    let x = Math.floor(Math.random() * 500);\n    let y = Math.floor(Math.random() * 300);\n    return [x, y];\n  }\n  inbounds(x, y) {\n    if (x > this.canvas.width || x + this.width < 0 || y + this.height < 0 || y > this.canvas.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  loadLife() {\n    this.life = new Image();\n    this.life.src = './assests/life.png';\n  }\n  amountOfLives() {\n    if (this.strikes === 0) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50);\n    } else if (this.strikes === 1) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50);\n    } else if (this.strikes === 2) {\n      this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/levels/troposphere.js\n");

/***/ }),

/***/ "./src/scripts/quote.js":
/*!******************************!*\
  !*** ./src/scripts/quote.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Quote; }\n/* harmony export */ });\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n\nconst RANDOM_QUOTE_API_URL = \"https://api.quotable.io/random?minLength=100&maxLength=450\";\nclass Quote {\n  constructor() {\n    // this.timer = new Timer();\n    // this.errorArr = [];\n    this.charCount = 0;\n    this.renderNewQuote();\n    this.timer = new _timer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  }\n  async getRandomQuote() {\n    try {\n      const res = await fetch(RANDOM_QUOTE_API_URL);\n      if (res.ok) {\n        let data = await res.json();\n        // console.log(data.content)\n        return data.content;\n      } else {\n        let data = await res.join();\n        throw data.meta.msg;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async renderNewQuote() {\n    this.quoteInput = document.getElementById(\"quote-input\");\n    const quote = await this.getRandomQuote();\n    console.log(quote);\n    quoteDisplay.innerHTML = \"\";\n    this.quoteInput.value = null;\n    //charCount = 0;\n    quote.split('').forEach(char => {\n      this.charCount++;\n      let span = document.createElement(\"span\");\n      span.className = 'rendered-quote';\n      span.innerHTML = char;\n      quoteDisplay.appendChild(span);\n    });\n    // charHash[pastRunKey] = charCount;\n    // pastRunKey++;\n    // console.log(timer);\n\n    this.timer.startTimer();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9xdW90ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0QjtBQUM1QixNQUFNQyxvQkFBb0IsR0FBRyw0REFBNEQ7QUFFMUUsTUFBTUMsS0FBSyxDQUFDO0VBQ3ZCQyxXQUFXLEdBQUc7SUFDVjtJQUNBO0lBQ0EsSUFBSSxDQUFDQyxTQUFTLEdBQUcsQ0FBQztJQUNsQixJQUFJLENBQUNDLGNBQWMsRUFBRTtJQUNyQixJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJTiw4Q0FBSyxFQUFFO0VBRTVCO0VBRUEsTUFBTU8sY0FBYyxHQUFHO0lBQ25CLElBQUk7TUFDQSxNQUFNQyxHQUFHLEdBQUcsTUFBTUMsS0FBSyxDQUFDUixvQkFBb0IsQ0FBQztNQUM3QyxJQUFJTyxHQUFHLENBQUNFLEVBQUUsRUFBRTtRQUNSLElBQUlDLElBQUksR0FBRyxNQUFNSCxHQUFHLENBQUNJLElBQUksRUFBRTtRQUMzQjtRQUNBLE9BQU9ELElBQUksQ0FBQ0UsT0FBTztNQUN2QixDQUFDLE1BQU07UUFDSCxJQUFJRixJQUFJLEdBQUcsTUFBTUgsR0FBRyxDQUFDTSxJQUFJLEVBQUU7UUFDM0IsTUFBTUgsSUFBSSxDQUFDSSxJQUFJLENBQUNDLEdBQUc7TUFDdkI7SUFDSixDQUFDLENBQUMsT0FBT0MsS0FBSyxFQUFFO01BQ1pDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDQSxLQUFLLENBQUM7SUFDeEI7RUFDSjtFQUVBLE1BQU1aLGNBQWMsR0FBRztJQUNuQixJQUFJLENBQUNjLFVBQVUsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsYUFBYSxDQUFDO0lBQ3hELE1BQU1DLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQ2YsY0FBYyxFQUFFO0lBQ3pDVyxPQUFPLENBQUNLLEdBQUcsQ0FBQ0QsS0FBSyxDQUFDO0lBQ2xCRSxZQUFZLENBQUNDLFNBQVMsR0FBRyxFQUFFO0lBQzNCLElBQUksQ0FBQ04sVUFBVSxDQUFDTyxLQUFLLEdBQUcsSUFBSTtJQUM1QjtJQUNBSixLQUFLLENBQUNLLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLElBQUk7TUFDNUIsSUFBSSxDQUFDekIsU0FBUyxFQUFFO01BQ2hCLElBQUkwQixJQUFJLEdBQUdWLFFBQVEsQ0FBQ1csYUFBYSxDQUFDLE1BQU0sQ0FBQztNQUN6Q0QsSUFBSSxDQUFDRSxTQUFTLEdBQUcsZ0JBQWdCO01BQ2pDRixJQUFJLENBQUNMLFNBQVMsR0FBR0ksSUFBSTtNQUNyQkwsWUFBWSxDQUFDUyxXQUFXLENBQUNILElBQUksQ0FBQztJQUNsQyxDQUFDLENBQUM7SUFDRjtJQUNBO0lBQ0E7O0lBRUEsSUFBSSxDQUFDeEIsS0FBSyxDQUFDNEIsVUFBVSxFQUFFO0VBQzNCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL3NjcmlwdHMvcXVvdGUuanM/Y2I4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGltZXIgZnJvbSBcIi4vdGltZXJcIjtcbmNvbnN0IFJBTkRPTV9RVU9URV9BUElfVVJMID0gXCJodHRwczovL2FwaS5xdW90YWJsZS5pby9yYW5kb20/bWluTGVuZ3RoPTEwMCZtYXhMZW5ndGg9NDUwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFF1b3RlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gdGhpcy50aW1lciA9IG5ldyBUaW1lcigpO1xuICAgICAgICAvLyB0aGlzLmVycm9yQXJyID0gW107XG4gICAgICAgIHRoaXMuY2hhckNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5yZW5kZXJOZXdRdW90ZSgpO1xuICAgICAgICB0aGlzLnRpbWVyID0gbmV3IFRpbWVyKCk7XG5cbiAgICB9XG5cbiAgICBhc3luYyBnZXRSYW5kb21RdW90ZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFJBTkRPTV9RVU9URV9BUElfVVJMKTtcbiAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5jb250ZW50KVxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmNvbnRlbnQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gYXdhaXQgcmVzLmpvaW4oKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBkYXRhLm1ldGEubXNnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIHJlbmRlck5ld1F1b3RlKCkge1xuICAgICAgICB0aGlzLnF1b3RlSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1b3RlLWlucHV0XCIpXG4gICAgICAgIGNvbnN0IHF1b3RlID0gYXdhaXQgdGhpcy5nZXRSYW5kb21RdW90ZSgpO1xuICAgICAgICBjb25zb2xlLmxvZyhxdW90ZSlcbiAgICAgICAgcXVvdGVEaXNwbGF5LmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgIHRoaXMucXVvdGVJbnB1dC52YWx1ZSA9IG51bGw7XG4gICAgICAgIC8vY2hhckNvdW50ID0gMDtcbiAgICAgICAgcXVvdGUuc3BsaXQoJycpLmZvckVhY2goY2hhciA9PiB7XG4gICAgICAgICAgICB0aGlzLmNoYXJDb3VudCsrO1xuICAgICAgICAgICAgbGV0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgICAgIHNwYW4uY2xhc3NOYW1lID0gJ3JlbmRlcmVkLXF1b3RlJztcbiAgICAgICAgICAgIHNwYW4uaW5uZXJIVE1MID0gY2hhcjtcbiAgICAgICAgICAgIHF1b3RlRGlzcGxheS5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICAgICAgfSlcbiAgICAgICAgLy8gY2hhckhhc2hbcGFzdFJ1bktleV0gPSBjaGFyQ291bnQ7XG4gICAgICAgIC8vIHBhc3RSdW5LZXkrKztcbiAgICAgICAgLy8gY29uc29sZS5sb2codGltZXIpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy50aW1lci5zdGFydFRpbWVyKCk7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJUaW1lciIsIlJBTkRPTV9RVU9URV9BUElfVVJMIiwiUXVvdGUiLCJjb25zdHJ1Y3RvciIsImNoYXJDb3VudCIsInJlbmRlck5ld1F1b3RlIiwidGltZXIiLCJnZXRSYW5kb21RdW90ZSIsInJlcyIsImZldGNoIiwib2siLCJkYXRhIiwianNvbiIsImNvbnRlbnQiLCJqb2luIiwibWV0YSIsIm1zZyIsImVycm9yIiwiY29uc29sZSIsInF1b3RlSW5wdXQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicXVvdGUiLCJsb2ciLCJxdW90ZURpc3BsYXkiLCJpbm5lckhUTUwiLCJ2YWx1ZSIsInNwbGl0IiwiZm9yRWFjaCIsImNoYXIiLCJzcGFuIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImFwcGVuZENoaWxkIiwic3RhcnRUaW1lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/quote.js\n");

/***/ }),

/***/ "./src/scripts/rocket.js":
/*!*******************************!*\
  !*** ./src/scripts/rocket.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Rocket; }\n/* harmony export */ });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./src/scripts/vector.js\");\n/* harmony import */ var _levels_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./levels/base */ \"./src/scripts/levels/base.js\");\n/* harmony import */ var _levels_troposphere__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./levels/troposphere */ \"./src/scripts/levels/troposphere.js\");\n/* harmony import */ var _levels_stratosphere__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./levels/stratosphere */ \"./src/scripts/levels/stratosphere.js\");\n/* harmony import */ var _levels_mesosphere__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./levels/mesosphere */ \"./src/scripts/levels/mesosphere.js\");\n/* harmony import */ var _levels_thermosphere__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./levels/thermosphere */ \"./src/scripts/levels/thermosphere.js\");\n/* harmony import */ var _levels_exosphere__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./levels/exosphere */ \"./src/scripts/levels/exosphere.js\");\n\n\n\n\n\n\n\nconst spriteWidth = 135;\nconst spriteHeight = 145;\nclass Rocket {\n  constructor(wpm, ctx, level) {\n    this.wpm = wpm;\n    this.ctx = ctx;\n    this.level = level;\n    this.passingWpm = this.level.passingWpm;\n    this.color = \"red\";\n    this.width = 50; //hitbox\n    this.height = 75; //hitbox\n    this.rocketSprite = new Image();\n    this.totalDistanceAndAcceleration();\n    this.canvas = document.getElementById(\"rocket-canvas\");\n    this.acceleration = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, this.accelerationDeltaY);\n    this.reset();\n    this.currentLevel = this.whichLevel(this.level.state);\n  }\n  reset() {\n    this.pos = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"]((this.canvas.width - this.width) / 2, this.canvas.height - 75 - this.height);\n    this.velocity = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, 0);\n  }\n  whichLevel(state) {\n    //state\n    // new Troposphere(this.ctx, this.canvas, this.level.rocket, this.level.platform);\n    switch (state) {\n      case 0:\n        //base\n        return this.level.base;\n      case 1:\n        //troposphere\n        return this.level.tropo;\n      case 2:\n        //stratosphere\n        return this.level.strato;\n      case 3:\n        //Mesosphere\n        return this.level.meso;\n      case 4:\n        //Thermosphere\n        return this.level.thermo;\n    }\n  }\n  animate(callback) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    //Upward trajectory\n    this.velocity.add(this.acceleration);\n    this.pos.add(this.velocity);\n\n    //background animatation \n    this.currentLevel.animate(false);\n\n    //rocket animation \n    if (!this.passedLevel && this.pos.y <= this.engineFailPos && this.pos.y > this.explosionPos) {\n      this.renderEngineFailure();\n      // console.log(this.);\n      this.ctx.drawImage(this.rocketSprite, this.sx, this.sy, spriteWidth, spriteHeight, this.pos.x, this.pos.y, 100, 150);\n    } else if (!this.passedLevel && this.pos.y <= this.explosionPos) {\n      this.renderExplosion();\n      // console.log(this.);\n      this.ctx.drawImage(this.rocketSprite, this.sx, this.sy, spriteWidth, spriteHeight, this.pos.x, this.pos.y, 100, 150);\n    } else {\n      this.ctx.drawImage(this.rocketSprite, this.sx, this.sy, spriteWidth, spriteHeight, this.pos.x, this.pos.y, 100, 150);\n    }\n\n    //within bounds check \n    if (this.inbounds(this.pos.x, this.pos.y) && this.pos.y >= this.yAxisStopPos) {\n      requestAnimationFrame(this.animate.bind(this, callback));\n    } else {\n      callback();\n    }\n  }\n  inbounds(x, y) {\n    if (x > this.canvas.width || x + this.width < 0 || y + this.height < 0 || y > this.canvas.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  totalDistanceAndAcceleration() {\n    this.rocketSprite.src = \"./assests/rocket_spriteSheet_final.png\";\n    this.sx = 145;\n    this.sy = 0;\n    if (this.wpm >= this.passingWpm) {\n      this.accelerationDeltaY = -.15;\n      this.yAxisStopPos = (this.height + 2) * -1;\n      this.passedLevel = true;\n    } else if (this.wpm < this.passingWpm && this.wpm >= this.passingWpm / 2) {\n      this.accelerationDeltaY = -.015;\n      this.yAxisStopPos = 137.5;\n      this.passedLevel = false;\n      this.engineFailPos = 400;\n      this.explosionPos = 200;\n    } else {\n      this.accelerationDeltaY = -.0015;\n      this.yAxisStopPos = 412.5;\n      this.passedLevel = false;\n      this.engineFailPos = 450;\n      this.explosionPos = 430;\n    }\n  }\n  loadImages() {\n    let numOfImages = 1;\n    if (--numOfImages > 0) return;\n  }\n  renderEngineFailure() {\n    if (this.sx < 435 && !this.sy) {\n      //top row \n      this.sx += 145;\n    } else if (this.sx >= 435 && !this.sy) {\n      //looked at top row and moving down to second row\n      this.sx = 290;\n    }\n  }\n  renderExplosion() {\n    /* \n    x moves by 145px \n        for row 1: max x is 440 while y is 0\n        for row 2: max is 294 while y at 150\n        for row 3: max is 440 while y is 286\n    y moves down by 150\n        for row 1: max x is 440 while y is 0\n        for row 2: max is 294 while y at 150\n        for row 3: max is 440 while y is 300 but says 286 on crop\n    */\n    //    console.log(`sx: ${this.sx} sy: ${this.sy}`);\n\n    if (this.sx < 435 && !this.sy) {\n      //top row \n      this.sx += 145;\n    } else if (this.sx >= 435 && !this.sy) {\n      //looked at top row and moving down to second row\n      this.sx = 0;\n      this.sy += 150;\n    } else if (this.sx < 290 && this.sy === 150) {\n      //looks at second row \n      this.sx += 145;\n    } else if (this.sx >= 290 && this.sy === 150) {\n      //finished and moving on to last row \n      this.sx = 0;\n      this.sy += 150;\n    } else if (this.sx < 435 && this.sy === 300) {\n      //looking thru last row \n      this.sx += 145;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/rocket.js\n");

/***/ }),

/***/ "./src/scripts/start.js":
/*!******************************!*\
  !*** ./src/scripts/start.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Start; }\n/* harmony export */ });\n/* harmony import */ var _levels_movingObjects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./levels/movingObjects */ \"./src/scripts/levels/movingObjects.js\");\n\nlet insAimate;\nconst spriteWidth = 135;\nconst spriteHeight = 145;\nclass Start {\n  constructor(ctx, canvas) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.background = new Image();\n    this.background.src = './assests/start_screen/nebula_aqua_pink.png';\n    this.stars = this.starImageArr();\n    this.rocketImg();\n    this.instructions = this.instructionsHash();\n    this.sliceIdx = 1;\n    this.posY = 50;\n    this.renderInstructions();\n  }\n  renderInstructions() {\n    // this.timeOut = setInterval(() => {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(this.background, 0, 0, 500, 750);\n    this.ctx.drawImage(this.starStatic, 0, 0, 500, 750);\n    this.stars.forEach(star => {\n      star.draw(this.ctx);\n      star.movePurelyDowm();\n    });\n    //Display test \n    this.ctx.font = 'oblique 20px Verdana';\n    this.ctx.fillStyle = 'white';\n    if (this.sen1) this.ctx.fillText(this.sen1, 0, 50, this.canvas.width);\n    if (this.sen2) this.ctx.fillText(this.sen2, 0, 80, this.canvas.width);\n    if (this.sen3) this.ctx.fillText(this.sen3, 0, 120, this.canvas.width);\n    if (this.sen4) this.ctx.fillText(this.sen4, 0, 150, this.canvas.width);\n    if (this.sen5) this.ctx.fillText(this.sen5, 0, 180, this.canvas.width);\n    if (this.sen6) this.ctx.fillText(this.sen6, 0, 210, this.canvas.width);\n    if (this.sen7) this.ctx.fillText(this.sen7, 0, 240, this.canvas.width);\n    if (this.sen8) this.ctx.fillText(this.sen8, 0, 270, this.canvas.width);\n    if (this.currentKey < 9) this.ctx.fillText(this.currentIns, 0, this.posY, this.canvas.width); //(this.canvas.width / 2) - this.ctx.measureText(this.currentIns).width / 2,\n    if (this.currentKey < 9) {\n      this.spliceAndAdd(this.sliceIdx);\n    } else {\n      this.ctx.drawImage(this.rocket.i, this.sx, this.sy, spriteWidth, spriteHeight, this.rocket.pos[0], this.rocket.pos[1], 100, 150);\n      this.rocket.moveUpAndDown(this.up);\n      this.ctx.fillText('Click to Start', 185, 575);\n      this.up = this.up ? false : true;\n    }\n    insAimate = requestAnimationFrame(this.renderInstructions.bind(this));\n\n    // }, 1000 / 60)\n  }\n\n  startGame() {\n    cancelAnimationFrame(isAnimate);\n  }\n  spliceAndAdd(idx) {\n    this.currentIns = this.instructions[this.currentKey].slice(0, idx);\n    if (this.currentKey < 9 && idx !== this.instructions[this.currentKey].length) this.currentIns += '_';\n    if (idx === this.instructions[this.currentKey].length) {\n      this.assignSen(this.currentKey, this.currentIns);\n      this.sliceIdx = 1;\n      this.currentKey += 1;\n      this.posY += 30;\n    } else {\n      this.sliceIdx++;\n    }\n  }\n  assignSen(key, currSen) {\n    if (key === 1) {\n      this.sen1 = currSen;\n    } else if (key === 2) {\n      this.sen2 = currSen;\n    } else if (key === 3) {\n      this.sen3 = currSen;\n    } else if (key === 4) {\n      this.sen4 = currSen;\n    } else if (key === 5) {\n      this.sen5 = currSen;\n    } else if (key == 6) {\n      this.sen6 = currSen;\n    } else if (key == 7) {\n      this.sen7 = currSen;\n    } else if (key == 8) {\n      this.sen8 = currSen;\n    }\n  }\n  instructionsHash() {\n    this.sen1 = '';\n    this.sen2 = '';\n    this.sen3 = '';\n    this.sen4 = '';\n    this.sen5 = '';\n    this.sen6 = '';\n    this.sen7 = '';\n    this.sen8 = '';\n    this.currentKey = 1;\n    return {\n      1: \"RocketvF is currently being fueled by a \",\n      2: \"newly synthesized 'ecofriendly' resource\",\n      3: \"However, the rocket is very ... faulty.\",\n      4: \"The rocket must be charged at each level of\",\n      5: \"the atmosphere. To get to the next level, \",\n      6: \"CORRECTLY COMPLETE each quote at a certain WPM.\",\n      7: \"You have 3 tries at each level.\",\n      8: \"Get this FAULTY ROCKET to SPACE!\"\n    };\n  }\n  starImageArr() {\n    this.starStatic = new Image();\n    this.starStatic.src = './assests/start_screen/stars3.png';\n    let arr = [],\n      x = 0,\n      y = 0;\n    for (let i = 1; i < 5; i++) {\n      console.log(y);\n      arr.push(new _levels_movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        pos: [0, y],\n        width: this.canvas.width,\n        height: this.canvas.height,\n        color: 'black',\n        canvas: this.canvas,\n        src: `./assests/start_screen/stars${i}.png`\n      }));\n      y = y - 700;\n      //  console.log(y)\n    }\n\n    console.log(arr);\n    return arr;\n  }\n  rocketImg() {\n    this.up = true;\n    this.rocket = new _levels_movingObjects__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      pos: [200, 400],\n      width: spriteWidth,\n      height: 145,\n      color: 'black',\n      canvas: this.canvas,\n      src: \"./assests/rocket_spriteSheet_final.png\"\n    });\n    this.sx = 145;\n    this.sy = 0;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/start.js\n");

/***/ }),

/***/ "./src/scripts/timer.js":
/*!******************************!*\
  !*** ./src/scripts/timer.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Timer; }\n/* harmony export */ });\nclass Timer {\n  constructor() {\n    this.startTime = new Date();\n    this.pastTime;\n  }\n  startTimer() {\n    // console.log(charHash, pastTime, errorCount)\n    const timer = document.getElementById(\"timer\");\n    timer.innerHTML = `00:00`;\n    // startTime = new Date();\n    this.startTimeInterval = setInterval(() => {\n      let currentTime = this.getTime();\n      timer.innerHTML = this.renderTimeAsClock(currentTime);\n      this.pastTime = timer.innerHTML;\n    }, 1000);\n    // let pastRunInstance = pastRunData(charCount, pastTime, errorCount)\n    // console.log(pastRunInstance)\n  }\n\n  getTime() {\n    return Math.floor((new Date() - this.startTime) / 1000);\n  }\n  renderTimeAsClock(time) {\n    if (time < 60) {\n      if (time < 10) return `00:0${time}`;\n      return `00:${time}`;\n    } else {\n      let min = Math.floor(time / 60);\n      let seconds = time % 60;\n      if (min < 10 && seconds < 10) {\n        return `0${min}:0${seconds}`;\n      } else if (min < 10 && seconds >= 10) {\n        return `0${min}:${seconds}`;\n      } else if (min >= 10 && seconds < 10) {\n        return `${min}:0${seconds}`;\n      } else {\n        return `${min}:${seconds}`;\n      }\n    }\n  }\n  endTimer() {\n    clearInterval(this.startTimeInterval);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aW1lci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBRWUsTUFBTUEsS0FBSyxDQUFDO0VBQ3ZCQyxXQUFXLEdBQUc7SUFDVixJQUFJLENBQUNDLFNBQVMsR0FBRyxJQUFJQyxJQUFJLEVBQUU7SUFDM0IsSUFBSSxDQUFDQyxRQUFRO0VBRWpCO0VBRUFDLFVBQVUsR0FBRztJQUNUO0lBQ0EsTUFBTUMsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxPQUFPLENBQUM7SUFDOUNGLEtBQUssQ0FBQ0csU0FBUyxHQUFJLE9BQU07SUFDekI7SUFDQSxJQUFJLENBQUNDLGlCQUFpQixHQUFHQyxXQUFXLENBQUMsTUFBTTtNQUN2QyxJQUFJQyxXQUFXLEdBQUcsSUFBSSxDQUFDQyxPQUFPLEVBQUU7TUFDaENQLEtBQUssQ0FBQ0csU0FBUyxHQUFHLElBQUksQ0FBQ0ssaUJBQWlCLENBQUNGLFdBQVcsQ0FBQztNQUNyRCxJQUFJLENBQUNSLFFBQVEsR0FBR0UsS0FBSyxDQUFDRyxTQUFTO0lBQ25DLENBQUMsRUFBRSxJQUFJLENBQUM7SUFDUjtJQUNBO0VBQ0o7O0VBRUFJLE9BQU8sR0FBRztJQUNOLE9BQU9FLElBQUksQ0FBQ0MsS0FBSyxDQUFDLENBQUMsSUFBSWIsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDRCxTQUFTLElBQUksSUFBSSxDQUFDO0VBQzNEO0VBRUFZLGlCQUFpQixDQUFDRyxJQUFJLEVBQUU7SUFDcEIsSUFBSUEsSUFBSSxHQUFHLEVBQUUsRUFBRTtNQUNYLElBQUlBLElBQUksR0FBRyxFQUFFLEVBQUUsT0FBUSxPQUFNQSxJQUFLLEVBQUM7TUFDbkMsT0FBUSxNQUFLQSxJQUFLLEVBQUM7SUFDdkIsQ0FBQyxNQUFNO01BQ0gsSUFBSUMsR0FBRyxHQUFHSCxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLEVBQUUsQ0FBQztNQUMvQixJQUFJRSxPQUFPLEdBQUdGLElBQUksR0FBRyxFQUFFO01BQ3ZCLElBQUlDLEdBQUcsR0FBRyxFQUFFLElBQUlDLE9BQU8sR0FBRyxFQUFFLEVBQUU7UUFDMUIsT0FBUSxJQUFHRCxHQUFJLEtBQUlDLE9BQVEsRUFBQztNQUNoQyxDQUFDLE1BQU0sSUFBSUQsR0FBRyxHQUFHLEVBQUUsSUFBSUMsT0FBTyxJQUFJLEVBQUUsRUFBRTtRQUNsQyxPQUFRLElBQUdELEdBQUksSUFBR0MsT0FBUSxFQUFDO01BQy9CLENBQUMsTUFBTSxJQUFJRCxHQUFHLElBQUksRUFBRSxJQUFJQyxPQUFPLEdBQUcsRUFBRSxFQUFFO1FBQ2xDLE9BQVEsR0FBRUQsR0FBSSxLQUFJQyxPQUFRLEVBQUM7TUFDL0IsQ0FBQyxNQUFNO1FBQ0gsT0FBUSxHQUFFRCxHQUFJLElBQUdDLE9BQVEsRUFBQztNQUM5QjtJQUNKO0VBQ0o7RUFFQUMsUUFBUSxHQUFHO0lBQ1BDLGFBQWEsQ0FBQyxJQUFJLENBQUNYLGlCQUFpQixDQUFDO0VBQ3pDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL3NjcmlwdHMvdGltZXIuanM/MTVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGltZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIHRoaXMucGFzdFRpbWU7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICBzdGFydFRpbWVyKCkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhjaGFySGFzaCwgcGFzdFRpbWUsIGVycm9yQ291bnQpXG4gICAgICAgIGNvbnN0IHRpbWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aW1lclwiKTtcbiAgICAgICAgdGltZXIuaW5uZXJIVE1MID0gYDAwOjAwYDtcbiAgICAgICAgLy8gc3RhcnRUaW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgdGhpcy5zdGFydFRpbWVJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIGxldCBjdXJyZW50VGltZSA9IHRoaXMuZ2V0VGltZSgpO1xuICAgICAgICAgICAgdGltZXIuaW5uZXJIVE1MID0gdGhpcy5yZW5kZXJUaW1lQXNDbG9jayhjdXJyZW50VGltZSk7XG4gICAgICAgICAgICB0aGlzLnBhc3RUaW1lID0gdGltZXIuaW5uZXJIVE1MO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgLy8gbGV0IHBhc3RSdW5JbnN0YW5jZSA9IHBhc3RSdW5EYXRhKGNoYXJDb3VudCwgcGFzdFRpbWUsIGVycm9yQ291bnQpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHBhc3RSdW5JbnN0YW5jZSlcbiAgICB9XG5cbiAgICBnZXRUaW1lKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcigobmV3IERhdGUoKSAtIHRoaXMuc3RhcnRUaW1lKSAvIDEwMDApXG4gICAgfVxuXG4gICAgcmVuZGVyVGltZUFzQ2xvY2sodGltZSkge1xuICAgICAgICBpZiAodGltZSA8IDYwKSB7XG4gICAgICAgICAgICBpZiAodGltZSA8IDEwKSByZXR1cm4gYDAwOjAke3RpbWV9YDtcbiAgICAgICAgICAgIHJldHVybiBgMDA6JHt0aW1lfWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgbWluID0gTWF0aC5mbG9vcih0aW1lIC8gNjApO1xuICAgICAgICAgICAgbGV0IHNlY29uZHMgPSB0aW1lICUgNjA7XG4gICAgICAgICAgICBpZiAobWluIDwgMTAgJiYgc2Vjb25kcyA8IDEwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAwJHttaW59OjAke3NlY29uZHN9YFxuICAgICAgICAgICAgfSBlbHNlIGlmIChtaW4gPCAxMCAmJiBzZWNvbmRzID49IDEwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAwJHttaW59OiR7c2Vjb25kc31gXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1pbiA+PSAxMCAmJiBzZWNvbmRzIDwgMTApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7bWlufTowJHtzZWNvbmRzfWBcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke21pbn06JHtzZWNvbmRzfWBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGVuZFRpbWVyKCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMuc3RhcnRUaW1lSW50ZXJ2YWwpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJUaW1lciIsImNvbnN0cnVjdG9yIiwic3RhcnRUaW1lIiwiRGF0ZSIsInBhc3RUaW1lIiwic3RhcnRUaW1lciIsInRpbWVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsInN0YXJ0VGltZUludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjdXJyZW50VGltZSIsImdldFRpbWUiLCJyZW5kZXJUaW1lQXNDbG9jayIsIk1hdGgiLCJmbG9vciIsInRpbWUiLCJtaW4iLCJzZWNvbmRzIiwiZW5kVGltZXIiLCJjbGVhckludGVydmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/timer.js\n");

/***/ }),

/***/ "./src/scripts/typewriting-console.js":
/*!********************************************!*\
  !*** ./src/scripts/typewriting-console.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TypeWritingConsole; }\n/* harmony export */ });\n/* harmony import */ var _rocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rocket */ \"./src/scripts/rocket.js\");\n\nclass TypeWritingConsole {\n  constructor(characterCount, time, errors, ctx, level) {\n    // console.log('hi from twc')\n    this.characterCount = characterCount;\n    this.time = time;\n    this.errors = errors;\n    this.ctx = ctx;\n    this.level = level;\n    this.minutes = parseInt(this.time.slice(0, 2));\n    this.seconds = parseInt(this.time.slice(3));\n    this.adjTime = this.adjustTime();\n    this.wpm = this.calculateWPM();\n    this.wpmFactorsDiv = document.getElementById('wpm-factors');\n    this.wpmFactorsDiv.innerHTML = \"\";\n    this.printResults();\n    this.rocket = new _rocket__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.wpm, this.ctx, this.level);\n  }\n  adjustTime() {\n    let adjSec = this.seconds / 60;\n    return this.minutes + adjSec;\n  }\n  calculateWPM() {\n    /*\n    A word is any 5+ char count \n    Gross WPM = (totalChars/5) / time(min)\n    Net WPM = Gros WPM - (errors / time(min))\n            = [(totalChars/5) - errors] / time(min)\n    */\n    let words = this.characterCount / 5;\n    let netWPM = Math.floor(Math.abs(words - this.errors) / this.adjTime);\n    return netWPM;\n  }\n  printResults() {\n    this._pastTimeCal(this.time);\n    this._pastCharCount(this.characterCount);\n    this._pastErrorCount(this.errors);\n    this._pastWPM(this.wpm);\n  }\n  _pastTimeCal(time) {\n    if (time) {\n      // const pastTimeEle = document.getElementById('wpm-factors')\n      // pastTimeEle.innerHTML = \"\"\n      // this.wpmFactorsDiv.innerHTML = \"\";\n\n      const span = document.createElement(\"span\");\n      span.innerHTML = `Time: ${time}`;\n      this.wpmFactorsDiv.appendChild(span);\n    }\n  }\n  _pastCharCount(count) {\n    //  const pastCharCount = document.getElementById('wpm-factors')\n    // console.log(pastCharCount)\n    // pastCharCount.innerHTML = \"\";\n    // this.wpmFactorsDiv.innerHTML = \"\";\n\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Char Count: ${count}`;\n    this.wpmFactorsDiv.appendChild(span);\n  }\n  _pastErrorCount(errorCount) {\n    // const pastErrorCountEle = document.getElementById('error-count')\n    // this.wpmFactorsDiv.innerHTML = \"\";\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Error(s): ${errorCount}`;\n    this.wpmFactorsDiv.appendChild(span);\n  }\n  _pastWPM(wpm) {\n    const pastWPM = document.getElementById('past-wpm');\n    pastWPM.innerHTML = \"\";\n    // this.wpmFactorsDiv.innerHTML = \"\";\n    const span = document.createElement('span');\n    span.innerHTML = `Calculated WPM: ${wpm}`;\n    pastWPM.appendChild(span);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQU0sRUFBQztJQUN2QyxJQUFJLENBQUNuQixhQUFhLENBQUNrQixXQUFXLENBQUNGLElBQUksQ0FBQztFQUN4QztFQUVDRixlQUFlLENBQUNNLFVBQVUsRUFBRTtJQUN6QjtJQUNBO0lBQ0EsTUFBTUosSUFBSSxHQUFHZixRQUFRLENBQUNnQixhQUFhLENBQUMsTUFBTSxDQUFDO0lBQzNDRCxJQUFJLENBQUNiLFNBQVMsR0FBSSxhQUFZaUIsVUFBVyxFQUFDO0lBQ3pDLElBQUksQ0FBQ3BCLGFBQWEsQ0FBQ2tCLFdBQVcsQ0FBQ0YsSUFBSSxDQUFDO0VBQ3pDO0VBRUNELFFBQVEsQ0FBQ2pCLEdBQUcsRUFBRTtJQUNYLE1BQU11QixPQUFPLEdBQUdwQixRQUFRLENBQUNDLGNBQWMsQ0FBQyxVQUFVLENBQUM7SUFDbkRtQixPQUFPLENBQUNsQixTQUFTLEdBQUcsRUFBRTtJQUN0QjtJQUNBLE1BQU1hLElBQUksR0FBR2YsUUFBUSxDQUFDZ0IsYUFBYSxDQUFDLE1BQU0sQ0FBQztJQUMzQ0QsSUFBSSxDQUFDYixTQUFTLEdBQUksbUJBQWtCTCxHQUFJLEVBQUM7SUFDekN1QixPQUFPLENBQUNILFdBQVcsQ0FBQ0YsSUFBSSxDQUFDO0VBQzdCO0FBS0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL3NjcmlwdHMvdHlwZXdyaXRpbmctY29uc29sZS5qcz9hNWU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSb2NrZXQgZnJvbSBcIi4vcm9ja2V0XCI7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHlwZVdyaXRpbmdDb25zb2xlIHtcblxuICAgIGNvbnN0cnVjdG9yKGNoYXJhY3RlckNvdW50LCB0aW1lLCBlcnJvcnMsIGN0eCwgbGV2ZWwpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2hpIGZyb20gdHdjJylcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb3VudCA9IGNoYXJhY3RlckNvdW50O1xuICAgICAgICB0aGlzLnRpbWUgPSB0aW1lOyAgIFxuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9yczsgXG4gICAgICAgIHRoaXMuY3R4ID0gY3R4OyBcbiAgICAgICAgdGhpcy5sZXZlbCA9IGxldmVsO1xuICAgICAgICB0aGlzLm1pbnV0ZXMgPSAgcGFyc2VJbnQodGhpcy50aW1lLnNsaWNlKDAsMikpO1xuICAgICAgICB0aGlzLnNlY29uZHMgPSBwYXJzZUludCh0aGlzLnRpbWUuc2xpY2UoMykpO1xuICAgICAgICB0aGlzLmFkalRpbWUgPSB0aGlzLmFkanVzdFRpbWUoKVxuICAgICAgICB0aGlzLndwbSA9IHRoaXMuY2FsY3VsYXRlV1BNKCk7XG4gICAgICAgIHRoaXMud3BtRmFjdG9yc0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cG0tZmFjdG9ycycpXG4gICAgICAgIHRoaXMud3BtRmFjdG9yc0Rpdi5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICB0aGlzLnByaW50UmVzdWx0cygpO1xuICAgICAgICB0aGlzLnJvY2tldCA9IG5ldyBSb2NrZXQodGhpcy53cG0sIHRoaXMuY3R4LCB0aGlzLmxldmVsKTtcbiAgICB9XG5cbiAgICBhZGp1c3RUaW1lKCkge1xuICAgICAgICBsZXQgYWRqU2VjID0gdGhpcy5zZWNvbmRzIC8gNjA7XG4gICAgICAgIHJldHVybiB0aGlzLm1pbnV0ZXMgKyBhZGpTZWM7XG4gICAgfVxuICAgIFxuICAgIGNhbGN1bGF0ZVdQTSgpIHtcbiAgICAgICAgLypcbiAgICAgICAgQSB3b3JkIGlzIGFueSA1KyBjaGFyIGNvdW50IFxuICAgICAgICBHcm9zcyBXUE0gPSAodG90YWxDaGFycy81KSAvIHRpbWUobWluKVxuICAgICAgICBOZXQgV1BNID0gR3JvcyBXUE0gLSAoZXJyb3JzIC8gdGltZShtaW4pKVxuICAgICAgICAgICAgICAgID0gWyh0b3RhbENoYXJzLzUpIC0gZXJyb3JzXSAvIHRpbWUobWluKVxuICAgICAgICAqL1xuICAgICAgICBsZXQgd29yZHMgPSAodGhpcy5jaGFyYWN0ZXJDb3VudCAvIDUpXG4gICAgICAgIGxldCBuZXRXUE0gPSBNYXRoLmZsb29yKE1hdGguYWJzKHdvcmRzIC0gdGhpcy5lcnJvcnMpIC8gdGhpcy5hZGpUaW1lKVxuICAgICAgICByZXR1cm4gbmV0V1BNO1xuICAgIH1cblxuICAgIHByaW50UmVzdWx0cygpIHtcbiAgICAgICAgdGhpcy5fcGFzdFRpbWVDYWwodGhpcy50aW1lKTtcbiAgICAgICAgdGhpcy5fcGFzdENoYXJDb3VudCh0aGlzLmNoYXJhY3RlckNvdW50KTtcbiAgICAgICAgdGhpcy5fcGFzdEVycm9yQ291bnQodGhpcy5lcnJvcnMpO1xuICAgICAgICB0aGlzLl9wYXN0V1BNKHRoaXMud3BtKTtcbiAgICB9XG4gICAgX3Bhc3RUaW1lQ2FsKHRpbWUpIHtcbiAgICAgICAgaWYgKHRpbWUpIHtcbiAgICAgICAgICAgIC8vIGNvbnN0IHBhc3RUaW1lRWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dwbS1mYWN0b3JzJylcbiAgICAgICAgICAgIC8vIHBhc3RUaW1lRWxlLmlubmVySFRNTCA9IFwiXCJcbiAgICAgICAgICAgIC8vIHRoaXMud3BtRmFjdG9yc0Rpdi5pbm5lckhUTUwgPSBcIlwiO1xuXG4gICAgICAgICAgICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBUaW1lOiAke3RpbWV9YDtcbiAgICAgICAgICAgIHRoaXMud3BtRmFjdG9yc0Rpdi5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICBfcGFzdENoYXJDb3VudChjb3VudCkge1xuICAgICAgICAvLyAgY29uc3QgcGFzdENoYXJDb3VudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cG0tZmFjdG9ycycpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHBhc3RDaGFyQ291bnQpXG4gICAgICAgIC8vIHBhc3RDaGFyQ291bnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgLy8gdGhpcy53cG1GYWN0b3JzRGl2LmlubmVySFRNTCA9IFwiXCI7XG5cbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBDaGFyIENvdW50OiAke2NvdW50fWA7XG4gICAgICAgIHRoaXMud3BtRmFjdG9yc0Rpdi5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICB9XG5cbiAgICAgX3Bhc3RFcnJvckNvdW50KGVycm9yQ291bnQpIHtcbiAgICAgICAgLy8gY29uc3QgcGFzdEVycm9yQ291bnRFbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXJyb3ItY291bnQnKVxuICAgICAgICAvLyB0aGlzLndwbUZhY3RvcnNEaXYuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBFcnJvcihzKTogJHtlcnJvckNvdW50fWA7XG4gICAgICAgICB0aGlzLndwbUZhY3RvcnNEaXYuYXBwZW5kQ2hpbGQoc3Bhbik7XG4gICAgfVxuXG4gICAgIF9wYXN0V1BNKHdwbSkge1xuICAgICAgICBjb25zdCBwYXN0V1BNID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Bhc3Qtd3BtJyk7XG4gICAgICAgIHBhc3RXUE0uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgLy8gdGhpcy53cG1GYWN0b3JzRGl2LmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIHNwYW4uaW5uZXJIVE1MID0gYENhbGN1bGF0ZWQgV1BNOiAke3dwbX1gO1xuICAgICAgICBwYXN0V1BNLmFwcGVuZENoaWxkKHNwYW4pO1xuICAgIH1cblxuXG5cbiAgICBcbn0iXSwibmFtZXMiOlsiUm9ja2V0IiwiVHlwZVdyaXRpbmdDb25zb2xlIiwiY29uc3RydWN0b3IiLCJjaGFyYWN0ZXJDb3VudCIsInRpbWUiLCJlcnJvcnMiLCJjdHgiLCJsZXZlbCIsIm1pbnV0ZXMiLCJwYXJzZUludCIsInNsaWNlIiwic2Vjb25kcyIsImFkalRpbWUiLCJhZGp1c3RUaW1lIiwid3BtIiwiY2FsY3VsYXRlV1BNIiwid3BtRmFjdG9yc0RpdiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJwcmludFJlc3VsdHMiLCJyb2NrZXQiLCJhZGpTZWMiLCJ3b3JkcyIsIm5ldFdQTSIsIk1hdGgiLCJmbG9vciIsImFicyIsIl9wYXN0VGltZUNhbCIsIl9wYXN0Q2hhckNvdW50IiwiX3Bhc3RFcnJvckNvdW50IiwiX3Bhc3RXUE0iLCJzcGFuIiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwiY291bnQiLCJlcnJvckNvdW50IiwicGFzdFdQTSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/typewriting-console.js\n");

/***/ }),

/***/ "./src/scripts/vector.js":
/*!*******************************!*\
  !*** ./src/scripts/vector.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Vector; }\n/* harmony export */ });\nclass Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  add(vector) {\n    this.x += vector.x;\n    this.y += vector.y;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy92ZWN0b3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUVlLE1BQU1BLE1BQU0sQ0FBQztFQUN4QkMsV0FBVyxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtJQUNkLElBQUksQ0FBQ0QsQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxDQUFDLEdBQUdBLENBQUM7RUFDZDtFQUVBQyxHQUFHLENBQUNDLE1BQU0sRUFBRTtJQUNSLElBQUksQ0FBQ0gsQ0FBQyxJQUFJRyxNQUFNLENBQUNILENBQUM7SUFDbEIsSUFBSSxDQUFDQyxDQUFDLElBQUlFLE1BQU0sQ0FBQ0YsQ0FBQztFQUN0QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRmF1bHR5LVJvY2tldC8uL3NyYy9zY3JpcHRzL3ZlY3Rvci5qcz8xMzdiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZWN0b3Ige1xuICAgIGNvbnN0cnVjdG9yKHgsIHkpIHtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICB9XG5cbiAgICBhZGQodmVjdG9yKSB7XG4gICAgICAgIHRoaXMueCArPSB2ZWN0b3IueDtcbiAgICAgICAgdGhpcy55ICs9IHZlY3Rvci55IFxuICAgIH1cbn0iXSwibmFtZXMiOlsiVmVjdG9yIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsImFkZCIsInZlY3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/vector.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;