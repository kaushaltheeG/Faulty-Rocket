/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/typewriting-console */ \"./src/scripts/typewriting-console.js\");\n\nconst RANDOM_QUOTE_API_URL = \"https://api.quotable.io/random?minLength=100&maxLength=450\";\nconst quoteDisplay = document.getElementById(\"quoteDisplay\");\nconst quoteInput = document.getElementById(\"quoteInput\");\nconst timer = document.getElementById(\"timer\");\nconst canvasEl = document.getElementById('rocket-canvas');\nconst ctx = canvasEl.getContext(\"2d\");\ncanvasEl.width = 1000;\ncanvasEl.height = 1000;\nasync function getRandomQuote() {\n  try {\n    const res = await fetch(RANDOM_QUOTE_API_URL);\n    if (res.ok) {\n      let data = await res.json();\n      return data.content;\n    } else {\n      let data = await res.join();\n      throw data.meta.msg;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n// window.getRandomQuote = getRandomQuote;\n\nlet charCount;\nlet charHash = {},\n  errorArr = [];\nlet pastRunKey = 1;\nlet errorCount, startTime, pastTime;\nasync function renderNewQuote() {\n  let pastRunInstance;\n  if (pastTime) {\n    pastRunInstance = pastRunData(charHash[pastRunKey - 1], pastTime, errorCount);\n    console.log(`past run data: charCount ${pastRunInstance.characterCount} time: ${pastRunInstance.time} errors: ${pastRunInstance.errors}`);\n  }\n  errorCount = 0;\n  errorArr = [];\n  const quote = await getRandomQuote();\n  quoteDisplay.innerHTML = \"\";\n  quoteInput.value = null;\n  charCount = 0;\n  quote.split('').forEach(char => {\n    charCount++;\n    let span = document.createElement(\"span\");\n    span.className = 'rendered-quote';\n    span.innerHTML = char;\n    quoteDisplay.appendChild(span);\n  });\n  charHash[pastRunKey] = charCount;\n  pastRunKey++;\n  startTimer();\n}\n\n//to check if your input matches the rendered quote\nquoteInput.addEventListener('input', e => {\n  const quoteSpanArr = quoteDisplay.querySelectorAll(\".rendered-quote\");\n  const inputValArr = quoteInput.value.split('');\n  let finished = true,\n    caughtErrors;\n  quoteSpanArr.forEach((charSpan, i) => {\n    const inputChar = inputValArr[i];\n    if (inputChar == null) {\n      charSpan.classList.remove('correct');\n      charSpan.classList.remove('incorrect');\n      finished = false;\n    } else if (inputChar === charSpan.innerHTML) {\n      charSpan.classList.add('correct');\n      charSpan.classList.remove('incorrect');\n      finished = true;\n    } else {\n      charSpan.classList.remove('correct');\n      charSpan.classList.add('incorrect');\n      finished = false;\n      caughtErrors = _catchErors(quoteSpanArr);\n      if (errorCount < caughtErrors) errorCount = caughtErrors;\n    }\n  });\n  console.log('error arr: ' + errorArr);\n  if (finished) renderNewQuote();\n});\nfunction _catchErors(quoteSpan) {\n  quoteSpan.forEach((span, i) => {\n    if (span.className === 'rendered-quote incorrect' && !errorArr.includes(i)) errorArr.push(i);\n  });\n  return errorArr.length;\n}\n\n//timer \nfunction startTimer() {\n  // console.log(charHash, pastTime, errorCount)\n\n  timer.innerHTML = `00:00`;\n  startTime = new Date();\n  setInterval(() => {\n    let currentTime = getTime();\n    timer.innerHTML = renderTimeAsClock(currentTime);\n    pastTime = timer.innerHTML;\n  }, 1000);\n  // let pastRunInstance = pastRunData(charCount, pastTime, errorCount)\n  // console.log(pastRunInstance)\n}\n\nfunction getTime() {\n  return Math.floor((new Date() - startTime) / 1000);\n}\nfunction renderTimeAsClock(time) {\n  if (time < 60) {\n    if (time < 10) return `00:0${time}`;\n    return `00:${time}`;\n  } else {\n    let min = Math.floor(time / 60);\n    let seconds = time % 60;\n    if (min < 10 && seconds < 10) {\n      return `0${min}:0${seconds}`;\n    } else if (min < 10 && seconds >= 10) {\n      return `0${min}:${seconds}`;\n    } else if (min >= 10 && seconds < 10) {\n      return `${min}:0${seconds}`;\n    } else {\n      return `${min}:${seconds}`;\n    }\n  }\n}\nfunction pastRunData(character, time, errors) {\n  const pastRun = new _scripts_typewriting_console__WEBPACK_IMPORTED_MODULE_0__[\"default\"](character, time, errors);\n  let wpm = pastRun.calculateWPM();\n  console.log(pastRun);\n  pastRun._pastCharCount(pastRun.characterCount);\n  pastRun._pastTimeCal(pastRun.time);\n  pastRun._pastErrorCount(pastRun.errors);\n  pastRun._pastWPM(wpm);\n  return pastRun;\n}\nrenderNewQuote();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/typewriting-console.js":
/*!********************************************!*\
  !*** ./src/scripts/typewriting-console.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TypeWritingConsole; }\n/* harmony export */ });\nclass TypeWritingConsole {\n  constructor(characterCount, time, errors) {\n    console.log('hi from twc');\n    this.characterCount = characterCount;\n    this.time = time;\n    this.errors = errors;\n    this.minutes = parseInt(this.time.slice(0, 2));\n    this.seconds = parseInt(this.time.slice(3));\n  }\n  adjustTime() {\n    let adjSec = this.seconds / 60;\n    return this.minutes + adjSec;\n  }\n  calculateWPM() {\n    /*\n    A word is any 5+ char count \n    Gross WPM = (totalChars/5) / time(min)\n    Net WPM = Gros WPM - (errors / time(min))\n            = [(totalChars/5) - errors] / time(min)\n    */\n    let words = this.characterCount / 5;\n    let netWPM = Math.floor(Math.abs(words - this.errors) / this.adjustTime());\n    return netWPM;\n  }\n  _pastTimeCal(time) {\n    if (time) {\n      const pastTimeEle = document.getElementById('past-time');\n      pastTimeEle.innerHTML = \"\";\n      const span = document.createElement(\"span\");\n      span.innerHTML = `Past Run Time: ${time}`;\n      pastTimeEle.appendChild(span);\n    }\n  }\n  _pastCharCount(count) {\n    const pastCharCount = document.getElementById('past-charCount');\n    pastCharCount.innerHTML = \"\";\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Past char count: ${count}`;\n    pastCharCount.appendChild(span);\n  }\n  _pastErrorCount(errorCount) {\n    const pastErrorCountEle = document.getElementById('error-count');\n    pastErrorCountEle.innerHTML = \"\";\n    const span = document.createElement(\"span\");\n    span.innerHTML = `Past error count: ${errorCount}`;\n    pastErrorCountEle.appendChild(span);\n  }\n  _pastWPM(wpm) {\n    const pastWPM = document.getElementById('past-wpm');\n    pastWPM.innerHTML = \"\";\n    const span = document.createElement('span');\n    span.innerHTML = `Past run's WPM: ${wpm}`;\n    pastWPM.appendChild(span);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU0sQ0FBQztJQUMzQ0QsSUFBSSxDQUFDRCxTQUFTLEdBQUksbUJBQWtCVyxHQUFJLEVBQUM7SUFDekNDLE9BQU8sQ0FBQ1QsV0FBVyxDQUFDRixJQUFJLENBQUM7RUFDN0I7QUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL0ZhdWx0eS1Sb2NrZXQvLi9zcmMvc2NyaXB0cy90eXBld3JpdGluZy1jb25zb2xlLmpzP2E1ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR5cGVXcml0aW5nQ29uc29sZSB7XG5cbiAgICBjb25zdHJ1Y3RvcihjaGFyYWN0ZXJDb3VudCwgdGltZSwgZXJyb3JzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdoaSBmcm9tIHR3YycpXG4gICAgICAgIHRoaXMuY2hhcmFjdGVyQ291bnQgPSBjaGFyYWN0ZXJDb3VudDtcbiAgICAgICAgdGhpcy50aW1lID0gdGltZTsgXG4gICAgICAgIHRoaXMuZXJyb3JzID0gZXJyb3JzOyBcbiAgICAgICAgdGhpcy5taW51dGVzID0gIHBhcnNlSW50KHRoaXMudGltZS5zbGljZSgwLDIpKTtcbiAgICAgICAgdGhpcy5zZWNvbmRzID0gcGFyc2VJbnQodGhpcy50aW1lLnNsaWNlKDMpKTtcbiAgICB9XG5cbiAgICBhZGp1c3RUaW1lKCkge1xuICAgICAgICBsZXQgYWRqU2VjID0gdGhpcy5zZWNvbmRzIC8gNjA7XG4gICAgICAgIHJldHVybiB0aGlzLm1pbnV0ZXMgKyBhZGpTZWM7XG4gICAgfVxuICAgIFxuICAgIGNhbGN1bGF0ZVdQTSgpIHtcbiAgICAgICAgLypcbiAgICAgICAgQSB3b3JkIGlzIGFueSA1KyBjaGFyIGNvdW50IFxuICAgICAgICBHcm9zcyBXUE0gPSAodG90YWxDaGFycy81KSAvIHRpbWUobWluKVxuICAgICAgICBOZXQgV1BNID0gR3JvcyBXUE0gLSAoZXJyb3JzIC8gdGltZShtaW4pKVxuICAgICAgICAgICAgICAgID0gWyh0b3RhbENoYXJzLzUpIC0gZXJyb3JzXSAvIHRpbWUobWluKVxuICAgICAgICAqL1xuICAgICAgICBsZXQgd29yZHMgPSAodGhpcy5jaGFyYWN0ZXJDb3VudCAvIDUpXG4gICAgICAgIGxldCBuZXRXUE0gPSBNYXRoLmZsb29yKE1hdGguYWJzKHdvcmRzIC0gdGhpcy5lcnJvcnMpIC8gdGhpcy5hZGp1c3RUaW1lKCkpXG4gICAgICAgIHJldHVybiBuZXRXUE07XG4gICAgfVxuICAgICBfcGFzdFRpbWVDYWwodGltZSkge1xuICAgICAgICBpZiAodGltZSkge1xuICAgICAgICAgICAgY29uc3QgcGFzdFRpbWVFbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFzdC10aW1lJylcbiAgICAgICAgICAgIHBhc3RUaW1lRWxlLmlubmVySFRNTCA9IFwiXCJcbiAgICAgICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgICAgIHNwYW4uaW5uZXJIVE1MID0gYFBhc3QgUnVuIFRpbWU6ICR7dGltZX1gO1xuICAgICAgICAgICAgcGFzdFRpbWVFbGUuYXBwZW5kQ2hpbGQoc3Bhbik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAgX3Bhc3RDaGFyQ291bnQoY291bnQpIHtcbiAgICAgICAgY29uc3QgcGFzdENoYXJDb3VudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYXN0LWNoYXJDb3VudCcpXG4gICAgICAgIHBhc3RDaGFyQ291bnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBQYXN0IGNoYXIgY291bnQ6ICR7Y291bnR9YDtcbiAgICAgICAgcGFzdENoYXJDb3VudC5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICB9XG5cbiAgICAgX3Bhc3RFcnJvckNvdW50KGVycm9yQ291bnQpIHtcbiAgICAgICAgY29uc3QgcGFzdEVycm9yQ291bnRFbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXJyb3ItY291bnQnKVxuICAgICAgICBwYXN0RXJyb3JDb3VudEVsZS5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICAgIHNwYW4uaW5uZXJIVE1MID0gYFBhc3QgZXJyb3IgY291bnQ6ICR7ZXJyb3JDb3VudH1gO1xuICAgICAgICBwYXN0RXJyb3JDb3VudEVsZS5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICB9XG5cbiAgICAgX3Bhc3RXUE0od3BtKSB7XG4gICAgICAgIGNvbnN0IHBhc3RXUE0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFzdC13cG0nKTtcbiAgICAgICAgcGFzdFdQTS5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBzcGFuLmlubmVySFRNTCA9IGBQYXN0IHJ1bidzIFdQTTogJHt3cG19YDtcbiAgICAgICAgcGFzdFdQTS5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICB9XG5cbiAgICBcbn0iXSwibmFtZXMiOlsiVHlwZVdyaXRpbmdDb25zb2xlIiwiY29uc3RydWN0b3IiLCJjaGFyYWN0ZXJDb3VudCIsInRpbWUiLCJlcnJvcnMiLCJjb25zb2xlIiwibG9nIiwibWludXRlcyIsInBhcnNlSW50Iiwic2xpY2UiLCJzZWNvbmRzIiwiYWRqdXN0VGltZSIsImFkalNlYyIsImNhbGN1bGF0ZVdQTSIsIndvcmRzIiwibmV0V1BNIiwiTWF0aCIsImZsb29yIiwiYWJzIiwiX3Bhc3RUaW1lQ2FsIiwicGFzdFRpbWVFbGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwic3BhbiIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsIl9wYXN0Q2hhckNvdW50IiwiY291bnQiLCJwYXN0Q2hhckNvdW50IiwiX3Bhc3RFcnJvckNvdW50IiwiZXJyb3JDb3VudCIsInBhc3RFcnJvckNvdW50RWxlIiwiX3Bhc3RXUE0iLCJ3cG0iLCJwYXN0V1BNIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/typewriting-console.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9GYXVsdHktUm9ja2V0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;