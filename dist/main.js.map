{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Faulty-Rocket/./src/scripts/vector.js","webpack://Faulty-Rocket/./src/scripts/rocket.js","webpack://Faulty-Rocket/./src/scripts/typewriting-console.js","webpack://Faulty-Rocket/./src/scripts/timer.js","webpack://Faulty-Rocket/./src/scripts/quote.js","webpack://Faulty-Rocket/./src/scripts/levels/movingObjects.js","webpack://Faulty-Rocket/./src/scripts/levels/troposphere.js","webpack://Faulty-Rocket/./src/scripts/levels/stratosphere.js","webpack://Faulty-Rocket/./src/scripts/levels/mesosphere.js","webpack://Faulty-Rocket/./src/scripts/levels/thermosphere.js","webpack://Faulty-Rocket/./src/scripts/levels/exosphere.js","webpack://Faulty-Rocket/./src/scripts/levels/base.js","webpack://Faulty-Rocket/./src/scripts/level.js","webpack://Faulty-Rocket/./src/scripts/game.js","webpack://Faulty-Rocket/./src/scripts/start.js","webpack://Faulty-Rocket/./src/index.js"],"sourcesContent":["\n\nexport default class Vector {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y \n    }\n}","import Vector from \"./vector\";\n\n\nconst spriteWidth = 135;\nconst spriteHeight = 145; \n\nexport default class Rocket {\n    constructor(wpm, ctx, level) {\n        this.wpm = wpm; \n        this.ctx = ctx; \n        this.level = level;\n        this.passingWpm = this.level.passingWpm;\n        this.color = \"red\";\n        this.width =  50; //hitbox\n        this.height = 75; //hitbox\n        this.rocketSprite = new Image();\n        this.totalDistanceAndAcceleration();\n        this.canvas = document.getElementById(\"rocket-canvas\")\n        this.acceleration = new Vector(0, this.accelerationDeltaY)\n        this.reset();\n        this.currentLevel = this.whichLevel(this.level.state)\n\n    }\n\n    reset() {\n        // Start Pos: DX: 215, DY: 575,\n        this.pos = new Vector(215, 575)\n        this.velocity = new Vector(0, 0);\n    }\n\n    whichLevel(state) { //state\n        // new Troposphere(this.ctx, this.canvas, this.level.rocket, this.level.platform);\n        switch (state) {\n            case 0: //base\n                return this.level.base;                \n            case 1: //troposphere\n                return this.level.tropo \n                \n            case 2: //stratosphere\n                return this.level.strato; \n                \n            case 3: //Mesosphere\n                return this.level.meso;\n\n            case 4: //Thermosphere\n                return this.level.thermo; \n        }\n    }\n\n    animate(callback) {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\n        //Upward trajectory\n        this.velocity.add(this.acceleration);\n        this.pos.add(this.velocity);\n\n        //background animatation \n        this.currentLevel.animate(false);\n\n        //rocket animation \n        if (!this.passedLevel && (this.pos.y <= this.engineFailPos && this.pos.y > this.explosionPos)) {\n            this.renderEngineFailure();\n            // console.log(this.);\n            this.ctx.drawImage(this.rocketSprite, this.sx, this.sy,\n                spriteWidth, spriteHeight,\n                this.pos.x, this.pos.y, 100, 150)\n        } else if (!this.passedLevel && this.pos.y <= this.explosionPos) {\n            this.renderExplosion();\n            // console.log(this.);\n            this.ctx.drawImage(this.rocketSprite, this.sx, this.sy,\n                spriteWidth, spriteHeight,\n                this.pos.x, this.pos.y, 100, 150)\n        } else {\n            this.ctx.drawImage(this.rocketSprite, this.sx, this.sy, \n                spriteWidth, spriteHeight,\n                this.pos.x, this.pos.y, 100, 150)\n        }\n\n        //within bounds check \n        if (this.inbounds(this.pos.x, this.pos.y) && this.pos.y >= this.yAxisStopPos ) {\n            requestAnimationFrame(this.animate.bind(this, callback));\n        } else {\n            callback();\n        }\n    }\n\n    inbounds(x, y) {\n        if (x > this.canvas.width || (x + this.width) < 0 || (y + this.height) < 0 || y > this.canvas.height){\n            return false;\n        } else {\n            return true; \n        }\n    }\n\n    totalDistanceAndAcceleration() {\n        this.rocketSprite.src = \"./assests/rocket_spriteSheet_final.png\";\n        this.sx = 145;\n        this.sy = 0; \n\n        if (this.wpm >= this.passingWpm) {\n            this.accelerationDeltaY = -.15\n            this.yAxisStopPos = (this.height + 2) * -1;\n            this.passedLevel = true;\n\n        } else if (this.wpm < this.passingWpm && this.wpm >= (this.passingWpm/2)) {\n            this.accelerationDeltaY = -.015;\n            this.yAxisStopPos = 137.5;\n            this.passedLevel = false;\n            this.engineFailPos = 400;\n            this.explosionPos = 200;\n        } else {\n            this.accelerationDeltaY = -.0015;\n            this.yAxisStopPos = 412.5;\n            this.passedLevel = false; \n            this.engineFailPos = 450;\n            this.explosionPos = 430;\n\n        }\n    }\n\n    loadImages() {\n        let numOfImages = 1;\n        if (--numOfImages > 0) return;\n    }\n\n    renderEngineFailure() {\n        if (this.sx < 435 && !this.sy) {\n            //top row \n            this.sx += 145\n        } else if (this.sx >= 435 && !this.sy) {\n            //looked at top row and moving down to second row\n            this.sx = 290;\n        }\n    }\n\n    renderExplosion() {\n        /* \n        x moves by 145px \n            for row 1: max x is 440 while y is 0\n            for row 2: max is 294 while y at 150\n            for row 3: max is 440 while y is 286\n        y moves down by 150\n            for row 1: max x is 440 while y is 0\n            for row 2: max is 294 while y at 150\n            for row 3: max is 440 while y is 300 but says 286 on crop\n        */\n    //    console.log(`sx: ${this.sx} sy: ${this.sy}`);\n\n        if (this.sx < 435 && !this.sy) {\n           //top row \n           this.sx += 145\n        } else if (this.sx >= 435 && !this.sy) {\n            //looked at top row and moving down to second row\n            this.sx = 0;\n            this.sy += 150; \n        } else if (this.sx < 290 && this.sy === 150) {\n            //looks at second row \n            this.sx += 145\n        } else if (this.sx >= 290 && this.sy === 150) {\n            //finished and moving on to last row \n            this.sx = 0;\n            this.sy += 150\n        } else if (this.sx < 435 && this.sy === 300) {\n            //looking thru last row \n            this.sx += 145\n        }\n        \n    }\n    \n\n   \n    \n\n\n}","import Rocket from \"./rocket\";\n\nconst h5Div = document.getElementById('past-run-text');\n\nexport default class TypeWritingConsole {\n\n    constructor(characterCount, time, errors, ctx, level) {\n        this.characterCount = characterCount;\n        this.time = time;   \n        this.errors = errors; \n        this.ctx = ctx; \n        this.level = level;\n        this.minutes =  parseInt(this.time.slice(0,2));\n        this.seconds = parseInt(this.time.slice(3));\n        this.adjTime = this.adjustTime()\n        this.wpm = this.calculateWPM();\n        this.wpmFactorsDiv = document.getElementById('wpm-factors')\n        this.wpmFactorsDiv.innerHTML = \"\";\n        this.printResults();\n        this.rocket = new Rocket(this.wpm, this.ctx, this.level);\n    }\n\n    adjustTime() {\n        let adjSec = this.seconds / 60;\n        return this.minutes + adjSec;\n    }\n    \n    calculateWPM() {\n        /*\n        A word is any 5+ char count \n        Gross WPM = (totalChars/5) / time(min)\n        Net WPM = Gros WPM - (errors / time(min))\n                = [(totalChars/5) - errors] / time(min)\n        */\n        let words = (this.characterCount / 5)\n        let netWPM = Math.floor(Math.abs(words - this.errors) / this.adjTime)\n        return netWPM;\n    }\n\n    printResults() {\n        h5Div.innerHTML = '';\n        h5Div.innerHTML = 'Past Run'\n\n        this._pastTimeCal(this.time);\n        this._pastCharCount(this.characterCount);\n        this._pastErrorCount(this.errors);\n        this._pastWPM(this.wpm);\n    }\n    _pastTimeCal(time) {\n        if (time) {\n\n            const span = document.createElement(\"span\");\n            span.setAttribute('class', 'wpm')\n            span.innerHTML = `Time: ${time}`;\n            this.wpmFactorsDiv.appendChild(span);\n        }\n    }\n\n     _pastCharCount(count) {\n\n        const span = document.createElement(\"span\");\n        span.setAttribute('class', 'wpm')\n        span.innerHTML = `Char Count: ${count}`;\n        this.wpmFactorsDiv.appendChild(span);\n    }\n\n     _pastErrorCount(errorCount) {\n\n        const span = document.createElement(\"span\");\n        span.setAttribute('class', 'wpm')\n        span.innerHTML = `Errors: ${errorCount}`;\n         this.wpmFactorsDiv.appendChild(span);\n    }\n\n     _pastWPM(wpm) {\n        const pastWPM = document.getElementById('past-wpm');\n        pastWPM.innerHTML = \"\";\n\n        const span = document.createElement('span');\n        span.innerHTML = `Calculated WPM: ${wpm}`;\n        pastWPM.appendChild(span);\n    }\n\n\n\n    \n}","\n\nexport default class Timer {\n    constructor() {\n        this.startTime = new Date();\n        this.pastTime;\n        \n    }\n    \n    startTimer() {\n        // console.log(charHash, pastTime, errorCount)\n        const timer = document.getElementById(\"timer\");\n        timer.innerHTML = `00:00`;\n        // startTime = new Date();\n        this.startTimeInterval = setInterval(() => {\n            let currentTime = this.getTime();\n            timer.innerHTML = this.renderTimeAsClock(currentTime);\n            this.pastTime = timer.innerHTML;\n        }, 1000);\n        // let pastRunInstance = pastRunData(charCount, pastTime, errorCount)\n        // console.log(pastRunInstance)\n    }\n\n    getTime() {\n        return Math.floor((new Date() - this.startTime) / 1000)\n    }\n\n    renderTimeAsClock(time) {\n        if (time < 60) {\n            if (time < 10) return `00:0${time}`;\n            return `00:${time}`;\n        } else {\n            let min = Math.floor(time / 60);\n            let seconds = time % 60;\n            if (min < 10 && seconds < 10) {\n                return `0${min}:0${seconds}`\n            } else if (min < 10 && seconds >= 10) {\n                return `0${min}:${seconds}`\n            } else if (min >= 10 && seconds < 10) {\n                return `${min}:0${seconds}`\n            } else {\n                return `${min}:${seconds}`\n            }\n        }\n    }\n\n    endTimer() {\n        clearInterval(this.startTimeInterval);\n    }\n}\n","import Timer from \"./timer\";\nconst RANDOM_QUOTE_API_URL = \"https://api.quotable.io/random?minLength=100&maxLength=250\";\n\nexport default class Quote {\n    constructor() {\n       \n        this.charCount = 0;\n        this.renderNewQuote();\n        this.timer = new Timer();\n\n    }\n\n    async getRandomQuote() {\n        try {\n            const res = await fetch(RANDOM_QUOTE_API_URL);\n            if (res.ok) {\n                let data = await res.json();\n                // console.log(data.content)\n                return data.content;\n            } else {\n                let data = await res.join();\n                throw data.meta.msg\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async renderNewQuote() {\n        this.quoteInput = document.getElementById(\"quote-input\")\n        const quote = await this.getRandomQuote();\n       \n        quoteDisplay.innerHTML = \"\";\n        this.quoteInput.value = null;\n        \n        quote.split('').forEach(char => {\n            this.charCount++;\n            let span = document.createElement(\"span\");\n            span.className = 'rendered-quote';\n            span.innerHTML = char;\n            quoteDisplay.appendChild(span);\n        })\n        \n        this.timer.startTimer();\n    }\n}","\n\nexport default class MovingObjects {\n    constructor(options) {\n        this.pos = options.pos;\n        this.width = options.width;\n        this.height = options.height;\n        this.color = options.color;\n        this.canvas = options.canvas;\n        this.i = new Image();\n        this.i.src = options.src; \n    }\n\n    // animate(ctx) {\n    //     ctx.move();\n\n    // }\n\n    draw(ctx) {\n        ctx.drawImage(this.i, this.pos[0], this.pos[1], this.width, this.height)\n        // ctx.fillStyle = this.color;\n        // ctx.fillRect(this.pos[0], this.pos[1], this.width, this.height)\n    }\n    \n    moveHoz() {\n        this.pos[0] --;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = 500;\n            this.pos[1] = Math.floor(Math.random() * 300);\n        }\n    }\n\n    moveHozRight() {\n        // console.log(this.pos)\n        this.pos[0] +=  1;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = -400;\n            this.pos[1] = 300;\n        }\n    }\n\n    movePurelyDowm() {\n        this.pos[1] += 1;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = 0;\n            this.pos[1] = -700;\n        }\n    }\n\n    moveDown() {\n        this.pos[0]--;\n        this.pos[1]++;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = Math.floor(Math.random() * (500 - 200) + 200);\n            // this.pos[1] = Math.floor(Math.random() * 300);\n            this.pos[1] = Math.floor(Math.random() * (-700 + 200) - 200)\n\n        }\n    }\n\n    moveUpAndDown(up) {\n        if (up) {\n            this.pos[1] += 5;\n        } else {\n            this.pos[1] -= 5;\n        }\n    }\n\n    moveSquare(x, y, pathIdx) {\n        //revisit\n        let center_pos = [200, 300] //enter screen at this pos at end \n        const path = [[x, y], [x, 0], [x, 0], [-x, y], [-x, y], [x, 0], [y, 0], \n            [-(2 * x), -(2 * y)], [(2 * x), 0], [-x, 0]]\n      \n        this.pos[0] += path[pathIdx];\n        this.pos[1] += path[pathIdx];\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = 200;\n            this.pos[1] = 300;\n        }\n\n    }\n\n    moveIntoScreen() {\n        // this.pos[0] ;\n        this.pos[1] -= 3;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = 200;\n            this.pos[1] = 700;\n        }\n    }\n\n    \n\n    moveUp() {\n        // this.pos[0] ;\n        this.pos[1] += 0.1;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = -100;\n            this.pos[1] = -100;\n        }\n    }\n\n    moveDiagonalDown() {\n        this.pos[0] += 0.25;\n        this.pos[1] += 0.25;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = -100;\n            this.pos[1] = Math.floor(Math.random() * 300);\n        }\n    }\n\n    moveDiagonalUp() {\n        this.pos[0] -= 0.5;\n        this.pos[1] -= 0.5;\n        if (!this.inbounds(this.pos[0], this.pos[1])) {\n            this.pos[0] = 600;\n            this.pos[1] = Math.floor(Math.random() * 300);\n        }\n    }\n\n\n    inbounds(x, y) {\n        if (x > this.canvas.width || (x + this.width) < 0 || (y + this.height) < 0 || y > this.canvas.height) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n\n\n\n    \n}\n\n","import MovingObjects from \"./movingObjects\";\nconst ROCKET_INIT = {\n    SX: 0,\n    SY: 0,\n    SWIDTH: 135,\n    SHEIGHT: 145,\n    DX: 215,\n    DY: 575,\n    DWIDTH: 100,\n    DHEIGHT: 150\n}\n\nconst PLATFORM = {\n    DX: 50, \n    DY: 400,\n    DWIDTH: 400, \n    DHEIGHT: 400\n}\nexport default class Troposphere {\n\n    constructor(ctx, canvas, rocket, platform, strikes) {\n        this.ctx = ctx; \n        this.canvas = canvas; \n        this.strikes = strikes\n        this.background = new Image();\n        this.rocket = rocket;\n        this.platform = platform;\n        this.assignSrcs();\n        this.loadLife();\n        this.animate(true);\n    }\n\n    animate(idle) {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.ctx.drawImage(this.background, 0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT)\n        if (idle) {\n            this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY, \n                ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT, \n                ROCKET_INIT.DX, ROCKET_INIT.DY,\n                ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n        }\n        this.clouds.forEach(cloud => {\n            cloud.draw(this.ctx);\n            cloud.moveHoz();\n        })\n        if (this.strikes >= 3) {\n            this.ctx.font = \"50px Rockwell\";\n            this.ctx.fillStyle = 'red'\n            this.ctx.fillText('GAME OVER', 250, 325, this.canvas.width)\n            this.ctx.font = \"oblique 20px Verdana\";\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText('Click To Try Again', 250, 350, this.canvas.width)\n        }   \n        this.ctx.font = \"25px Rockwell\";\n        this.ctx.fillStyle = 'white'\n        this.ctx.fillText('TROPOSPHERE', 400, 25, this.canvas.width)\n\n        this.amountOfLives();\n        if (idle) requestAnimationFrame(this.animate.bind(this, true));\n    }\n    \n    assignSrcs() {\n        this.background.src = './assests/troposphere/tropoBackground.png'\n        this.platform.src = './assests/launch-final.png'\n        this.clouds = this.generateClouds();\n    }\n\n    generateClouds() {\n        let clouds = [];\n        for (let i=1; i < 9; i++) {\n            clouds.push(new MovingObjects({\n                pos: this.randomPos(),\n                width: 100,\n                height: 50,\n                color: 'black',\n                canvas: this.canvas,\n                src: `./assests/troposphere/cloud${i}.png`\n            }))\n        }\n        return clouds; \n    }\n\n    randomPos() {\n        let x = Math.floor(Math.random() * 500)\n        let y = Math.floor(Math.random() * 300);\n        return [x,y]\n    }\n\n    inbounds(x, y) {\n        if (x > this.canvas.width || (x + this.width) < 0 || (y + this.height) < 0 || y > this.canvas.height) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    loadLife() {\n        this.life = new Image();\n        this.life.src = './assests/life.png'\n    }\n\n    amountOfLives() {\n        if (this.strikes === 0) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50)\n        } else if (this.strikes === 1) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n        } else if (this.strikes === 2) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n        }\n    }\n\n    \n\n\n\n\n\n\n\n\n}","import MovingObjects from \"./movingObjects\";\n\nconst ROCKET_INIT = {\n    SX: 0,\n    SY: 0,\n    SWIDTH: 135,\n    SHEIGHT: 145,\n    DX: 215,\n    DY: 575,\n    DWIDTH: 100,\n    DHEIGHT: 150\n}\n\nconst PLATFORM = {\n    DX: 50,\n    DY: 400,\n    DWIDTH: 400,\n    DHEIGHT: 400\n}\n\nexport default class Stratosphere {\n    constructor(ctx, canvas, rocket, platform, strikes) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.rocket = rocket;\n        this.platform = platform;\n        this.strikes = strikes\n        this.background = new Image();\n        this.cloud1 = new Image();\n        this.cloud2 = new Image();\n        this.cloud3 = new Image();\n        this.weatherBallon = new Image();\n        this.assignSrcs();\n        this.loadLife();\n        this.animate(true);\n    }\n\n    animate(idle) {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.ctx.drawImage(this.background, 0, 0);\n        this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT)\n        \n        if (idle) this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY,\n            ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT,\n            ROCKET_INIT.DX, ROCKET_INIT.DY,\n            ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n        this.clouds.forEach(cloud => {\n            cloud.draw(this.ctx);\n            cloud.moveHoz();\n        })\n        this.balloons.forEach(balloon => {\n            balloon.draw(this.ctx);\n            balloon.moveHoz();\n        })\n        if (this.strikes >= 3) {\n            this.ctx.font = \"50px Rockwell\";\n            this.ctx.fillStyle = 'red'\n            this.ctx.fillText('GAME OVER', 250, 325, this.canvas.width)\n            this.ctx.font = \"oblique 20px Verdana\";\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText('Click To Try Again', 250, 350, this.canvas.width)\n        }\n        this.ctx.font = \"25px Rockwell\";\n        this.ctx.fillStyle = 'white'\n        this.ctx.fillText('STRATOSPHERE', 400, 25, this.canvas.width)\n        this.amountOfLives();\n        // this.ctx.drawImage(this.weatherBallon, 0,0, 200, 300, 300, 150, 50, 200);\n        if (idle) requestAnimationFrame(this.animate.bind(this));\n    }\n\n    assignSrcs() {\n        this.background.src = './assests/stratosphere/stratoBackground_complete.png'\n        this.clouds = this.generateClouds();\n        this.balloons = this.generateBallons();\n    }\n\n    generateClouds() {\n        let clouds = [];\n        for (let i = 1; i < 4; i++) {\n            clouds.push(new MovingObjects({\n                pos: this.randomPos(300),\n                width: 100,\n                height: 50,\n                color: 'black',\n                canvas: this.canvas,\n                src: `./assests/stratosphere/cloud${i}.png`\n            }))\n        }\n        return clouds;\n    }\n\n    generateBallons() {\n        let balloons = [];\n        for (let i=0; i<4; i++) {\n            balloons.push(new MovingObjects({\n                pos: this.randomPos(150),\n                width: 50,\n                height: 200,\n                color: 'black',\n                canvas: this.canvas,\n                src: `./assests/stratosphere/weather-balloon.png`\n            }))\n        }\n        return balloons\n    }\n\n    randomPos(height) {\n        let x = Math.floor(Math.random() * 500)\n        let y = Math.floor(Math.random() * height);\n        return [x, y]\n    }\n\n    loadLife() {\n        this.life = new Image();\n        this.life.src = './assests/life.png'\n    }\n\n    amountOfLives() {\n        if (this.strikes === 0) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50)\n        } else if (this.strikes === 1) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n        } else if (this.strikes === 2) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n        }\n    }\n    \n\n    \n}","import MovingObjects from \"./movingObjects\";\n\nconst ROCKET_INIT = {\n    SX: 0,\n    SY: 0,\n    SWIDTH: 135,\n    SHEIGHT: 145,\n    DX: 215,\n    DY: 575,\n    DWIDTH: 100,\n    DHEIGHT: 150\n}\n\nconst PLATFORM = {\n    DX: 50,\n    DY: 400,\n    DWIDTH: 400,\n    DHEIGHT: 400\n}\n\nconst METEORITE = {\n    SX: 562,\n    SY: 600,\n    SWIDTH: 1500,\n    SHEIGHT: 1200,\n    DX: 300,\n    DY: 0,\n    DWIDTH: 300,\n    DHEIGHT: 300\n}\n\nexport default class Mesosphere {\n    constructor(ctx, canvas, rocket, platform, strikes) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.rocket = rocket;\n        this.platform = platform;\n        this.strikes = strikes\n        this.background = new Image();\n        this.assignSrcs();\n        this.loadLife();\n        this.animate(true);\n    }\n\n    animate(idle) {\n        //have the meteorites entering the exiting the frame \n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.ctx.drawImage(this.background, 0, 0, this.canvas.width, this.canvas.height);\n        this.meteorites.forEach(meteorite => {\n            meteorite.draw(this.ctx);\n            meteorite.moveDown();\n        })\n        this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT)\n        if (idle) this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY,\n            ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT,\n            ROCKET_INIT.DX, ROCKET_INIT.DY,\n            ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n        if (this.strikes >= 3) {\n            this.ctx.font = \"50px Rockwell\";\n            this.ctx.fillStyle = 'red'\n            this.ctx.fillText('GAME OVER', 250, 325, this.canvas.width)\n            this.ctx.font = \"oblique 20px Verdana\";\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText('Click To Try Again', 250, 350, this.canvas.width)\n        }\n        this.ctx.font = \"25px Rockwell\";\n        this.ctx.fillStyle = 'orange'\n        this.ctx.fillText('MESOSPHERE', 400, 25, this.canvas.width)\n        this.amountOfLives();\n        if (idle) requestAnimationFrame(this.animate.bind(this));\n    }\n\n    assignSrcs() {\n        this.background.src = './assests/mesosphere/mesos_background.png'\n        this.meteorites = this.generateMeteorite();\n    }\n\n    generateMeteorite() {\n        let meteorites = [];\n        for (let i=1; i < 10; i++) {\n            let src = Math.floor(Math.random() * 5)\n            meteorites.push(new MovingObjects({\n                pos: this.randomPos(),\n                width: 300,\n                height: 300,\n                color: 'black',\n                canvas: this.canvas,\n                src: `./assests/mesosphere/meteorite_${src}.png`\n            }))\n        }\n        return meteorites;\n    }\n\n    randomPos() {\n        let x = Math.floor(Math.random() * 500)\n        return [x, 0]\n    }\n\n    loadLife() {\n        this.life = new Image();\n        this.life.src = './assests/life.png'\n    }\n\n    amountOfLives() {\n        if (this.strikes === 0) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50)\n        } else if (this.strikes === 1) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n        } else if (this.strikes === 2) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n        }\n    }\n\n\n}","import MovingObjects from \"./movingObjects\";\n\nconst ROCKET_INIT = {\n    SX: 0,\n    SY: 0,\n    SWIDTH: 135,\n    SHEIGHT: 145,\n    DX: 215,\n    DY: 575,\n    DWIDTH: 100,\n    DHEIGHT: 150\n}\n\nconst PLATFORM = {\n    DX: 50,\n    DY: 400,\n    DWIDTH: 400,\n    DHEIGHT: 400\n}\n\n\nexport default class Thermosphere {\n    constructor(ctx, canvas, rocket, platform, strikes) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.rocket = rocket;\n        this.strikes = strikes;\n        this.platform = platform;\n        this.backgroundSpeed = 1; \n        this.assignSrcs();\n        this.loadLife();\n        this.animate(true);\n    }\n\n    animate(idle) { \n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.background.draw(this.ctx);\n        // this.moveBackground();\n        this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT)\n        if (idle) {\n            this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY,\n            ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT,\n            ROCKET_INIT.DX, ROCKET_INIT.DY,\n            ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n        }\n        if (this.strikes >= 3) {\n            this.ctx.font = \"50px Rockwell\";\n            this.ctx.fillStyle = 'red'\n            this.ctx.fillText('GAME OVER', 250, 325, this.canvas.width)\n            this.ctx.font = \"oblique 20px Verdana\";\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText('Click To Try Again', 250, 350, this.canvas.width)\n        }\n\n        this.ctx.font = \"25px Rockwell\";\n        this.ctx.fillStyle = 'green'\n        this.ctx.fillText('THERMOSPHERE', 375, 25, this.canvas.width)\n\n        this.amountOfLives();\n        // this.ctx.drawImage(this.background, 0, 0, 500, 750);\n        if (idle) requestAnimationFrame(this.animate.bind(this));\n    }\n\n    assignSrcs() {\n        this.background = new MovingObjects({\n            pos: [0,0],\n            width: this.canvas.width,\n            height: this.canvas.height,\n            color: 'black',\n            canvas: this.canvas,\n            src: `./assests/thermosphere/thermo-background.jpg`\n        })\n    }\n\n    moveBackground() {\n        if (this.background.pos[0] > this.background.width) this.background.pos[0] = 0;\n        else this.background.pos[0] += this.backgroundSpeed;\n    }\n    loadLife() {\n        this.life = new Image();\n        this.life.src = './assests/life.png'\n    }\n\n    amountOfLives() {\n        if (this.strikes === 0) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50)\n        } else if (this.strikes === 1) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n        } else if (this.strikes === 2) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n        }\n    }\n\n\n\n\n\n\n}","import MovingObjects from \"./movingObjects\";\n\nconst spriteWidth = 135;\nconst spriteHeight = 145;\n\nconst ROCKET = {\n    SX: 145,\n    SY: 0,\n    SWIDTH: 135,\n    SHEIGHT: 145,\n    DX: 215,\n    DY: 575,\n    DWIDTH: 100,\n    DHEIGHT: 150,\n    CENTER_POS: [200, 300]\n}\n\n\nexport default class Exosphere {\n    constructor(ctx, canvas, rocket) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.background = new Image();\n        this.stars = new MovingObjects({\n            pos: [0, 0],\n            width: this.canvas.width,\n            height: this.canvas.height,\n            color: 'black',\n            canvas: this.canvas,\n            src: './assests/exosphere/layers/parallax-space-stars.png'\n        })\n        this.rocket = new MovingObjects({\n            pos: [200,700] ,\n            width: ROCKET.DWIDTH, \n            height: ROCKET.DHEIGHT,\n            color: 'red',\n            canvas: this.canvas,\n            src: rocket.src\n        })\n        this.up = true;\n        this.upDown = true; \n        this.pathIdx = 0;\n        this.ringPlanets = this.generateRingPlanets();\n        this.twinPlanet = this.generateTwinPlanets();\n        this.bigPlanet = new MovingObjects({\n            pos: [200, 300],\n            width: 300,\n            height: 300,\n            color: 'black',\n            canvas: this.canvas,\n            src: './assests/exosphere/layers/parallax-space-big-planet.png'\n        });\n        this.assignSrcs();\n      \n        this.animate();\n    }\n\n    animate() {\n        //have the the plants(each with a different speed) enter and exit frame \n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        //background\n        this.ctx.drawImage(this.background, 0, 0, 500, 750);\n        //layer 1\n        this.stars.draw(this.ctx);\n        this.bigPlanet.draw(this.ctx);\n        this.bigPlanet.moveUp();\n        this.moveStars();\n\n        //planets\n        this.ringPlanets.forEach(ring => {\n            ring.draw(this.ctx);\n            ring.moveDiagonalDown();\n        })\n        this.twinPlanet.forEach(twin => {\n            twin.draw(this.ctx);\n            twin.moveDiagonalUp()\n        })\n\n        //rocket\n        this.ctx.drawImage(this.rocket.i, ROCKET.SX, ROCKET.SY,\n            spriteWidth, spriteHeight,\n            this.rocket.pos[0], this.rocket.pos[1], 100, 150)\n        //enter and get to center \n        if (ROCKET.CENTER_POS[0] >=  this.rocket.pos[0] && ROCKET.CENTER_POS[1] >= this.rocket.pos[1]) {\n            this.up = false; \n        }\n        // console.log(this.up)\n        this.switchRocketAnimation(this.up)\n\n        requestAnimationFrame(this.animate.bind(this));\n    }\n\n\n    switchRocketAnimation(up) {\n        //if (ROCKET.CENTER_POS[0] === this.rocket.pos[0] && ROCKET.CENTER_POS[1] === this.rocket.pos[1])\n        if (up) {\n            //square animation  \n            this.rocket.moveIntoScreen();\n\n        } else {\n            // let font = new FontFace('Diplomata SC', )\n            this.ctx.font = 'oblique 30px Verdana';\n            this.ctx.fillText('WINNER!', 250, 275);\n            this.ctx.font = 'oblique 15px Verdana';\n            //create a temp canavs which will be use to restart the game loop \n            this.ctx.fillText('Click To Play Again', 75, 730)\n            this.rocket.moveUpAndDown(this.upDown)\n            this.upDown = this.upDown ? false : true;\n        }\n        \n    }\n\n    assignSrcs() {\n        this.background.src = './assests/exosphere/layers/parallax-space-background.png'\n    }\n\n    generateRingPlanets() {\n        let arr = [];\n            for (let i=0; i < 5; i++) {\n                arr.push(new MovingObjects({\n                    pos: this.randomPos(),\n                    width: this.randomSize(100, 100)[0],\n                    height: this.randomSize(100, 100)[0],\n                    color: 'black',\n                    canvas: this.canvas,\n                    src: './assests/exosphere/layers/parallax-space-ring-planet.png'\n                }))\n            \n        }\n        return arr; \n    }\n\n    generateTwinPlanets() {\n        let arr = [];\n        for (let i = 0; i < 10; i++) {\n            let size = this.randomSize(200, 200);\n            arr.push(new MovingObjects({\n                pos: this.randomPos(),\n                width: size[0],\n                height: size[1],\n                color: 'black',\n                canvas: this.canvas,\n                src: './assests/exosphere/layers/parallax-space-far-planets.png'\n            }))\n        }\n        return arr; \n    }\n\n    moveStars() {\n        // console.log(this.background.pos);\n        if (this.stars.pos[0] > this.stars.width) this.stars.pos[0] = 0;\n        else this.stars.pos[0] += 0.05;\n    }\n\n    randomPos() {\n        let x = Math.floor(Math.random() * 500)\n        let y = Math.floor(Math.random() * 750);\n        return [x, y]\n    }\n\n    randomSize(w,h) {\n        let newW = Math.floor(Math.random() * w)\n        let newH = Math.floor(Math.random() * h);\n        return [newW, newH]\n    }\n\n\n\n\n}","import MovingObjects from \"./movingObjects\";\n\nconst ROCKET_INIT = {\n    SX: 0,\n    SY: 0,\n    SWIDTH: 135,\n    SHEIGHT: 145,\n    DX: 215,\n    DY: 575,\n    DWIDTH: 100,\n    DHEIGHT: 150\n}\n\nconst PLATFORM = {\n    DX: 50,\n    DY: 400,\n    DWIDTH: 400,\n    DHEIGHT: 400\n}\n\nexport default class Base {\n    constructor(ctx, canvas, rocket, platform, strikes) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.rocket = rocket;\n        this.platform = platform;\n        this.strikes = strikes;\n        this.background = this.loadBackground();\n        this.layerZero = new Image();\n        this.loadLife();\n        this.animate(true);\n    }\n\n    animate(idle) {\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        // this.ctx.drawImage(this.layerZero, 0, 0, this.canvas.width, this.canvas.height);\n        this.background.forEach((layer, i) => {\n            if (i === 1 || i === 2) {\n                layer.draw(this.ctx);\n                layer.moveHozRight();\n            } else {\n                this.ctx.drawImage(layer, 0, 0, this.canvas.width, this.canvas.height)\n            }\n        })\n\n        \n\n        this.ctx.drawImage(this.platform, PLATFORM.DX, PLATFORM.DY, PLATFORM.DWIDTH, PLATFORM.DHEIGHT)\n        if (idle) {\n            this.ctx.drawImage(this.rocket, ROCKET_INIT.SX, ROCKET_INIT.SY,\n                ROCKET_INIT.SWIDTH, ROCKET_INIT.SHEIGHT,\n                ROCKET_INIT.DX, ROCKET_INIT.DY,\n                ROCKET_INIT.DWIDTH, ROCKET_INIT.DHEIGHT);\n        }\n        if (this.strikes >= 3) {\n            this.ctx.font = \"oblique 50px Verdana\";\n            this.ctx.fillStyle = 'red'\n            this.ctx.fillText('GAME OVER', 250, 325, this.canvas.width)\n            // this.ctx.fillText('Click To Play Again', 0, 730)\n            this.ctx.font = \"oblique 20px Verdana\";\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText('Click To Try Again', 250, 350, this.canvas.width)\n        }\n\n        this.ctx.font = \"25px Rockwell\";\n        this.ctx.fillStyle = 'purple'\n        this.ctx.fillText('BASE LVL', 425, 25, this.canvas.width)\n\n        this.amountOfLives()\n        if (idle) requestAnimationFrame(this.animate.bind(this));\n    }\n\n\n    loadBackground() {\n        const randPos = () => {\n            return Math.floor(Math.random() * 500)\n        }\n        let background = [];\n        for (let i=1; i < 8; i++) {\n            background.push(\n                i === 2 || i === 3 ? new MovingObjects({\n                    pos: [randPos(),300],\n                    width: 400,\n                    height: 225,\n                    color: 'black',\n                    canvas: this.canvas,\n                    src: `./assests/base/${i}.png`\n                    }) : new Image());\n\n            if (i !== 2 || i !== 3) {background[i-1].src = `./assests/base/${i}.png`}\n        \n        }\n        return background\n    }\n\n    loadLife() {\n        this.life = new Image();\n        this.life.src = './assests/life.png'\n    }\n\n    amountOfLives() {\n        if (this.strikes === 0) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 100, 700, 50, 50)\n        } else if (this.strikes === 1) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 50, 700, 50, 50)\n        } else if (this.strikes === 2) {\n            this.ctx.drawImage(this.life, 0, 0, 335, 335, 0, 700, 50, 50)\n        }\n    }\n\n\n}","import Troposphere from \"./levels/troposphere\";\nimport Stratosphere from \"./levels/stratosphere\";\nimport Mesosphere from \"./levels/mesosphere\";\nimport Thermosphere from \"./levels/thermosphere\";\nimport Exosphere from \"./levels/exosphere\";\nimport Base from \"./levels/base\";\n\nexport default class Level {\n    constructor(state, ctx) {\n        this.state = state;\n        this.ctx = ctx;\n        this.passingWpm; \n        this.renderLevel(this.state);\n        // this.platform.src = './assests/launch-final.png'\n    }\n\n    renderLevel(state, strikes) {\n        // console.log('in level')\n        // ground:0, troposphere:1, stratosphere:2, mesosphere:3, thermosphere:4 and exosphere:5 goal(will be rendered to show user has won)\n        this.canvas = document.getElementById(\"rocket-canvas\")\n        this.canvas.className = \"\"\n        this.rocket = new Image();\n        this.rocket.src = './assests/rocket_spriteSheet_final.png';\n        this.platform = new Image();\n        this.platform.src = './assests/launch-final.png'\n        switch(state) {\n            case 0: //base\n                // this.canvas.className = 'level-zero'\n                this.base = new Base(this.ctx, this.canvas, this.rocket, this.platform, strikes)\n                this.passingWpm = 20;\n                break;\n            case 1: //troposphere\n                // canvas.className = 'level-one'\n                this.tropo = new Troposphere(this.ctx, this.canvas, this.rocket, this.platform, strikes);\n                this.passingWpm = 35;\n                break;\n            case 2: //stratosphere\n                // canvas.className = 'level-two'\n                this.strato = new Stratosphere(this.ctx, this.canvas, this.rocket, this.platform, strikes);\n                this.passingWpm = 50; \n                break;\n            case 3: //Mesosphere\n                // canvas.className = 'level-three'\n                this.meso = new Mesosphere(this.ctx, this.canvas, this.rocket, this.platform, strikes)\n                this.passingWpm = 75; \n                break;\n            case 4: //Thermosphere\n                // canvas.className = 'level-four'\n                this.thermo = new Thermosphere(this.ctx, this.canvas, this.rocket, this.platform, strikes);\n                this.passingWpm = 100; \n                break;\n            case 5: //Exosphere\n                // canvas.className = 'level-five'\n                this.exo = new Exosphere(this.ctx, this.canvas, this.rocket);\n                break;\n        }\n        \n    }\n\n\n\n    //test \n    animate() {\n        this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n        this.ctx.drawImage(this.tropoBackground, 0, 0);\n        requestAnimationFrame(this.animate.bind(this));\n    }\n    \n    \n    troposphere() {\n        this.tropoBackground = new Image();\n        this.tropoBackground.src = './assests/troposphere/tropoBackground.png'\n        // console.log(this.tropoBackground)\n        this.animate();\n    }\n\n\n\n\n}","import TypeWritingConsole from \"./typewriting-console\";\nimport Quote from \"./quote\";\nimport Level from \"./level\";\n\nexport default class Game {\n    constructor(ctx, level, canvas) {\n        this.canvas = canvas\n        this.ctx = ctx\n        this.level = new Level(level, this.ctx); \n        this.x = 0;\n        this.y = 0;\n        console.log(level)\n        this.quote = new Quote();\n        this.strikes = 0;\n        this.animate()\n    }\n\n\n    \n    failedLevel() {\n        this.strikes++; \n        \n        this.quote.timer.endTimer();\n        this.quote = new Quote();\n        this.animate();\n        // this.level.renderLevel(this.level.state)\n    }\n\n    newLevel() {\n        this.level.state++;\n        this.quote.timer.endTimer();\n        this.strikes = 0; \n        if (this.level.state < 5) this.quote = new Quote;\n        this.animate();\n        // this.level.renderLevel(this.level.state)\n    }\n\n    animate() {\n        this.level.renderLevel(this.level.state, this.strikes)\n    }\n\n\n\n}\n\n","import MovingObjects from \"./levels/movingObjects\";\n\nlet  insAimate; \nconst spriteWidth = 135;\nconst spriteHeight = 145;\nexport default class Start {\n    constructor(ctx, canvas) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.background = new Image();\n        this.background.src = './assests/start_screen/nebula_aqua_pink.png'\n        this.stars = this.starImageArr();\n        this.rocketImg();\n        this.instructions = this.instructionsHash();\n        this.sliceIdx = 1; \n        this.posY = 50;\n        this.renderInstructions();\n        \n    }\n\n    renderInstructions() {\n        // this.timeOut = setInterval(() => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(this.background, 0, 0, 500, 750);\n            this.stars.forEach(star => {\n                star.draw(this.ctx);\n                star.movePurelyDowm();\n            })\n            //Display test \n            this.ctx.font = 'oblique 20px Verdana';\n            this.ctx.fillStyle = 'blue'\n            this.ctx.textAlign = 'center'\n            if (this.sen1) this.ctx.fillText(this.sen1, 250, 50, this.canvas.width)\n            if (this.sen2) this.ctx.fillText(this.sen2, 250, 80, this.canvas.width)\n            if (this.sen3) this.ctx.fillText(this.sen3, 250, 120, this.canvas.width)\n            if (this.sen4) this.ctx.fillText(this.sen4, 250, 150, this.canvas.width)\n            if (this.sen5) this.ctx.fillText(this.sen5, 250, 180, this.canvas.width)\n            if (this.sen6) this.ctx.fillText(this.sen6, 250, 210, this.canvas.width)\n            if (this.sen7) this.ctx.fillText(this.sen7, 250, 240, this.canvas.width)\n            if (this.sen8) this.ctx.fillText(this.sen8, 250, 270, this.canvas.width)\n            \n            if (this.currentKey < 9) this.ctx.fillText(this.currentIns, 0, this.posY, this.canvas.width); //(this.canvas.width / 2) - this.ctx.measureText(this.currentIns).width / 2,\n            if (this.currentKey < 9) {\n                this.spliceAndAdd(this.sliceIdx);\n            } else {\n                this.ctx.drawImage(this.rocket.i, this.sx, this.sy,\n                    spriteWidth, spriteHeight,\n                    this.rocket.pos[0], this.rocket.pos[1], 100, 150)\n                this.rocket.moveUpAndDown(this.up);\n                // this.ctx.textAlign = 'start';\n                this.ctx.fillText('Click to Start', 250, 575)\n                this.up = this.up ? false : true;\n            }\n            insAimate = requestAnimationFrame(this.renderInstructions.bind(this));\n    \n        // }, 1000 / 60)\n    }\n\n    startGame() {\n        cancelAnimationFrame(isAnimate);\n    }\n\n    spliceAndAdd(idx) {\n        this.currentIns = this.instructions[this.currentKey].slice(0, idx) \n        if (this.currentKey < 9 && idx !== this.instructions[this.currentKey].length) this.currentIns += '_'\n        if (idx === this.instructions[this.currentKey].length) {\n            this.assignSen(this.currentKey, this.currentIns)\n            this.sliceIdx = 1;\n            this.currentKey += 1\n            this.posY += 30\n        } else {\n            this.sliceIdx++\n            \n        }\n        \n    }\n\n    assignSen(key, currSen) {\n        if (key === 1) {\n            this.sen1 = currSen\n        } else if (key === 2) {\n            this.sen2 = currSen\n        } else if (key === 3) {\n            this.sen3 = currSen\n        } else if (key === 4) {\n            this.sen4 = currSen\n        } else if (key === 5) {\n            this.sen5 = currSen\n        } else if (key == 6) {\n            this.sen6 = currSen\n        } else if (key == 7) {\n            this.sen7 = currSen\n        } else if (key == 8) {\n            this.sen8 = currSen\n        }\n    }\n\n    \n    instructionsHash() {\n        this.sen1 = '';\n        this.sen2 = '';\n        this.sen3 = '';\n        this.sen4 = '';\n        this.sen5 = '';\n        this.sen6 = '';\n        this.sen7 = '';\n        this.sen8 = '';\n        this.currentKey = 1;\n        return {\n            1: \"RocketvF is currently being fueled by a \",\n            2: \"newly synthesized 'ecofriendly' resource.\", \n            3: \"However, the rocket is very ... faulty.\",\n            4: \"The rocket must be charged at each level of\",\n            5: \"the atmosphere. To get to the next level, \",\n            6: \"CORRECTLY COMPLETE each quote at a certain WPM.\",\n            7: \"You have 3 tries at each level.\",\n            8: \"Get this FAULTY ROCKET to SPACE!\"\n        }\n    }\n\n    starImageArr() {\n        \n        let arr = [], x = 0, y = 0;\n        for (let i=1; i<5; i++) {\n            console.log(y)\n            arr.push(new MovingObjects({\n                pos: [0, y],\n                width: this.canvas.width,\n                height: this.canvas.height,\n                color: 'black',\n                canvas: this.canvas,\n                src: `./assests/start_screen/stars${i}.png`\n            }));\n             y = y - 700;\n            //  console.log(y)\n        }\n        console.log(arr)\n        return arr; \n    }\n\n    rocketImg() {\n        this.up = true; \n        this.rocket = new MovingObjects({\n            pos: [200, 400],\n            width: spriteWidth,\n            height: 145,\n            color: 'black',\n            canvas: this.canvas,\n            src: \"./assests/rocket_spriteSheet_final.png\"\n        })\n        this.sx = 145;\n        this.sy = 0; \n    }\n}","import TypeWritingConsole from \"./scripts/typewriting-console\";\nimport Game from \"./scripts/game\";\nimport Start from \"./scripts/start\";\n\n\n//Needed vars\nconst keyboard = document.querySelector(\".keyboard\");\nconst quoteDisplay = document.getElementById(\"quoteDisplay\");\nconst quoteInputDiv = document.getElementById(\"quoteInput\");\nconst quoteInput = document.getElementById(\"quote-input\")\nconst allLetterEles = document.querySelectorAll('.letter');\nconst inputDisplayDiv = document.querySelector(\"#input-display\");\nconst canvasEl = document.getElementById(\"rocket-canvas\");\nconst ctx = canvasEl.getContext(\"2d\");\nlet errorArr = [], errorCount = 0;\ncanvasEl.width = 500;\ncanvasEl.height = 750; \nlet game; \n\n\n//Start and New game \nnew Start(ctx, canvasEl);\n\ncanvasEl.addEventListener('click', (e)=> {\n    errorArr = [], errorCount = 0;\n    if (game) game.quote.timer.endTimer();\n    game = new Game(ctx, 0, canvasEl);\n})\n\n//Event listners \nquoteInput.addEventListener('input', (e) => {\n    const quoteSpanArr = quoteDisplay.querySelectorAll(\".rendered-quote\")\n    const inputValArr = quoteInput.value.split('')\n    let finished = true, caughtErrors = 0; \n    quoteSpanArr.forEach((charSpan, i) => {\n        const inputChar = inputValArr[i];\n        if (inputChar == null) {\n            charSpan.classList.remove('correct');\n            charSpan.classList.remove('incorrect');\n            finished = false; \n        } else if (inputChar === charSpan.innerHTML) {\n            charSpan.classList.add('correct');\n            charSpan.classList.remove('incorrect')\n            finished = true; \n        } else {\n            charSpan.classList.remove('correct');\n            charSpan.classList.add('incorrect');\n            finished = false; \n            caughtErrors = _catchErors(quoteSpanArr);\n            if (errorCount < caughtErrors) errorCount = caughtErrors;\n        }\n    })\n    \n    if (finished) {\n        const twc = new TypeWritingConsole(game.quote.charCount, game.quote.timer.pastTime, errorCount, ctx, game.level)\n        twc.rocket.animate(() => {\n            errorArr = [];\n            errorCount = 0; \n            if (twc.rocket.passedLevel) {\n                game.newLevel();\n            } else {\n                game.failedLevel();\n            }\n        });\n    }\n})\n\nfunction _catchErors(quoteSpan) {\n    quoteSpan.forEach((span, i) => {\n        if (span.className === 'rendered-quote incorrect' && !errorArr.includes(i)) errorArr.push(i);\n    })\n    return errorArr.length; \n}\n\n//keyboard feature \nkeyboard.addEventListener('keydown', (e) => {\n    if (!e.metaKey) {\n        const keyEle = e.key !== \" \" ? document.getElementById(`${e.key}`) : document.getElementById(`${e.code}`)\n        if (e.shiftKey) _captializeAll();\n        keyEle.classList.add('pressedKey')\n    }\n})\n\nkeyboard.addEventListener('keyup', (e) => {\n    \n    if (!e.metaKey) {\n        const keyEle = e.key !== \" \" ? document.getElementById(`${e.key}`) : document.getElementById(`${e.code}`)\n        keyEle.classList.remove('pressedKey')\n        if (!e.shiftKey) _lowerAll();\n    }\n})\n\nfunction _captializeAll() {\n    allLetterEles.forEach((span, i) => {\n        span.innerHTML = span.innerHTML.toUpperCase();\n        span.classList.add('pressedKey')\n    })\n}\n\nfunction _lowerAll() {\n    allLetterEles.forEach((span, i) => {\n        span.innerHTML = span.innerHTML.toLowerCase();\n        span.classList.remove('pressedKey')\n    })\n}\n\n//audio \nconst audioButton = document.getElementById('audio-btn');\nconst audioEle = document.getElementById('music');\nconst audioSrc = document.getElementById('music-src')\nconst audioArr = ['disco-groove', 'lo-fi-house', 'mesmerizing', 'passion']\n\naudioButton.addEventListener('click', (e)=> {\n    \n    if (audioEle.paused) {\n        let rand = Math.floor(Math.random() * audioArr.length)\n        audioButton.src = \"./assests/sound/pause.png\"\n        audioSrc.src = `./assests/sound/${audioArr[rand]}.mp3`\n        audioEle.load();\n        audioEle.play();\n    } else {\n        audioButton.src = \"./assests/sound/sound-wave.png\"\n        audioEle.pause();\n    }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["Vector","constructor","x","y","this","add","vector","Rocket","wpm","ctx","level","passingWpm","color","width","height","rocketSprite","Image","totalDistanceAndAcceleration","canvas","document","getElementById","acceleration","accelerationDeltaY","reset","currentLevel","whichLevel","state","pos","velocity","base","tropo","strato","meso","thermo","animate","callback","clearRect","passedLevel","engineFailPos","explosionPos","renderEngineFailure","drawImage","sx","sy","renderExplosion","inbounds","yAxisStopPos","requestAnimationFrame","bind","src","loadImages","h5Div","TypeWritingConsole","characterCount","time","errors","minutes","parseInt","slice","seconds","adjTime","adjustTime","calculateWPM","wpmFactorsDiv","innerHTML","printResults","rocket","adjSec","words","Math","floor","abs","_pastTimeCal","_pastCharCount","_pastErrorCount","_pastWPM","span","createElement","setAttribute","appendChild","count","errorCount","pastWPM","Timer","startTime","Date","pastTime","startTimer","timer","startTimeInterval","setInterval","currentTime","getTime","renderTimeAsClock","min","endTimer","clearInterval","Quote","charCount","renderNewQuote","async","res","fetch","ok","json","content","join","meta","msg","error","console","quoteInput","quote","getRandomQuote","quoteDisplay","value","split","forEach","char","className","MovingObjects","options","i","draw","moveHoz","random","moveHozRight","movePurelyDowm","moveDown","moveUpAndDown","up","moveSquare","pathIdx","path","moveIntoScreen","moveUp","moveDiagonalDown","moveDiagonalUp","Troposphere","platform","strikes","background","assignSrcs","loadLife","idle","clouds","cloud","font","fillStyle","fillText","amountOfLives","generateClouds","push","randomPos","life","Stratosphere","cloud1","cloud2","cloud3","weatherBallon","balloons","balloon","generateBallons","Mesosphere","meteorites","meteorite","generateMeteorite","Thermosphere","backgroundSpeed","moveBackground","ROCKET","Exosphere","stars","upDown","ringPlanets","generateRingPlanets","twinPlanet","generateTwinPlanets","bigPlanet","moveStars","ring","twin","switchRocketAnimation","arr","randomSize","size","w","h","Base","loadBackground","layerZero","layer","Level","renderLevel","exo","tropoBackground","troposphere","Game","log","failedLevel","newLevel","insAimate","keyboard","querySelector","allLetterEles","querySelectorAll","canvasEl","getContext","game","errorArr","starImageArr","rocketImg","instructions","instructionsHash","sliceIdx","posY","renderInstructions","star","textAlign","sen1","sen2","sen3","sen4","sen5","sen6","sen7","sen8","currentKey","currentIns","spliceAndAdd","startGame","cancelAnimationFrame","isAnimate","idx","length","assignSen","key","currSen","addEventListener","e","quoteSpanArr","inputValArr","finished","caughtErrors","charSpan","inputChar","classList","remove","includes","twc","metaKey","keyEle","code","shiftKey","toUpperCase","toLowerCase","audioButton","audioEle","audioSrc","audioArr","paused","rand","load","play","pause"],"sourceRoot":""}